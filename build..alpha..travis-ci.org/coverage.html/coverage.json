{"/home/travis/build/npmtest/node-npmtest-solr-client/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-solr-client/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":1,"37":1,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":2,"46":2,"47":1,"48":2,"49":2,"50":1,"51":1,"52":1,"53":1,"54":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1],"10":[1,1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1],"16":[1,1],"17":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":91,"loc":{"start":{"line":91,"column":77},"end":{"line":94,"column":10}}},"7":{"name":"(anonymous_7)","line":112,"loc":{"start":{"line":112,"column":83},"end":{"line":115,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":123,"loc":{"start":{"line":123,"column":77},"end":{"line":126,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":139,"loc":{"start":{"line":139,"column":12},"end":{"line":139,"column":40}},"skip":true},"10":{"name":"(anonymous_10)","line":147,"loc":{"start":{"line":147,"column":77},"end":{"line":150,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":158,"loc":{"start":{"line":158,"column":83},"end":{"line":161,"column":10}},"skip":true},"12":{"name":"(anonymous_12)","line":169,"loc":{"start":{"line":169,"column":79},"end":{"line":172,"column":10}},"skip":true},"13":{"name":"(anonymous_13)","line":180,"loc":{"start":{"line":180,"column":75},"end":{"line":183,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":195,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":194,"column":5}},"24":{"start":{"line":91,"column":8},"end":{"line":99,"column":10}},"25":{"start":{"line":98,"column":12},"end":{"line":98,"column":35}},"26":{"start":{"line":102,"column":8},"end":{"line":104,"column":63}},"27":{"start":{"line":105,"column":8},"end":{"line":105,"column":14}},"28":{"start":{"line":112,"column":8},"end":{"line":121,"column":10},"skip":true},"29":{"start":{"line":119,"column":12},"end":{"line":119,"column":55},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":48},"skip":true},"31":{"start":{"line":123,"column":8},"end":{"line":136,"column":10},"skip":true},"32":{"start":{"line":130,"column":12},"end":{"line":130,"column":76},"skip":true},"33":{"start":{"line":131,"column":12},"end":{"line":131,"column":73},"skip":true},"34":{"start":{"line":132,"column":12},"end":{"line":132,"column":74},"skip":true},"35":{"start":{"line":133,"column":12},"end":{"line":133,"column":79},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":145,"column":14},"skip":true},"39":{"start":{"line":143,"column":16},"end":{"line":143,"column":29},"skip":true},"40":{"start":{"line":144,"column":16},"end":{"line":144,"column":55},"skip":true},"41":{"start":{"line":147,"column":8},"end":{"line":156,"column":10},"skip":true},"42":{"start":{"line":154,"column":12},"end":{"line":154,"column":25},"skip":true},"43":{"start":{"line":155,"column":12},"end":{"line":155,"column":45},"skip":true},"44":{"start":{"line":158,"column":8},"end":{"line":167,"column":10},"skip":true},"45":{"start":{"line":165,"column":12},"end":{"line":165,"column":25},"skip":true},"46":{"start":{"line":166,"column":12},"end":{"line":166,"column":48},"skip":true},"47":{"start":{"line":169,"column":8},"end":{"line":178,"column":10},"skip":true},"48":{"start":{"line":176,"column":12},"end":{"line":176,"column":25},"skip":true},"49":{"start":{"line":177,"column":12},"end":{"line":177,"column":46},"skip":true},"50":{"start":{"line":180,"column":8},"end":{"line":189,"column":10},"skip":true},"51":{"start":{"line":187,"column":12},"end":{"line":187,"column":94},"skip":true},"52":{"start":{"line":188,"column":12},"end":{"line":188,"column":48},"skip":true},"53":{"start":{"line":192,"column":8},"end":{"line":192,"column":35},"skip":true},"54":{"start":{"line":193,"column":8},"end":{"line":193,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":105,"column":14}},{"start":{"line":111,"column":4},"end":{"line":193,"column":14},"skip":true}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":42},"end":{"line":91,"column":73}},{"start":{"line":91,"column":77},"end":{"line":99,"column":9}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":18},"end":{"line":102,"column":32}},{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},{"start":{"line":104,"column":12},"end":{"line":104,"column":61}}]},"11":{"line":112,"type":"binary-expr","locations":[{"start":{"line":112,"column":45},"end":{"line":112,"column":79},"skip":true},{"start":{"line":112,"column":83},"end":{"line":121,"column":9},"skip":true}]},"12":{"line":123,"type":"binary-expr","locations":[{"start":{"line":123,"column":42},"end":{"line":123,"column":73},"skip":true},{"start":{"line":123,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":48},"end":{"line":138,"column":85},"skip":true},{"start":{"line":139,"column":12},"end":{"line":145,"column":13},"skip":true}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":42},"end":{"line":147,"column":73},"skip":true},{"start":{"line":147,"column":77},"end":{"line":156,"column":9},"skip":true}]},"15":{"line":158,"type":"binary-expr","locations":[{"start":{"line":158,"column":45},"end":{"line":158,"column":79},"skip":true},{"start":{"line":158,"column":83},"end":{"line":167,"column":9},"skip":true}]},"16":{"line":169,"type":"binary-expr","locations":[{"start":{"line":169,"column":43},"end":{"line":169,"column":75},"skip":true},{"start":{"line":169,"column":79},"end":{"line":178,"column":9},"skip":true}]},"17":{"line":180,"type":"binary-expr","locations":[{"start":{"line":180,"column":41},"end":{"line":180,"column":71},"skip":true},{"start":{"line":180,"column":75},"end":{"line":189,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_solr_client */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (","            options,","            onError","        ) {","        /*","         * this function will test browsers's null-case handling-behavior-behavior","         */","            onError(null, options);","        };","","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||","            function (options, onError) {","            /*","             * this function will test buildCustomOrg's default handling-behavior","             */","                options = {};","                local.buildCustomOrg(options, onError);","            };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"91":1,"98":1,"102":1,"105":1,"112":1,"119":1,"120":1,"123":1,"130":1,"131":1,"132":1,"133":1,"134":1,"135":1,"138":1,"143":2,"144":2,"147":1,"154":2,"155":2,"158":1,"165":2,"166":2,"169":1,"176":2,"177":2,"180":1,"187":1,"188":1,"192":1,"193":1}},"/home/travis/build/npmtest/node-npmtest-solr-client/lib.npmtest_solr_client.js":{"path":"/home/travis/build/npmtest/node-npmtest-solr-client/lib.npmtest_solr_client.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":56}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":62}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_solr_client */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_solr_client = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_solr_client = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-solr-client/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-solr-client/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":3,"38":3,"39":3,"40":3,"41":0,"42":3,"43":3,"44":3,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,3],"16":[3,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":3,"8":3,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":315,"loc":{"start":{"line":315,"column":32},"end":{"line":315,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":326,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":325,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":47},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":296,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":303,"column":8},"end":{"line":303,"column":82},"skip":true},"70":{"start":{"line":306,"column":8},"end":{"line":308,"column":9},"skip":true},"71":{"start":{"line":307,"column":12},"end":{"line":307,"column":82},"skip":true},"72":{"start":{"line":310,"column":8},"end":{"line":312,"column":9},"skip":true},"73":{"start":{"line":311,"column":12},"end":{"line":311,"column":18},"skip":true},"74":{"start":{"line":313,"column":8},"end":{"line":313,"column":54},"skip":true},"75":{"start":{"line":314,"column":8},"end":{"line":314,"column":69},"skip":true},"76":{"start":{"line":315,"column":8},"end":{"line":323,"column":36},"skip":true},"77":{"start":{"line":316,"column":12},"end":{"line":316,"column":61},"skip":true},"78":{"start":{"line":317,"column":12},"end":{"line":320,"column":13},"skip":true},"79":{"start":{"line":318,"column":16},"end":{"line":318,"column":75},"skip":true},"80":{"start":{"line":319,"column":16},"end":{"line":319,"column":23},"skip":true},"81":{"start":{"line":321,"column":12},"end":{"line":321,"column":38},"skip":true},"82":{"start":{"line":322,"column":12},"end":{"line":322,"column":27},"skip":true},"83":{"start":{"line":324,"column":8},"end":{"line":324,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":55}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":324,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":297,"type":"binary-expr","locations":[{"start":{"line":297,"column":12},"end":{"line":297,"column":69},"skip":true},{"start":{"line":298,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":303,"type":"binary-expr","locations":[{"start":{"line":303,"column":43},"end":{"line":303,"column":75},"skip":true},{"start":{"line":303,"column":79},"end":{"line":303,"column":81},"skip":true}]},"25":{"line":306,"type":"if","locations":[{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true},{"start":{"line":306,"column":8},"end":{"line":306,"column":8},"skip":true}]},"26":{"line":310,"type":"if","locations":[{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true},{"start":{"line":310,"column":8},"end":{"line":310,"column":8},"skip":true}]},"27":{"line":313,"type":"binary-expr","locations":[{"start":{"line":313,"column":27},"end":{"line":313,"column":43},"skip":true},{"start":{"line":313,"column":47},"end":{"line":313,"column":53},"skip":true}]},"28":{"line":317,"type":"if","locations":[{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true},{"start":{"line":317,"column":12},"end":{"line":317,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-solr-client && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_solr_client */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_solr_client","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_solr_client.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        // bug-workaround - long $npm_package_buildCustomOrg","        /* jslint-ignore-begin */","        local.assetsDict['/assets.npmtest_solr_client.rollup.js'] =","            local.assetsDict['/assets.npmtest_solr_client.rollup.js'] ||","            local.fs.readFileSync(","                local.npmtest_solr_client.__dirname + '/lib.npmtest_solr_client.js',","                'utf8'","            ).replace((/^#!/), '//');","        /* jslint-ignore-end */","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":3,"127":3,"128":3,"129":3,"130":1,"133":3,"134":3,"139":3,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"296":1,"303":1,"306":1,"307":1,"310":1,"311":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"319":1,"321":1,"322":1,"324":1}},"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/main.js":{"path":"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/main.js","s":{"1":1},"b":{},"f":{},"fnMap":{},"statementMap":{"1":{"start":{"line":8,"column":0},"end":{"line":8,"column":49}}},"branchMap":{},"code":["/*!"," * solr client"," * Copyright(c) 2011-2012 HipSnip Limited"," * Author Rémy Loubradou <remyloubradou@gmail.com>"," * MIT Licensed"," */","","module.exports = exports = require(\"./lib/solr\");","","",""],"l":{"8":1}},"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/solr.js":{"path":"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/solr.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":1,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":1,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":1,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":1,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":1,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":1,"93":0,"94":0,"95":0,"96":0,"97":0,"98":1,"99":0,"100":1,"101":0,"102":0,"103":0,"104":0,"105":0,"106":1,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":1,"119":0,"120":1,"121":0,"122":1,"123":0,"124":1,"125":0,"126":1,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":1,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":1,"168":0,"169":1,"170":0,"171":1,"172":1,"173":0,"174":1,"175":0,"176":1,"177":0,"178":1,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":1,"194":0,"195":0,"196":0,"197":0,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":1,"209":0,"210":0,"211":0,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":1,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":0,"234":0,"235":0,"236":0,"237":0,"238":0,"239":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0},"fnMap":{"1":{"name":"createClient","line":49,"loc":{"start":{"line":49,"column":0},"end":{"line":49,"column":81}}},"2":{"name":"Client","line":81,"loc":{"start":{"line":81,"column":0},"end":{"line":81,"column":24}}},"3":{"name":"(anonymous_3)","line":114,"loc":{"start":{"line":114,"column":29},"end":{"line":114,"column":56}}},"4":{"name":"(anonymous_4)","line":127,"loc":{"start":{"line":127,"column":26},"end":{"line":127,"column":36}}},"5":{"name":"(anonymous_5)","line":146,"loc":{"start":{"line":146,"column":23},"end":{"line":146,"column":54}}},"6":{"name":"(anonymous_6)","line":170,"loc":{"start":{"line":170,"column":31},"end":{"line":170,"column":61}}},"7":{"name":"(anonymous_7)","line":197,"loc":{"start":{"line":197,"column":37},"end":{"line":197,"column":63}}},"8":{"name":"(anonymous_8)","line":222,"loc":{"start":{"line":222,"column":35},"end":{"line":222,"column":52}}},"9":{"name":"(anonymous_9)","line":224,"loc":{"start":{"line":224,"column":14},"end":{"line":224,"column":31}}},"10":{"name":"(anonymous_10)","line":260,"loc":{"start":{"line":260,"column":26},"end":{"line":260,"column":52}}},"11":{"name":"(anonymous_11)","line":282,"loc":{"start":{"line":282,"column":33},"end":{"line":282,"column":51}}},"12":{"name":"(anonymous_12)","line":297,"loc":{"start":{"line":297,"column":30},"end":{"line":297,"column":48}}},"13":{"name":"(anonymous_13)","line":315,"loc":{"start":{"line":315,"column":26},"end":{"line":315,"column":64}}},"14":{"name":"(anonymous_14)","line":343,"loc":{"start":{"line":343,"column":33},"end":{"line":343,"column":76}}},"15":{"name":"(anonymous_15)","line":368,"loc":{"start":{"line":368,"column":30},"end":{"line":368,"column":59}}},"16":{"name":"(anonymous_16)","line":394,"loc":{"start":{"line":394,"column":33},"end":{"line":394,"column":65}}},"17":{"name":"(anonymous_17)","line":420,"loc":{"start":{"line":420,"column":29},"end":{"line":420,"column":55}}},"18":{"name":"(anonymous_18)","line":436,"loc":{"start":{"line":436,"column":28},"end":{"line":436,"column":54}}},"19":{"name":"(anonymous_19)","line":458,"loc":{"start":{"line":458,"column":28},"end":{"line":458,"column":46}}},"20":{"name":"(anonymous_20)","line":478,"loc":{"start":{"line":478,"column":26},"end":{"line":478,"column":57}}},"21":{"name":"(anonymous_21)","line":486,"loc":{"start":{"line":486,"column":38},"end":{"line":486,"column":55}}},"22":{"name":"(anonymous_22)","line":516,"loc":{"start":{"line":516,"column":26},"end":{"line":516,"column":50}}},"23":{"name":"(anonymous_23)","line":532,"loc":{"start":{"line":532,"column":37},"end":{"line":532,"column":66}}},"24":{"name":"(anonymous_24)","line":547,"loc":{"start":{"line":547,"column":29},"end":{"line":547,"column":47}}},"25":{"name":"(anonymous_25)","line":565,"loc":{"start":{"line":565,"column":25},"end":{"line":565,"column":49}}},"26":{"name":"(anonymous_26)","line":582,"loc":{"start":{"line":582,"column":23},"end":{"line":582,"column":55}}},"27":{"name":"(anonymous_27)","line":602,"loc":{"start":{"line":602,"column":35},"end":{"line":602,"column":52}}},"28":{"name":"(anonymous_28)","line":638,"loc":{"start":{"line":638,"column":24},"end":{"line":638,"column":56}}},"29":{"name":"(anonymous_29)","line":659,"loc":{"start":{"line":659,"column":35},"end":{"line":659,"column":52}}},"30":{"name":"(anonymous_30)","line":683,"loc":{"start":{"line":683,"column":25},"end":{"line":683,"column":35}}},"31":{"name":"(anonymous_31)","line":695,"loc":{"start":{"line":695,"column":31},"end":{"line":695,"column":41}}},"32":{"name":"(anonymous_32)","line":706,"loc":{"start":{"line":706,"column":30},"end":{"line":706,"column":40}}},"33":{"name":"(anonymous_33)","line":727,"loc":{"start":{"line":727,"column":24},"end":{"line":727,"column":42}}},"34":{"name":"pickProtocol","line":739,"loc":{"start":{"line":739,"column":0},"end":{"line":739,"column":29}}},"35":{"name":"pickJSON","line":751,"loc":{"start":{"line":751,"column":0},"end":{"line":751,"column":25}}},"36":{"name":"postJSON","line":776,"loc":{"start":{"line":776,"column":0},"end":{"line":776,"column":34}}},"37":{"name":"onError","line":801,"loc":{"start":{"line":801,"column":22},"end":{"line":801,"column":43}}},"38":{"name":"postForm","line":832,"loc":{"start":{"line":832,"column":0},"end":{"line":832,"column":34}}},"39":{"name":"onError","line":857,"loc":{"start":{"line":857,"column":22},"end":{"line":857,"column":43}}},"40":{"name":"getJSON","line":887,"loc":{"start":{"line":887,"column":0},"end":{"line":887,"column":33}}},"41":{"name":"(anonymous_41)","line":913,"loc":{"start":{"line":913,"column":22},"end":{"line":913,"column":35}}},"42":{"name":"handleJSONResponse","line":929,"loc":{"start":{"line":929,"column":0},"end":{"line":929,"column":54}}},"43":{"name":"onJSONResponse","line":930,"loc":{"start":{"line":930,"column":10},"end":{"line":930,"column":43}}},"44":{"name":"(anonymous_44)","line":938,"loc":{"start":{"line":938,"column":25},"end":{"line":938,"column":40}}},"45":{"name":"(anonymous_45)","line":942,"loc":{"start":{"line":942,"column":24},"end":{"line":942,"column":34}}}},"statementMap":{"1":{"start":{"line":13,"column":0},"end":{"line":24,"column":45}},"2":{"start":{"line":30,"column":0},"end":{"line":30,"column":36}},"3":{"start":{"line":49,"column":0},"end":{"line":61,"column":1}},"4":{"start":{"line":50,"column":2},"end":{"line":59,"column":5}},"5":{"start":{"line":60,"column":2},"end":{"line":60,"column":29}},"6":{"start":{"line":81,"column":0},"end":{"line":102,"column":1}},"7":{"start":{"line":82,"column":3},"end":{"line":92,"column":5}},"8":{"start":{"line":95,"column":3},"end":{"line":95,"column":130}},"9":{"start":{"line":96,"column":3},"end":{"line":96,"column":34}},"10":{"start":{"line":97,"column":3},"end":{"line":97,"column":34}},"11":{"start":{"line":98,"column":3},"end":{"line":98,"column":50}},"12":{"start":{"line":99,"column":3},"end":{"line":99,"column":42}},"13":{"start":{"line":100,"column":3},"end":{"line":100,"column":38}},"14":{"start":{"line":101,"column":3},"end":{"line":101,"column":32}},"15":{"start":{"line":114,"column":0},"end":{"line":118,"column":1}},"16":{"start":{"line":115,"column":3},"end":{"line":115,"column":19}},"17":{"start":{"line":116,"column":3},"end":{"line":116,"column":100}},"18":{"start":{"line":117,"column":3},"end":{"line":117,"column":15}},"19":{"start":{"line":127,"column":0},"end":{"line":131,"column":1}},"20":{"start":{"line":128,"column":3},"end":{"line":128,"column":19}},"21":{"start":{"line":129,"column":3},"end":{"line":129,"column":37}},"22":{"start":{"line":130,"column":3},"end":{"line":130,"column":15}},"23":{"start":{"line":146,"column":0},"end":{"line":154,"column":1}},"24":{"start":{"line":147,"column":3},"end":{"line":150,"column":4}},"25":{"start":{"line":148,"column":6},"end":{"line":148,"column":25}},"26":{"start":{"line":149,"column":6},"end":{"line":149,"column":19}},"27":{"start":{"line":151,"column":3},"end":{"line":151,"column":34}},"28":{"start":{"line":152,"column":3},"end":{"line":152,"column":46}},"29":{"start":{"line":153,"column":3},"end":{"line":153,"column":45}},"30":{"start":{"line":170,"column":0},"end":{"line":179,"column":1}},"31":{"start":{"line":171,"column":3},"end":{"line":174,"column":4}},"32":{"start":{"line":172,"column":6},"end":{"line":172,"column":23}},"33":{"start":{"line":173,"column":6},"end":{"line":173,"column":17}},"34":{"start":{"line":175,"column":3},"end":{"line":175,"column":42}},"35":{"start":{"line":176,"column":3},"end":{"line":176,"column":29}},"36":{"start":{"line":178,"column":3},"end":{"line":178,"column":62}},"37":{"start":{"line":197,"column":0},"end":{"line":211,"column":1}},"38":{"start":{"line":198,"column":3},"end":{"line":198,"column":49}},"39":{"start":{"line":199,"column":3},"end":{"line":199,"column":75}},"40":{"start":{"line":200,"column":3},"end":{"line":200,"column":109}},"41":{"start":{"line":201,"column":3},"end":{"line":201,"column":96}},"42":{"start":{"line":202,"column":3},"end":{"line":206,"column":4}},"43":{"start":{"line":203,"column":6},"end":{"line":203,"column":54}},"44":{"start":{"line":205,"column":6},"end":{"line":205,"column":55}},"45":{"start":{"line":208,"column":3},"end":{"line":208,"column":74}},"46":{"start":{"line":209,"column":3},"end":{"line":209,"column":57}},"47":{"start":{"line":210,"column":3},"end":{"line":210,"column":43}},"48":{"start":{"line":222,"column":0},"end":{"line":246,"column":1}},"49":{"start":{"line":223,"column":3},"end":{"line":227,"column":17}},"50":{"start":{"line":225,"column":9},"end":{"line":225,"column":24}},"51":{"start":{"line":228,"column":3},"end":{"line":231,"column":5}},"52":{"start":{"line":232,"column":3},"end":{"line":234,"column":4}},"53":{"start":{"line":233,"column":6},"end":{"line":233,"column":60}},"54":{"start":{"line":235,"column":3},"end":{"line":235,"column":57}},"55":{"start":{"line":236,"column":3},"end":{"line":240,"column":5}},"56":{"start":{"line":241,"column":3},"end":{"line":241,"column":52}},"57":{"start":{"line":242,"column":3},"end":{"line":242,"column":45}},"58":{"start":{"line":243,"column":3},"end":{"line":243,"column":41}},"59":{"start":{"line":244,"column":3},"end":{"line":244,"column":58}},"60":{"start":{"line":245,"column":3},"end":{"line":245,"column":18}},"61":{"start":{"line":260,"column":0},"end":{"line":269,"column":1}},"62":{"start":{"line":261,"column":3},"end":{"line":264,"column":4}},"63":{"start":{"line":262,"column":6},"end":{"line":262,"column":25}},"64":{"start":{"line":263,"column":6},"end":{"line":263,"column":19}},"65":{"start":{"line":265,"column":3},"end":{"line":267,"column":5}},"66":{"start":{"line":268,"column":3},"end":{"line":268,"column":37}},"67":{"start":{"line":282,"column":0},"end":{"line":284,"column":1}},"68":{"start":{"line":283,"column":3},"end":{"line":283,"column":59}},"69":{"start":{"line":297,"column":0},"end":{"line":299,"column":1}},"70":{"start":{"line":298,"column":3},"end":{"line":298,"column":56}},"71":{"start":{"line":315,"column":0},"end":{"line":327,"column":1}},"72":{"start":{"line":316,"column":3},"end":{"line":319,"column":4}},"73":{"start":{"line":317,"column":6},"end":{"line":317,"column":25}},"74":{"start":{"line":318,"column":6},"end":{"line":318,"column":19}},"75":{"start":{"line":320,"column":3},"end":{"line":320,"column":34}},"76":{"start":{"line":321,"column":3},"end":{"line":325,"column":5}},"77":{"start":{"line":326,"column":3},"end":{"line":326,"column":45}},"78":{"start":{"line":343,"column":0},"end":{"line":353,"column":1}},"79":{"start":{"line":344,"column":3},"end":{"line":347,"column":4}},"80":{"start":{"line":345,"column":6},"end":{"line":345,"column":25}},"81":{"start":{"line":346,"column":6},"end":{"line":346,"column":19}},"82":{"start":{"line":348,"column":3},"end":{"line":348,"column":36}},"83":{"start":{"line":349,"column":3},"end":{"line":349,"column":34}},"84":{"start":{"line":351,"column":3},"end":{"line":351,"column":58}},"85":{"start":{"line":352,"column":3},"end":{"line":352,"column":53}},"86":{"start":{"line":368,"column":0},"end":{"line":379,"column":1}},"87":{"start":{"line":369,"column":3},"end":{"line":372,"column":4}},"88":{"start":{"line":370,"column":6},"end":{"line":370,"column":25}},"89":{"start":{"line":371,"column":6},"end":{"line":371,"column":19}},"90":{"start":{"line":373,"column":3},"end":{"line":377,"column":5}},"91":{"start":{"line":378,"column":3},"end":{"line":378,"column":45}},"92":{"start":{"line":394,"column":0},"end":{"line":405,"column":1}},"93":{"start":{"line":395,"column":3},"end":{"line":398,"column":4}},"94":{"start":{"line":396,"column":6},"end":{"line":396,"column":25}},"95":{"start":{"line":397,"column":6},"end":{"line":397,"column":19}},"96":{"start":{"line":399,"column":3},"end":{"line":403,"column":5}},"97":{"start":{"line":404,"column":3},"end":{"line":404,"column":45}},"98":{"start":{"line":420,"column":0},"end":{"line":422,"column":1}},"99":{"start":{"line":421,"column":3},"end":{"line":421,"column":53}},"100":{"start":{"line":436,"column":0},"end":{"line":445,"column":1}},"101":{"start":{"line":437,"column":3},"end":{"line":440,"column":4}},"102":{"start":{"line":438,"column":6},"end":{"line":438,"column":25}},"103":{"start":{"line":439,"column":6},"end":{"line":439,"column":19}},"104":{"start":{"line":441,"column":3},"end":{"line":443,"column":5}},"105":{"start":{"line":444,"column":3},"end":{"line":444,"column":37}},"106":{"start":{"line":458,"column":0},"end":{"line":463,"column":1}},"107":{"start":{"line":459,"column":3},"end":{"line":461,"column":5}},"108":{"start":{"line":462,"column":3},"end":{"line":462,"column":37}},"109":{"start":{"line":478,"column":0},"end":{"line":502,"column":1}},"110":{"start":{"line":479,"column":3},"end":{"line":482,"column":4}},"111":{"start":{"line":480,"column":6},"end":{"line":480,"column":25}},"112":{"start":{"line":481,"column":6},"end":{"line":481,"column":19}},"113":{"start":{"line":484,"column":3},"end":{"line":484,"column":60}},"114":{"start":{"line":485,"column":3},"end":{"line":489,"column":41}},"115":{"start":{"line":487,"column":33},"end":{"line":487,"column":48}},"116":{"start":{"line":491,"column":3},"end":{"line":500,"column":5}},"117":{"start":{"line":501,"column":3},"end":{"line":501,"column":36}},"118":{"start":{"line":516,"column":0},"end":{"line":518,"column":1}},"119":{"start":{"line":517,"column":3},"end":{"line":517,"column":57}},"120":{"start":{"line":532,"column":0},"end":{"line":534,"column":1}},"121":{"start":{"line":533,"column":3},"end":{"line":533,"column":67}},"122":{"start":{"line":547,"column":0},"end":{"line":549,"column":1}},"123":{"start":{"line":548,"column":3},"end":{"line":548,"column":39}},"124":{"start":{"line":565,"column":0},"end":{"line":567,"column":1}},"125":{"start":{"line":566,"column":3},"end":{"line":566,"column":56}},"126":{"start":{"line":582,"column":0},"end":{"line":624,"column":1}},"127":{"start":{"line":584,"column":3},"end":{"line":584,"column":23}},"128":{"start":{"line":585,"column":3},"end":{"line":593,"column":4}},"129":{"start":{"line":586,"column":6},"end":{"line":586,"column":23}},"130":{"start":{"line":587,"column":9},"end":{"line":593,"column":4}},"131":{"start":{"line":588,"column":6},"end":{"line":588,"column":34}},"132":{"start":{"line":589,"column":9},"end":{"line":593,"column":4}},"133":{"start":{"line":590,"column":6},"end":{"line":590,"column":49}},"134":{"start":{"line":591,"column":9},"end":{"line":593,"column":4}},"135":{"start":{"line":592,"column":6},"end":{"line":592,"column":26}},"136":{"start":{"line":594,"column":3},"end":{"line":594,"column":17}},"137":{"start":{"line":596,"column":3},"end":{"line":600,"column":4}},"138":{"start":{"line":597,"column":6},"end":{"line":597,"column":96}},"139":{"start":{"line":599,"column":6},"end":{"line":599,"column":78}},"140":{"start":{"line":602,"column":3},"end":{"line":604,"column":27}},"141":{"start":{"line":603,"column":17},"end":{"line":603,"column":32}},"142":{"start":{"line":606,"column":3},"end":{"line":606,"column":129}},"143":{"start":{"line":608,"column":3},"end":{"line":623,"column":4}},"144":{"start":{"line":609,"column":6},"end":{"line":617,"column":8}},"145":{"start":{"line":618,"column":6},"end":{"line":618,"column":39}},"146":{"start":{"line":622,"column":6},"end":{"line":622,"column":49}},"147":{"start":{"line":638,"column":0},"end":{"line":674,"column":1}},"148":{"start":{"line":640,"column":3},"end":{"line":640,"column":23}},"149":{"start":{"line":641,"column":3},"end":{"line":649,"column":4}},"150":{"start":{"line":642,"column":6},"end":{"line":642,"column":23}},"151":{"start":{"line":643,"column":9},"end":{"line":649,"column":4}},"152":{"start":{"line":644,"column":6},"end":{"line":644,"column":34}},"153":{"start":{"line":645,"column":9},"end":{"line":649,"column":4}},"154":{"start":{"line":646,"column":6},"end":{"line":646,"column":49}},"155":{"start":{"line":647,"column":9},"end":{"line":649,"column":4}},"156":{"start":{"line":648,"column":6},"end":{"line":648,"column":26}},"157":{"start":{"line":651,"column":3},"end":{"line":651,"column":17}},"158":{"start":{"line":653,"column":3},"end":{"line":657,"column":4}},"159":{"start":{"line":654,"column":6},"end":{"line":654,"column":96}},"160":{"start":{"line":656,"column":6},"end":{"line":656,"column":78}},"161":{"start":{"line":659,"column":3},"end":{"line":661,"column":27}},"162":{"start":{"line":660,"column":17},"end":{"line":660,"column":32}},"163":{"start":{"line":663,"column":3},"end":{"line":672,"column":5}},"164":{"start":{"line":673,"column":3},"end":{"line":673,"column":36}},"165":{"start":{"line":683,"column":0},"end":{"line":685,"column":1}},"166":{"start":{"line":684,"column":3},"end":{"line":684,"column":34}},"167":{"start":{"line":695,"column":0},"end":{"line":697,"column":1}},"168":{"start":{"line":696,"column":3},"end":{"line":696,"column":34}},"169":{"start":{"line":706,"column":0},"end":{"line":708,"column":1}},"170":{"start":{"line":707,"column":3},"end":{"line":707,"column":27}},"171":{"start":{"line":714,"column":0},"end":{"line":714,"column":64}},"172":{"start":{"line":727,"column":0},"end":{"line":729,"column":1}},"173":{"start":{"line":728,"column":3},"end":{"line":728,"column":54}},"174":{"start":{"line":739,"column":0},"end":{"line":741,"column":1}},"175":{"start":{"line":740,"column":3},"end":{"line":740,"column":32}},"176":{"start":{"line":751,"column":0},"end":{"line":753,"column":1}},"177":{"start":{"line":752,"column":3},"end":{"line":752,"column":34}},"178":{"start":{"line":776,"column":0},"end":{"line":809,"column":1}},"179":{"start":{"line":777,"column":3},"end":{"line":781,"column":5}},"180":{"start":{"line":782,"column":3},"end":{"line":784,"column":4}},"181":{"start":{"line":783,"column":6},"end":{"line":783,"column":54}},"182":{"start":{"line":785,"column":3},"end":{"line":791,"column":5}},"183":{"start":{"line":793,"column":3},"end":{"line":795,"column":4}},"184":{"start":{"line":794,"column":6},"end":{"line":794,"column":35}},"185":{"start":{"line":797,"column":3},"end":{"line":797,"column":62}},"186":{"start":{"line":799,"column":3},"end":{"line":799,"column":80}},"187":{"start":{"line":801,"column":3},"end":{"line":803,"column":6}},"188":{"start":{"line":802,"column":6},"end":{"line":802,"column":39}},"189":{"start":{"line":802,"column":20},"end":{"line":802,"column":39}},"190":{"start":{"line":805,"column":3},"end":{"line":805,"column":30}},"191":{"start":{"line":806,"column":3},"end":{"line":806,"column":17}},"192":{"start":{"line":808,"column":3},"end":{"line":808,"column":18}},"193":{"start":{"line":832,"column":0},"end":{"line":865,"column":1}},"194":{"start":{"line":833,"column":3},"end":{"line":837,"column":5}},"195":{"start":{"line":838,"column":3},"end":{"line":840,"column":4}},"196":{"start":{"line":839,"column":6},"end":{"line":839,"column":54}},"197":{"start":{"line":841,"column":3},"end":{"line":847,"column":5}},"198":{"start":{"line":849,"column":3},"end":{"line":851,"column":4}},"199":{"start":{"line":850,"column":6},"end":{"line":850,"column":35}},"200":{"start":{"line":853,"column":3},"end":{"line":853,"column":62}},"201":{"start":{"line":855,"column":3},"end":{"line":855,"column":80}},"202":{"start":{"line":857,"column":3},"end":{"line":859,"column":6}},"203":{"start":{"line":858,"column":6},"end":{"line":858,"column":39}},"204":{"start":{"line":858,"column":20},"end":{"line":858,"column":39}},"205":{"start":{"line":861,"column":3},"end":{"line":861,"column":32}},"206":{"start":{"line":862,"column":3},"end":{"line":862,"column":17}},"207":{"start":{"line":864,"column":3},"end":{"line":864,"column":18}},"208":{"start":{"line":887,"column":0},"end":{"line":917,"column":1}},"209":{"start":{"line":888,"column":3},"end":{"line":890,"column":5}},"210":{"start":{"line":891,"column":3},"end":{"line":896,"column":5}},"211":{"start":{"line":898,"column":3},"end":{"line":900,"column":4}},"212":{"start":{"line":899,"column":6},"end":{"line":899,"column":35}},"213":{"start":{"line":902,"column":4},"end":{"line":907,"column":4}},"214":{"start":{"line":903,"column":6},"end":{"line":905,"column":8}},"215":{"start":{"line":906,"column":6},"end":{"line":906,"column":32}},"216":{"start":{"line":909,"column":3},"end":{"line":909,"column":58}},"217":{"start":{"line":911,"column":3},"end":{"line":911,"column":80}},"218":{"start":{"line":913,"column":3},"end":{"line":915,"column":6}},"219":{"start":{"line":914,"column":6},"end":{"line":914,"column":39}},"220":{"start":{"line":914,"column":20},"end":{"line":914,"column":39}},"221":{"start":{"line":916,"column":3},"end":{"line":916,"column":18}},"222":{"start":{"line":929,"column":0},"end":{"line":957,"column":1}},"223":{"start":{"line":930,"column":3},"end":{"line":956,"column":5}},"224":{"start":{"line":931,"column":6},"end":{"line":931,"column":20}},"225":{"start":{"line":932,"column":6},"end":{"line":932,"column":21}},"226":{"start":{"line":933,"column":6},"end":{"line":933,"column":22}},"227":{"start":{"line":936,"column":6},"end":{"line":936,"column":36}},"228":{"start":{"line":938,"column":6},"end":{"line":940,"column":9}},"229":{"start":{"line":939,"column":9},"end":{"line":939,"column":23}},"230":{"start":{"line":942,"column":6},"end":{"line":955,"column":9}},"231":{"start":{"line":943,"column":9},"end":{"line":954,"column":10}},"232":{"start":{"line":944,"column":12},"end":{"line":944,"column":55}},"233":{"start":{"line":945,"column":12},"end":{"line":945,"column":45}},"234":{"start":{"line":945,"column":26},"end":{"line":945,"column":45}},"235":{"start":{"line":947,"column":12},"end":{"line":953,"column":13}},"236":{"start":{"line":948,"column":15},"end":{"line":948,"column":51}},"237":{"start":{"line":950,"column":15},"end":{"line":950,"column":27}},"238":{"start":{"line":952,"column":15},"end":{"line":952,"column":48}},"239":{"start":{"line":952,"column":29},"end":{"line":952,"column":48}}},"branchMap":{"1":{"line":50,"type":"cond-expr","locations":[{"start":{"line":50,"column":45},"end":{"line":50,"column":49}},{"start":{"line":50,"column":52},"end":{"line":59,"column":4}}]},"2":{"line":83,"type":"binary-expr","locations":[{"start":{"line":83,"column":13},"end":{"line":83,"column":25}},{"start":{"line":83,"column":29},"end":{"line":83,"column":40}}]},"3":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":13},"end":{"line":84,"column":25}},{"start":{"line":84,"column":29},"end":{"line":84,"column":35}}]},"4":{"line":85,"type":"binary-expr","locations":[{"start":{"line":85,"column":13},"end":{"line":85,"column":25}},{"start":{"line":85,"column":29},"end":{"line":85,"column":31}}]},"5":{"line":86,"type":"binary-expr","locations":[{"start":{"line":86,"column":13},"end":{"line":86,"column":25}},{"start":{"line":86,"column":29},"end":{"line":86,"column":36}}]},"6":{"line":88,"type":"binary-expr","locations":[{"start":{"line":88,"column":15},"end":{"line":88,"column":29}},{"start":{"line":88,"column":33},"end":{"line":88,"column":38}}]},"7":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":15},"end":{"line":89,"column":29}},{"start":{"line":89,"column":33},"end":{"line":89,"column":38}}]},"8":{"line":90,"type":"binary-expr","locations":[{"start":{"line":90,"column":35},"end":{"line":90,"column":70}},{"start":{"line":90,"column":74},"end":{"line":90,"column":79}}]},"9":{"line":91,"type":"binary-expr","locations":[{"start":{"line":91,"column":19},"end":{"line":91,"column":38}},{"start":{"line":91,"column":42},"end":{"line":91,"column":62}}]},"10":{"line":95,"type":"cond-expr","locations":[{"start":{"line":95,"column":105},"end":{"line":95,"column":113}},{"start":{"line":95,"column":116},"end":{"line":95,"column":129}}]},"11":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":3},"end":{"line":147,"column":3}},{"start":{"line":147,"column":3},"end":{"line":147,"column":3}}]},"12":{"line":152,"type":"cond-expr","locations":[{"start":{"line":152,"column":32},"end":{"line":152,"column":36}},{"start":{"line":152,"column":39},"end":{"line":152,"column":45}}]},"13":{"line":171,"type":"if","locations":[{"start":{"line":171,"column":3},"end":{"line":171,"column":3}},{"start":{"line":171,"column":3},"end":{"line":171,"column":3}}]},"14":{"line":175,"type":"cond-expr","locations":[{"start":{"line":175,"column":30},"end":{"line":175,"column":33}},{"start":{"line":175,"column":36},"end":{"line":175,"column":41}}]},"15":{"line":198,"type":"binary-expr","locations":[{"start":{"line":198,"column":24},"end":{"line":198,"column":42}},{"start":{"line":198,"column":46},"end":{"line":198,"column":48}}]},"16":{"line":199,"type":"cond-expr","locations":[{"start":{"line":199,"column":48},"end":{"line":199,"column":50}},{"start":{"line":199,"column":53},"end":{"line":199,"column":73}}]},"17":{"line":199,"type":"binary-expr","locations":[{"start":{"line":199,"column":53},"end":{"line":199,"column":67}},{"start":{"line":199,"column":71},"end":{"line":199,"column":73}}]},"18":{"line":200,"type":"cond-expr","locations":[{"start":{"line":200,"column":74},"end":{"line":200,"column":79}},{"start":{"line":200,"column":82},"end":{"line":200,"column":107}}]},"19":{"line":201,"type":"binary-expr","locations":[{"start":{"line":201,"column":46},"end":{"line":201,"column":65}},{"start":{"line":201,"column":69},"end":{"line":201,"column":95}}]},"20":{"line":202,"type":"if","locations":[{"start":{"line":202,"column":3},"end":{"line":202,"column":3}},{"start":{"line":202,"column":3},"end":{"line":202,"column":3}}]},"21":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":3},"end":{"line":232,"column":3}},{"start":{"line":232,"column":3},"end":{"line":232,"column":3}}]},"22":{"line":235,"type":"cond-expr","locations":[{"start":{"line":235,"column":40},"end":{"line":235,"column":47}},{"start":{"line":235,"column":50},"end":{"line":235,"column":56}}]},"23":{"line":261,"type":"if","locations":[{"start":{"line":261,"column":3},"end":{"line":261,"column":3}},{"start":{"line":261,"column":3},"end":{"line":261,"column":3}}]},"24":{"line":266,"type":"binary-expr","locations":[{"start":{"line":266,"column":15},"end":{"line":266,"column":22}},{"start":{"line":266,"column":26},"end":{"line":266,"column":28}}]},"25":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":3},"end":{"line":316,"column":3}},{"start":{"line":316,"column":3},"end":{"line":316,"column":3}}]},"26":{"line":344,"type":"if","locations":[{"start":{"line":344,"column":3},"end":{"line":344,"column":3}},{"start":{"line":344,"column":3},"end":{"line":344,"column":3}}]},"27":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":3},"end":{"line":369,"column":3}},{"start":{"line":369,"column":3},"end":{"line":369,"column":3}}]},"28":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":3},"end":{"line":395,"column":3}},{"start":{"line":395,"column":3},"end":{"line":395,"column":3}}]},"29":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":3},"end":{"line":437,"column":3}},{"start":{"line":437,"column":3},"end":{"line":437,"column":3}}]},"30":{"line":442,"type":"binary-expr","locations":[{"start":{"line":442,"column":17},"end":{"line":442,"column":24}},{"start":{"line":442,"column":28},"end":{"line":442,"column":30}}]},"31":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":3},"end":{"line":479,"column":3}},{"start":{"line":479,"column":3},"end":{"line":479,"column":3}}]},"32":{"line":585,"type":"if","locations":[{"start":{"line":585,"column":3},"end":{"line":585,"column":3}},{"start":{"line":585,"column":3},"end":{"line":585,"column":3}}]},"33":{"line":587,"type":"if","locations":[{"start":{"line":587,"column":9},"end":{"line":587,"column":9}},{"start":{"line":587,"column":9},"end":{"line":587,"column":9}}]},"34":{"line":587,"type":"binary-expr","locations":[{"start":{"line":587,"column":13},"end":{"line":587,"column":35}},{"start":{"line":587,"column":41},"end":{"line":587,"column":68}}]},"35":{"line":589,"type":"if","locations":[{"start":{"line":589,"column":9},"end":{"line":589,"column":9}},{"start":{"line":589,"column":9},"end":{"line":589,"column":9}}]},"36":{"line":591,"type":"if","locations":[{"start":{"line":591,"column":9},"end":{"line":591,"column":9}},{"start":{"line":591,"column":9},"end":{"line":591,"column":9}}]},"37":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":3},"end":{"line":596,"column":3}},{"start":{"line":596,"column":3},"end":{"line":596,"column":3}}]},"38":{"line":608,"type":"if","locations":[{"start":{"line":608,"column":3},"end":{"line":608,"column":3}},{"start":{"line":608,"column":3},"end":{"line":608,"column":3}}]},"39":{"line":608,"type":"binary-expr","locations":[{"start":{"line":608,"column":7},"end":{"line":608,"column":57}},{"start":{"line":608,"column":61},"end":{"line":608,"column":120}}]},"40":{"line":641,"type":"if","locations":[{"start":{"line":641,"column":3},"end":{"line":641,"column":3}},{"start":{"line":641,"column":3},"end":{"line":641,"column":3}}]},"41":{"line":643,"type":"if","locations":[{"start":{"line":643,"column":9},"end":{"line":643,"column":9}},{"start":{"line":643,"column":9},"end":{"line":643,"column":9}}]},"42":{"line":645,"type":"if","locations":[{"start":{"line":645,"column":9},"end":{"line":645,"column":9}},{"start":{"line":645,"column":9},"end":{"line":645,"column":9}}]},"43":{"line":647,"type":"if","locations":[{"start":{"line":647,"column":9},"end":{"line":647,"column":9}},{"start":{"line":647,"column":9},"end":{"line":647,"column":9}}]},"44":{"line":653,"type":"if","locations":[{"start":{"line":653,"column":3},"end":{"line":653,"column":3}},{"start":{"line":653,"column":3},"end":{"line":653,"column":3}}]},"45":{"line":740,"type":"cond-expr","locations":[{"start":{"line":740,"column":19},"end":{"line":740,"column":24}},{"start":{"line":740,"column":27},"end":{"line":740,"column":31}}]},"46":{"line":752,"type":"cond-expr","locations":[{"start":{"line":752,"column":19},"end":{"line":752,"column":26}},{"start":{"line":752,"column":29},"end":{"line":752,"column":33}}]},"47":{"line":782,"type":"if","locations":[{"start":{"line":782,"column":3},"end":{"line":782,"column":3}},{"start":{"line":782,"column":3},"end":{"line":782,"column":3}}]},"48":{"line":793,"type":"if","locations":[{"start":{"line":793,"column":3},"end":{"line":793,"column":3}},{"start":{"line":793,"column":3},"end":{"line":793,"column":3}}]},"49":{"line":802,"type":"if","locations":[{"start":{"line":802,"column":6},"end":{"line":802,"column":6}},{"start":{"line":802,"column":6},"end":{"line":802,"column":6}}]},"50":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":3},"end":{"line":838,"column":3}},{"start":{"line":838,"column":3},"end":{"line":838,"column":3}}]},"51":{"line":849,"type":"if","locations":[{"start":{"line":849,"column":3},"end":{"line":849,"column":3}},{"start":{"line":849,"column":3},"end":{"line":849,"column":3}}]},"52":{"line":858,"type":"if","locations":[{"start":{"line":858,"column":6},"end":{"line":858,"column":6}},{"start":{"line":858,"column":6},"end":{"line":858,"column":6}}]},"53":{"line":898,"type":"if","locations":[{"start":{"line":898,"column":3},"end":{"line":898,"column":3}},{"start":{"line":898,"column":3},"end":{"line":898,"column":3}}]},"54":{"line":902,"type":"if","locations":[{"start":{"line":902,"column":4},"end":{"line":902,"column":4}},{"start":{"line":902,"column":4},"end":{"line":902,"column":4}}]},"55":{"line":914,"type":"if","locations":[{"start":{"line":914,"column":6},"end":{"line":914,"column":6}},{"start":{"line":914,"column":6},"end":{"line":914,"column":6}}]},"56":{"line":943,"type":"if","locations":[{"start":{"line":943,"column":9},"end":{"line":943,"column":9}},{"start":{"line":943,"column":9},"end":{"line":943,"column":9}}]},"57":{"line":943,"type":"binary-expr","locations":[{"start":{"line":943,"column":12},"end":{"line":943,"column":37}},{"start":{"line":943,"column":41},"end":{"line":943,"column":66}}]},"58":{"line":945,"type":"if","locations":[{"start":{"line":945,"column":12},"end":{"line":945,"column":12}},{"start":{"line":945,"column":12},"end":{"line":945,"column":12}}]},"59":{"line":952,"type":"if","locations":[{"start":{"line":952,"column":15},"end":{"line":952,"column":15}},{"start":{"line":952,"column":15},"end":{"line":952,"column":15}}]}},"code":["/*!"," * solr client"," * Copyright(c) 2011-2012 HipSnip Limited"," * Copyright(c) 2013-2014 Rémy Loubradou"," * Author Rémy Loubradou <remyloubradou@gmail.com>"," * MIT Licensed"," */","","/**"," * Load dependencies"," */","","var http = require('http'),","   https = require('https'),","   Query = require('./query'),","   Collection = require('./collection'),","   querystring = require('querystring'),","   format = require('./utils/format'),","   SolrError = require('./error/solr-error'),","   JSONStream = require('JSONStream'),","   duplexer = require('duplexer'),","   request = require('request'),","   JSONbig = require('json-bigint'),","   versionUtils = require('./utils/version');","","/**"," * Expose `createClient()`."," */","","exports.createClient = createClient;","","/**"," * Create an instance of `Client`"," *"," * @param {String|Object} [host='127.0.0.1'] - IP address or host address of the Solr server"," * @param {Number|String} [port='8983'] - port of the Solr server"," * @param {String} [core=''] - name of the Solr core requested"," * @param {String} [path='/solr'] - root path of all requests"," * @param {http.Agent} [agent] - HTTP Agent which is used for pooling sockets used in HTTP(s) client requests"," * @param {Boolean} [secure=false] - if true HTTPS will be used instead of HTTP"," * @param {Boolean} [bigint=false] - if true JSONbig serializer/deserializer will be used instead"," *                                    of JSON native serializer/deserializer"," * @param solrVersion ['3.2', '4.0', '5.0', '5.1'], check lib/utils/version.js for full reference"," *"," * @return {Client}"," * @api public"," */","","function createClient(host, port, core, path, agent, secure, bigint, solrVersion){","  var options = (typeof host === 'object') ? host : {","      host : host,","      port : port,","      core : core,","      path : path,","      agent : agent,","      secure : secure,","      bigint : bigint,","      solrVersion: solrVersion","   };","  return new Client(options);","}","","/**"," * Solr client"," * @constructor"," *"," * @param {Object} options - set of options used to request the Solr server"," * @param {String} options.host - IP address or host address of the Solr server"," * @param {Number|String} options.port - port of the Solr server"," * @param {String} options.core - name of the Solr core requested"," * @param {String} options.path - root path of all requests"," * @param {http.Agent} [options.agent] - HTTP Agent which is used for pooling sockets used in HTTP(s) client requests"," * @param {Boolean} [options.secure=false] - if true HTTPS will be used instead of HTTP"," * @param {Boolean} [options.bigint=false] - if true JSONbig serializer/deserializer will be used instead"," *                                    of JSON native serializer/deserializer"," *"," * @return {Client}"," * @api private"," */","","function Client(options){","   this.options = {","      host : options.host || '127.0.0.1',","      port : options.port || '8983',","      core : options.core || '',","      path : options.path || '/solr',","      agent : options.agent,","      secure : options.secure || false,","      bigint : options.bigint || false,","      get_max_request_entity_size: options.get_max_request_entity_size || false,","      solrVersion: options.solrVersion || versionUtils.Solr3_2","   };","","   // Default paths of all request handlers","   this.UPDATE_JSON_HANDLER = (versionUtils.version(this.options.solrVersion) >= versionUtils.Solr4_0) ? 'update' : 'update/json';","   this.UPDATE_HANDLER = 'update';","   this.SELECT_HANDLER = 'select';","   this.COLLECTIONS_HANDLER = 'admin/collections';","   this.ADMIN_PING_HANDLER = 'admin/ping';","   this.REAL_TIME_GET_HANDLER = 'get';","   this.SPELL_HANDLER = 'spell';","}","","/**"," * Create credential using the basic access authentication method"," *"," * @param {String} username"," * @param {String} password"," *"," * @return {Client}"," * @api public"," */","","Client.prototype.basicAuth = function(username,password){","   var self = this;","   this.options.authorization = 'Basic ' + new Buffer(username + ':' + password).toString('base64');","   return self;","}","","/**"," * Remove authorization header"," *"," * @return {Client}"," * @api public"," */","","Client.prototype.unauth = function(){","   var self = this;","   delete this.options.authorization;","   return self;","}","","/**"," * Add a document or a list of documents"," *"," * @param {Object|Array} doc - document or list of documents to add into the Solr database"," * @param {Object} [options] -"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.add = function(docs,options,callback){","   if(typeof(options) === 'function'){","      callback = options;","      options = {};","   }","   docs = format.dateISOify(docs); // format `Date` object into string understable for Solr as a date.","   docs = Array.isArray(docs) ? docs : [docs];","   return this.update(docs,options,callback);","}","","/**"," * Get a document by id or a list of documents by ids using the Real-time-get feature"," *  in SOLR4 (https://wiki.apache.org/solr/RealTimeGet)"," *"," * @param {String|Array} ids - id or list of ids that identify the documents to get"," * @param {Query|Object|String} [query] -"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.realTimeGet = function(ids, query, callback){","   if(typeof query === 'function'){","      callback = query;","      query = {};","   }","   ids = Array.isArray(ids) ? ids : [ids];","   query.ids = ids.join(',');","","   return this.get(this.REAL_TIME_GET_HANDLER,query,callback);","}","","/**"," * Add the remote resource located at the given path `options.path` into the Solr database."," *"," * @param {Object} options -"," * @param {String} options.path - path of the file. HTTP URL, the full path or a path relative to the CWD of the running solr server must be used."," * @param {String} [options.format='xml'] - format of the resource. XML, CSV or JSON formats must be used."," * @param {String} [options.contentType='text/plain;charset=utf-8'] - content type of the resource"," * @param {Object} [options.parameters] - set of extras parameters pass along in the query."," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.addRemoteResource = function(options,callback){","   options.parameters = options.parameters || {};","   options.format = (options.format === 'xml' ? '' : options.format || ''); // reason: the default route of the XmlUpdateRequestHandle is /update and not /update/xml.","   options.parameters.commit = (options.parameters.commit === undefined ? false : options.parameters.commit);","   options.parameters['stream.contentType'] = options.contentType || 'text/plain;charset=utf-8';","   if(options.path.match(/^https?:\\/\\//)){","      options.parameters['stream.url'] = options.path;","   }else{","      options.parameters['stream.file'] = options.path;","   }","","   var handler = this.UPDATE_HANDLER + '/' + options.format.toLowerCase();","   var query = querystring.stringify(options.parameters);","   return this.get(handler,query,callback);","}","","/**"," * Create a writable/readable `Stream` to add documents into the Solr database"," *"," * @param {Object} [options] -"," *"," * return {Stream}"," * @api public"," */","","Client.prototype.createAddStream = function(options){","   var path = [this.options.path,this.options.core, this.UPDATE_JSON_HANDLER + '?' + querystring.stringify(options) +'&wt=json']","      .filter(function(element){","         return element;","      })","      .join('/');","   var headers = {","      'content-type' : 'application/json',","      'charset' : 'utf-8'","   };","   if(this.options.authorization){","      headers['authorization'] = this.options.authorization;","   }","   var protocol = this.options.secure ? 'https' : 'http';","   var optionsRequest = {","      url : protocol + '://' + this.options.host +':' + this.options.port + path ,","      method : 'POST',","      headers : headers","   };","   var jsonStreamStringify = JSONStream.stringify();","   var postRequest = request(optionsRequest);","   jsonStreamStringify.pipe(postRequest);","   var duplex = duplexer(jsonStreamStringify,postRequest);","   return duplex ;","}","","/**"," * Commit last added and removed documents, that means your documents are now indexed."," *"," * @param {Object} options"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.commit = function(options,callback){","   if(typeof(options) === 'function'){","      callback = options;","      options = {};","   }","   var data = {","      commit : options || {}","   };","   return this.update(data,callback);","}","","/**"," * Call Lucene's IndexWriter.prepareCommit, the changes won't be visible in the index."," *"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.prepareCommit = function(callback){","   return this.update({},{ prepareCommit : true},callback);","}","","/**"," * Soft commit all changes"," *"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.softCommit = function(callback){","   return this.update({},{ softCommit : true},callback);","}","","/**"," * Delete documents based on the given `field` and `text`."," *"," * @param {String} field"," * @param {String} text"," * @param {Object} [options]"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.delete = function(field,text,options,callback) {","   if(typeof(options) === 'function'){","      callback = options;","      options = {};","   }","   text = format.dateISOify(text);","   var data = {","      'delete' :  {","         query : field +  ':'  + format.escapeSpecialChars(text)","      }","   };","   return this.update(data,options,callback);","}","","/**"," * Delete a range of documents based on the given `field`, `start` and `stop` arguments."," *"," * @param {String} field"," * @param {String|Date} start"," * @param {String|Date} stop"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.deleteByRange = function(field,start,stop,options,callback){","   if(typeof(options) === 'function'){","      callback = options;","      options = {};","   }","   start = format.dateISOify(start);","   stop = format.dateISOify(stop);","","   var query = field + ':[' + start + ' TO ' + stop + ']';","   return this.deleteByQuery(query,options,callback);","}","","/**"," * Delete the document with the given `id`"," *"," * @param {String|Number} id - id of the document you want to delete"," * @param {Object} [options] -"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.deleteByID = function(id,options,callback){","   if(typeof(options) === 'function'){","      callback = options;","      options = {};","   }","   var data = {","      'delete' : {","         id : id","      }","   };","   return this.update(data,options,callback);","}","","/**"," * Delete documents matching the given `query`"," *"," * @param {String} query -"," * @param {Object} [options] -"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.deleteByQuery = function(query,options,callback){","   if(typeof(options) === 'function'){","      callback = options;","      options = {};","   }","   var data = {","      'delete' : {","         query : query","      }","   };","   return this.update(data,options,callback);","}","","","/**"," * Delete all documents"," *"," * @param {Object} [options] -"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.deleteAll = function(options,callback){","   return this.deleteByQuery('*:*',options,callback);","}","","/**"," * Optimize the index"," *"," * @param {Object} options -"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.optimize = function(options,callback){","   if(typeof(options) === 'function'){","      callback = options;","      options = {};","   }","   var data = {","      optimize : options || {}","   };","   return this.update(data,callback);","}","","/**"," * Rollback all add/delete commands made since the last commit."," *"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.rollback = function(callback){","   var data = {","      rollback : {}","   };","   return this.update(data,callback);","}","","/**"," * Send an update command to the Solr server with the given `data` stringified in the body."," *"," * @param {Object} data - data sent to the Solr server"," * @param {Object} [options] -"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api private"," */","","Client.prototype.update = function(data,options,callback){","   if(typeof(options) === 'function'){","      callback = options;","      options = {};","   }","","   var json = pickJSON(this.options.bigint).stringify(data);","   var fullPath = [this.options.path,this.options.core, this.UPDATE_JSON_HANDLER + '?' + querystring.stringify(options) +'&wt=json']","                              .filter(function(element){","                                 return element;","                              })","                              .join('/');","","   var params = {","      host : this.options.host,","      port : this.options.port,","      fullPath : fullPath,","      json : json,","      secure : this.options.secure,","      bigint : this.options.bigint,","      authorization : this.options.authorization,","      agent : this.options.agent","   };","   return postJSON(params,callback);","}","","/**"," * Search documents matching the `query`"," *"," * @param {Query|Object|String} query"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.search = function(query,callback){","   return this.get(this.SELECT_HANDLER, query, callback);","}","","/**"," * Execute an Admin Collections task on `collection`"," *"," * @param {Query|Object|String} collection"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.executeCollection = function(collection,callback){","   return this.get(this.COLLECTIONS_HANDLER, collection, callback);","}","","/**"," * Search for all documents"," *"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.searchAll = function(callback){","   return this.search('q=*', callback);","}","","/**"," * Search documents matching the `query`"," *"," * Spellcheck is also enabled."," *"," * @param {Query|Object|String} query"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.spell = function(query,callback){","   return this.get(this.SPELL_HANDLER, query, callback);","}","","/**"," * Send an arbitrary HTTP GET request to Solr on the specified `handler` (as Solr like to call it i.e path)"," *"," * @param {String} handler"," * @param {Query|Object|String} [query]"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.get = function(handler,query,callback){","","   var parameters = '';","   if(typeof query === 'function'){","      callback = query;","   }else if((query instanceof Query) || (query instanceof Collection)){","      parameters += query.build();","   }else if(typeof query === 'object'){","      parameters += querystring.stringify(query);","   }else if(typeof query === 'string'){","      parameters += query;","   }","   var pathArray;","","   if(handler != 'admin/collections'){","      pathArray = [this.options.path,this.options.core,handler + '?' + parameters + '&wt=json'];","   } else {","      pathArray = [this.options.path,handler + '?' + parameters + '&wt=json'];","   }","","   var fullPath = pathArray.filter(function(element){","                 return element;","              }).join('/');","","   var approxUrlLength = 10 + Buffer.byteLength(this.options.host) + (this.options.port+\"\").length + Buffer.byteLength(fullPath); // Buffer (10) accounts for protocol and special characters like ://, port colon, and initial slash etc","","   if (this.options.get_max_request_entity_size === false || approxUrlLength <= this.options.get_max_request_entity_size) {","      var params = {","         host: this.options.host,","         port: this.options.port,","         fullPath: fullPath,","         secure: this.options.secure,","         bigint: this.options.bigint,","         authorization: this.options.authorization,","         agent: this.options.agent","      };","      return getJSON(params, callback);","   } else {","","      // Funnel this through a POST because it's too large","      return this.post(handler, query, callback);","   }","}","","/**"," * Send an arbitrary HTTP POST request to Solr on the specified `handler` (as Solr like to call it i.e path)"," *"," * @param {String} handler"," * @param {Query|Object|String} [query]"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","Client.prototype.post = function(handler,query,callback){","","   var parameters = '';","   if(typeof query === 'function'){","      callback = query;","   }else if(query instanceof Query){","      parameters += query.build();","   }else if(typeof query === 'object'){","      parameters += querystring.stringify(query);","   }else if(typeof query === 'string'){","      parameters += query;","   }","","   var pathArray;","","   if(handler != 'admin/collections'){","      pathArray = [this.options.path,this.options.core,handler + '?' + parameters + '&wt=json'];","   } else {","      pathArray = [this.options.path,handler + '?' + parameters + '&wt=json'];","   }","","   var fullPath = pathArray.filter(function(element){","                 return element;","              }).join('/');","","   var params = {","      host : this.options.host,","      port : this.options.port,","      fullPath : fullPath,","      params : parameters,","      secure : this.options.secure,","      bigint : this.options.bigint,","      authorization : this.options.authorization,","      agent : this.options.agent","   };","   return postForm(params,callback);","}","","/**"," * Create an instance of `Query`"," *"," * @return {Query}"," * @api public"," */","","Client.prototype.query = function(){","   return new Query(this.options);","}","","/**"," * Create an instance of `Query`"," * NOTE: This method will be deprecated in the v0.6 release. Please use `Client.query()` instead."," *"," * @return {Query}"," * @api public"," */","","Client.prototype.createQuery = function(){","   return new Query(this.options);","}","","/**"," * Create an instance of `Collection`"," *"," * @return {Collection}"," * @api public"," */","","Client.prototype.collection = function(){","   return new Collection();","}","","/**"," * Expose `format.escapeSpecialChars` from `Client.escapeSpecialChars`"," */","","Client.prototype.escapeSpecialChars = format.escapeSpecialChars;","","/**"," * Ping the Solr server"," *"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api public"," */","","Client.prototype.ping = function(callback){","   return this.get(this.ADMIN_PING_HANDLER, callback);","}","","/**"," * Pick appropriate protocol based on the given `secure` flag"," *"," * @param {Boolean} secure -"," * @return {Object} http or https module"," * @api private"," */","","function pickProtocol(secure){","   return secure ? https : http;","};","","","/**"," * Pick appropriate JSON serializer/deserializer library based on the given `bigint` flag"," * @param {Boolean} bigint - whenever to handle big number correctly or not (the reason for not using JSONbig all the times is it has an important performance cost)"," * @return {Object} JSON or JSONbig serializer/deserializer"," * @api private"," */","","function pickJSON(bigint){","   return bigint ? JSONbig : JSON;","};","","/**"," * HTTP POST request. Send update commands to the Solr server (commit, add, delete, optimize)"," *"," * @param {Object} params"," * @param {String} params.host - IP address or host address of the Solr server"," * @param {Number|String} params.port - port of the Solr server"," * @param {String} params.core - name of the Solr core requested"," * @param {String} params.authorization - value of the authorization header"," * @param {String} params.fullPath - full path of the request"," * @param {String} params.json -"," * @param {Boolean} params.secure -"," * @param {Boolean} params.bigint -"," * @param {http.Agent} [params.agent] -"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api private"," */","","function postJSON(params,callback){","   var headers = {","      'content-type' : 'application/json; charset=utf-8',","      'content-length':  Buffer.byteLength(params.json),","      'accept' : 'application/json; charset=utf-8'","   };","   if(params.authorization){","      headers['authorization'] = params.authorization;","   }","   var options = {","      host : params.host,","      port : params.port,","      method : 'POST',","      headers : headers,","      path : params.fullPath","   };","","   if(params.agent !== undefined){","      options.agent = params.agent;","   }","","   var request = pickProtocol(params.secure).request(options);","","   request.on('response', handleJSONResponse(request, params.bigint, callback));","","   request.on('error',function onError(err){","      if (callback) callback(err,null);","   });","","   request.write(params.json);","   request.end();","","   return request;","};","","/**"," * HTTP POST request. Send update commands to the Solr server using form encoding (e.g. search)"," *"," * @param {Object} params"," * @param {String} params.host - IP address or host address of the Solr server"," * @param {Number|String} params.port - port of the Solr server"," * @param {String} params.core - name of the Solr core requested"," * @param {String} params.authorization - value of the authorization header"," * @param {String} params.fullPath - full path of the request"," * @param {String} params.params - form params"," * @param {Boolean} params.secure -"," * @param {Boolean} params.bigint -"," * @param {http.Agent} [params.agent] -"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api private"," */","","function postForm(params,callback){","   var headers = {","      'content-type' : 'application/x-www-form-urlencoded; charset=utf-8',","      'content-length':  Buffer.byteLength(params.params),","      'accept' : 'application/json; charset=utf-8'","   };","   if(params.authorization){","      headers['authorization'] = params.authorization;","   }","   var options = {","      host : params.host,","      port : params.port,","      method : 'POST',","      headers : headers,","      path : params.fullPath","   };","","   if(params.agent !== undefined){","      options.agent = params.agent;","   }","","   var request = pickProtocol(params.secure).request(options);","","   request.on('response', handleJSONResponse(request, params.bigint, callback));","","   request.on('error',function onError(err){","      if (callback) callback(err,null);","   });","","   request.write(params.params);","   request.end();","","   return request;","};","","/**"," * HTTP GET request.  Send a query command to the Solr server (query)"," *"," * @param {Object} params"," * @param {String} params.host - IP address or host address of the Solr server"," * @param {Number|String} params.port - port of the Solr server"," * @param {String} params.core - name of the Solr core requested"," * @param {String} params.authorization - value of the authorization header"," * @param {String} params.fullPath - full path of the request, contains query parameters"," * @param {Boolean} params.secure -"," * @param {Boolean} params.bigint -"," * @param {http.Agent} [params.agent] -"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @return {http.ClientRequest}"," * @api private"," */","","function getJSON(params,callback){","   var headers = {","      'accept' : 'application/json; charset=utf-8'","   };","   var options = {","      host : params.host,","      port : params.port,","      path : params.fullPath,","      headers : headers","   };","","   if(params.agent !== undefined){","      options.agent = params.agent;","   }","","    if(params.authorization){","      var headers = {","         'authorization' : params.authorization","      };","      options.headers = headers;","   }","","   var request = pickProtocol(params.secure).get(options);","","   request.on('response', handleJSONResponse(request, params.bigint, callback));","","   request.on('error',function(err){","      if (callback) callback(err,null);","   });","   return request;","};","","/**"," * Handle HTTP JSON response from Solr"," *"," * @param {Function} callback(err,obj) - a function executed when the Solr server responds or an error occurs"," * @param {Error} callback().err"," * @param {Object} callback().obj - JSON response sent by the Solr server deserialized"," *"," * @api private"," */","","function handleJSONResponse(request, bigint, callback){","   return function onJSONResponse(response){","      var text = '';","      var err = null;","      var data = null;","","      // This properly handles multi-byte characters","      response.setEncoding('utf-8');","","      response.on('data',function(chunk){","         text += chunk;","      });","","      response.on('end',function(){","         if(response.statusCode < 200 || response.statusCode > 299){","            err = new SolrError(request,response,text);","            if(callback)  callback(err,null);","         }else{","            try{","               data = pickJSON(bigint).parse(text);","            }catch(error){","               err = error;","            }finally{","               if(callback)  callback(err,data);","            }","         }","      });","   };","};",""],"l":{"13":1,"30":1,"49":1,"50":0,"60":0,"81":1,"82":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"114":1,"115":0,"116":0,"117":0,"127":1,"128":0,"129":0,"130":0,"146":1,"147":0,"148":0,"149":0,"151":0,"152":0,"153":0,"170":1,"171":0,"172":0,"173":0,"175":0,"176":0,"178":0,"197":1,"198":0,"199":0,"200":0,"201":0,"202":0,"203":0,"205":0,"208":0,"209":0,"210":0,"222":1,"223":0,"225":0,"228":0,"232":0,"233":0,"235":0,"236":0,"241":0,"242":0,"243":0,"244":0,"245":0,"260":1,"261":0,"262":0,"263":0,"265":0,"268":0,"282":1,"283":0,"297":1,"298":0,"315":1,"316":0,"317":0,"318":0,"320":0,"321":0,"326":0,"343":1,"344":0,"345":0,"346":0,"348":0,"349":0,"351":0,"352":0,"368":1,"369":0,"370":0,"371":0,"373":0,"378":0,"394":1,"395":0,"396":0,"397":0,"399":0,"404":0,"420":1,"421":0,"436":1,"437":0,"438":0,"439":0,"441":0,"444":0,"458":1,"459":0,"462":0,"478":1,"479":0,"480":0,"481":0,"484":0,"485":0,"487":0,"491":0,"501":0,"516":1,"517":0,"532":1,"533":0,"547":1,"548":0,"565":1,"566":0,"582":1,"584":0,"585":0,"586":0,"587":0,"588":0,"589":0,"590":0,"591":0,"592":0,"594":0,"596":0,"597":0,"599":0,"602":0,"603":0,"606":0,"608":0,"609":0,"618":0,"622":0,"638":1,"640":0,"641":0,"642":0,"643":0,"644":0,"645":0,"646":0,"647":0,"648":0,"651":0,"653":0,"654":0,"656":0,"659":0,"660":0,"663":0,"673":0,"683":1,"684":0,"695":1,"696":0,"706":1,"707":0,"714":1,"727":1,"728":0,"739":1,"740":0,"751":1,"752":0,"776":1,"777":0,"782":0,"783":0,"785":0,"793":0,"794":0,"797":0,"799":0,"801":0,"802":0,"805":0,"806":0,"808":0,"832":1,"833":0,"838":0,"839":0,"841":0,"849":0,"850":0,"853":0,"855":0,"857":0,"858":0,"861":0,"862":0,"864":0,"887":1,"888":0,"891":0,"898":0,"899":0,"902":0,"903":0,"906":0,"909":0,"911":0,"913":0,"914":0,"916":0,"929":1,"930":0,"931":0,"932":0,"933":0,"936":0,"938":0,"939":0,"942":0,"943":0,"944":0,"945":0,"947":0,"948":0,"950":0,"952":0}},"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/query.js":{"path":"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/query.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":1,"7":0,"8":0,"9":0,"10":1,"11":0,"12":0,"13":0,"14":0,"15":1,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":1,"41":0,"42":0,"43":0,"44":0,"45":1,"46":0,"47":0,"48":0,"49":0,"50":1,"51":0,"52":0,"53":0,"54":0,"55":0,"56":1,"57":0,"58":0,"59":0,"60":0,"61":0,"62":1,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":1,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":1,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":1,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"182":0,"183":0,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":1,"196":0,"197":0,"198":0,"199":1,"200":0,"201":0,"202":0,"203":1,"204":0,"205":0,"206":0,"207":1,"208":1,"209":0,"210":0,"211":0,"212":0,"213":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":1,"220":0,"221":0,"222":0,"223":0,"224":0,"225":1,"226":0,"227":0,"228":0,"229":0,"230":1,"231":0,"232":0,"233":0,"234":0,"235":1,"236":0,"237":0,"238":0,"239":0,"240":1,"241":0,"242":0,"243":0,"244":0,"245":0,"246":1,"247":0,"248":0,"249":0,"250":0,"251":1,"252":0,"253":0,"254":0,"255":0,"256":1,"257":0,"258":1,"259":0,"260":0,"261":0,"262":0,"263":0,"264":0,"265":0,"266":0,"267":0,"268":0,"269":0,"270":0,"271":0,"272":0,"273":0,"274":0,"275":0,"276":0,"277":0,"278":0,"279":0,"280":0,"281":0,"282":0,"283":0,"284":0,"285":0,"286":0,"287":0,"288":0,"289":0,"290":0,"291":0,"292":0,"293":0,"294":0,"295":0,"296":0,"297":0,"298":0,"299":0,"300":0,"301":0,"302":0,"303":0,"304":0,"305":0,"306":0,"307":0,"308":0,"309":0,"310":0,"311":0,"312":0,"313":0,"314":0,"315":0},"b":{"1":[0,0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0},"fnMap":{"1":{"name":"Query","line":23,"loc":{"start":{"line":23,"column":0},"end":{"line":23,"column":23}}},"2":{"name":"(anonymous_2)","line":37,"loc":{"start":{"line":37,"column":22},"end":{"line":37,"column":41}}},"3":{"name":"(anonymous_3)","line":52,"loc":{"start":{"line":52,"column":26},"end":{"line":52,"column":40}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":21},"end":{"line":70,"column":35}}},"5":{"name":"(anonymous_5)","line":86,"loc":{"start":{"line":86,"column":20},"end":{"line":86,"column":31}}},"6":{"name":"(anonymous_6)","line":107,"loc":{"start":{"line":107,"column":22},"end":{"line":107,"column":34}}},"7":{"name":"(anonymous_7)","line":123,"loc":{"start":{"line":123,"column":21},"end":{"line":123,"column":35}}},"8":{"name":"(anonymous_8)","line":140,"loc":{"start":{"line":140,"column":24},"end":{"line":140,"column":39}}},"9":{"name":"(anonymous_9)","line":155,"loc":{"start":{"line":155,"column":23},"end":{"line":155,"column":37}}},"10":{"name":"(anonymous_10)","line":171,"loc":{"start":{"line":171,"column":29},"end":{"line":171,"column":43}}},"11":{"name":"(anonymous_11)","line":188,"loc":{"start":{"line":188,"column":23},"end":{"line":188,"column":40}}},"12":{"name":"(anonymous_12)","line":214,"loc":{"start":{"line":214,"column":30},"end":{"line":214,"column":47}}},"13":{"name":"(anonymous_13)","line":220,"loc":{"start":{"line":220,"column":32},"end":{"line":220,"column":48}}},"14":{"name":"(anonymous_14)","line":252,"loc":{"start":{"line":252,"column":30},"end":{"line":252,"column":51}}},"15":{"name":"(anonymous_15)","line":271,"loc":{"start":{"line":271,"column":27},"end":{"line":271,"column":43}}},"16":{"name":"(anonymous_16)","line":293,"loc":{"start":{"line":293,"column":26},"end":{"line":293,"column":40}}},"17":{"name":"(anonymous_17)","line":309,"loc":{"start":{"line":309,"column":26},"end":{"line":309,"column":41}}},"18":{"name":"(anonymous_18)","line":338,"loc":{"start":{"line":338,"column":24},"end":{"line":338,"column":41}}},"19":{"name":"(anonymous_19)","line":347,"loc":{"start":{"line":347,"column":28},"end":{"line":347,"column":43}}},"20":{"name":"(anonymous_20)","line":398,"loc":{"start":{"line":398,"column":24},"end":{"line":398,"column":41}}},"21":{"name":"(anonymous_21)","line":410,"loc":{"start":{"line":410,"column":27},"end":{"line":410,"column":43}}},"22":{"name":"(anonymous_22)","line":440,"loc":{"start":{"line":440,"column":29},"end":{"line":440,"column":45}}},"23":{"name":"(anonymous_23)","line":472,"loc":{"start":{"line":472,"column":22},"end":{"line":472,"column":39}}},"24":{"name":"(anonymous_24)","line":530,"loc":{"start":{"line":530,"column":25},"end":{"line":530,"column":35}}},"25":{"name":"(anonymous_25)","line":548,"loc":{"start":{"line":548,"column":26},"end":{"line":548,"column":36}}},"26":{"name":"(anonymous_26)","line":562,"loc":{"start":{"line":562,"column":29},"end":{"line":562,"column":39}}},"27":{"name":"(anonymous_27)","line":569,"loc":{"start":{"line":569,"column":21},"end":{"line":569,"column":31}}},"28":{"name":"(anonymous_28)","line":584,"loc":{"start":{"line":584,"column":21},"end":{"line":584,"column":38}}},"29":{"name":"(anonymous_29)","line":605,"loc":{"start":{"line":605,"column":21},"end":{"line":605,"column":38}}},"30":{"name":"(anonymous_30)","line":623,"loc":{"start":{"line":623,"column":21},"end":{"line":623,"column":38}}},"31":{"name":"(anonymous_31)","line":640,"loc":{"start":{"line":640,"column":21},"end":{"line":640,"column":35}}},"32":{"name":"(anonymous_32)","line":655,"loc":{"start":{"line":655,"column":21},"end":{"line":655,"column":35}}},"33":{"name":"(anonymous_33)","line":671,"loc":{"start":{"line":671,"column":22},"end":{"line":671,"column":42}}},"34":{"name":"(anonymous_34)","line":688,"loc":{"start":{"line":688,"column":21},"end":{"line":688,"column":38}}},"35":{"name":"(anonymous_35)","line":705,"loc":{"start":{"line":705,"column":21},"end":{"line":705,"column":40}}},"36":{"name":"(anonymous_36)","line":720,"loc":{"start":{"line":720,"column":24},"end":{"line":720,"column":43}}},"37":{"name":"(anonymous_37)","line":733,"loc":{"start":{"line":733,"column":24},"end":{"line":733,"column":34}}},"38":{"name":"(anonymous_38)","line":771,"loc":{"start":{"line":771,"column":21},"end":{"line":771,"column":38}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":7,"column":46}},"2":{"start":{"line":13,"column":0},"end":{"line":13,"column":33}},"3":{"start":{"line":23,"column":0},"end":{"line":26,"column":1}},"4":{"start":{"line":24,"column":3},"end":{"line":24,"column":68}},"5":{"start":{"line":25,"column":3},"end":{"line":25,"column":24}},"6":{"start":{"line":37,"column":0},"end":{"line":41,"column":1}},"7":{"start":{"line":38,"column":3},"end":{"line":38,"column":19}},"8":{"start":{"line":39,"column":3},"end":{"line":39,"column":35}},"9":{"start":{"line":40,"column":3},"end":{"line":40,"column":15}},"10":{"start":{"line":52,"column":0},"end":{"line":57,"column":1}},"11":{"start":{"line":53,"column":3},"end":{"line":53,"column":19}},"12":{"start":{"line":54,"column":3},"end":{"line":54,"column":37}},"13":{"start":{"line":55,"column":3},"end":{"line":55,"column":35}},"14":{"start":{"line":56,"column":3},"end":{"line":56,"column":15}},"15":{"start":{"line":69,"column":0},"end":{"line":75,"column":1}},"16":{"start":{"line":71,"column":2},"end":{"line":71,"column":18}},"17":{"start":{"line":72,"column":2},"end":{"line":72,"column":31}},"18":{"start":{"line":73,"column":2},"end":{"line":73,"column":34}},"19":{"start":{"line":74,"column":2},"end":{"line":74,"column":14}},"20":{"start":{"line":86,"column":0},"end":{"line":96,"column":1}},"21":{"start":{"line":87,"column":3},"end":{"line":87,"column":19}},"22":{"start":{"line":88,"column":3},"end":{"line":88,"column":23}},"23":{"start":{"line":89,"column":3},"end":{"line":93,"column":4}},"24":{"start":{"line":90,"column":6},"end":{"line":90,"column":41}},"25":{"start":{"line":92,"column":6},"end":{"line":92,"column":61}},"26":{"start":{"line":94,"column":3},"end":{"line":94,"column":35}},"27":{"start":{"line":95,"column":3},"end":{"line":95,"column":15}},"28":{"start":{"line":107,"column":0},"end":{"line":113,"column":2}},"29":{"start":{"line":108,"column":4},"end":{"line":108,"column":20}},"30":{"start":{"line":109,"column":4},"end":{"line":109,"column":27}},"31":{"start":{"line":110,"column":4},"end":{"line":110,"column":20}},"32":{"start":{"line":111,"column":4},"end":{"line":111,"column":36}},"33":{"start":{"line":112,"column":4},"end":{"line":112,"column":16}},"34":{"start":{"line":123,"column":0},"end":{"line":129,"column":2}},"35":{"start":{"line":124,"column":4},"end":{"line":124,"column":20}},"36":{"start":{"line":125,"column":4},"end":{"line":125,"column":26}},"37":{"start":{"line":126,"column":4},"end":{"line":126,"column":20}},"38":{"start":{"line":127,"column":4},"end":{"line":127,"column":36}},"39":{"start":{"line":128,"column":4},"end":{"line":128,"column":16}},"40":{"start":{"line":140,"column":0},"end":{"line":145,"column":1}},"41":{"start":{"line":141,"column":3},"end":{"line":141,"column":19}},"42":{"start":{"line":142,"column":3},"end":{"line":142,"column":37}},"43":{"start":{"line":143,"column":3},"end":{"line":143,"column":35}},"44":{"start":{"line":144,"column":3},"end":{"line":144,"column":15}},"45":{"start":{"line":155,"column":0},"end":{"line":160,"column":1}},"46":{"start":{"line":156,"column":3},"end":{"line":156,"column":19}},"47":{"start":{"line":157,"column":3},"end":{"line":157,"column":35}},"48":{"start":{"line":158,"column":3},"end":{"line":158,"column":35}},"49":{"start":{"line":159,"column":3},"end":{"line":159,"column":15}},"50":{"start":{"line":171,"column":0},"end":{"line":177,"column":1}},"51":{"start":{"line":172,"column":3},"end":{"line":172,"column":19}},"52":{"start":{"line":173,"column":3},"end":{"line":173,"column":22}},"53":{"start":{"line":174,"column":3},"end":{"line":174,"column":41}},"54":{"start":{"line":175,"column":3},"end":{"line":175,"column":35}},"55":{"start":{"line":176,"column":3},"end":{"line":176,"column":15}},"56":{"start":{"line":188,"column":0},"end":{"line":194,"column":1}},"57":{"start":{"line":189,"column":3},"end":{"line":189,"column":19}},"58":{"start":{"line":190,"column":3},"end":{"line":190,"column":27}},"59":{"start":{"line":191,"column":3},"end":{"line":191,"column":60}},"60":{"start":{"line":192,"column":3},"end":{"line":192,"column":35}},"61":{"start":{"line":193,"column":3},"end":{"line":193,"column":15}},"62":{"start":{"line":214,"column":0},"end":{"line":236,"column":1}},"63":{"start":{"line":215,"column":3},"end":{"line":215,"column":19}},"64":{"start":{"line":216,"column":3},"end":{"line":216,"column":40}},"65":{"start":{"line":217,"column":3},"end":{"line":217,"column":25}},"66":{"start":{"line":218,"column":3},"end":{"line":233,"column":4}},"67":{"start":{"line":219,"column":5},"end":{"line":219,"column":22}},"68":{"start":{"line":220,"column":6},"end":{"line":225,"column":9}},"69":{"start":{"line":221,"column":9},"end":{"line":221,"column":32}},"70":{"start":{"line":222,"column":9},"end":{"line":222,"column":25}},"71":{"start":{"line":223,"column":9},"end":{"line":223,"column":114}},"72":{"start":{"line":224,"column":9},"end":{"line":224,"column":49}},"73":{"start":{"line":226,"column":6},"end":{"line":226,"column":45}},"74":{"start":{"line":227,"column":6},"end":{"line":227,"column":23}},"75":{"start":{"line":229,"column":6},"end":{"line":229,"column":30}},"76":{"start":{"line":230,"column":6},"end":{"line":230,"column":22}},"77":{"start":{"line":231,"column":6},"end":{"line":231,"column":113}},"78":{"start":{"line":232,"column":6},"end":{"line":232,"column":52}},"79":{"start":{"line":234,"column":3},"end":{"line":234,"column":35}},"80":{"start":{"line":235,"column":3},"end":{"line":235,"column":15}},"81":{"start":{"line":252,"column":0},"end":{"line":259,"column":1}},"82":{"start":{"line":253,"column":3},"end":{"line":253,"column":19}},"83":{"start":{"line":254,"column":3},"end":{"line":254,"column":36}},"84":{"start":{"line":255,"column":3},"end":{"line":255,"column":25}},"85":{"start":{"line":256,"column":3},"end":{"line":256,"column":56}},"86":{"start":{"line":257,"column":3},"end":{"line":257,"column":35}},"87":{"start":{"line":258,"column":3},"end":{"line":258,"column":15}},"88":{"start":{"line":270,"column":0},"end":{"line":281,"column":1}},"89":{"start":{"line":272,"column":3},"end":{"line":272,"column":19}},"90":{"start":{"line":273,"column":3},"end":{"line":273,"column":25}},"91":{"start":{"line":274,"column":3},"end":{"line":278,"column":4}},"92":{"start":{"line":275,"column":6},"end":{"line":275,"column":26}},"93":{"start":{"line":277,"column":6},"end":{"line":277,"column":36}},"94":{"start":{"line":279,"column":3},"end":{"line":279,"column":35}},"95":{"start":{"line":280,"column":3},"end":{"line":280,"column":15}},"96":{"start":{"line":293,"column":0},"end":{"line":298,"column":1}},"97":{"start":{"line":294,"column":3},"end":{"line":294,"column":19}},"98":{"start":{"line":295,"column":3},"end":{"line":295,"column":41}},"99":{"start":{"line":296,"column":3},"end":{"line":296,"column":35}},"100":{"start":{"line":297,"column":3},"end":{"line":297,"column":15}},"101":{"start":{"line":309,"column":0},"end":{"line":315,"column":1}},"102":{"start":{"line":310,"column":3},"end":{"line":310,"column":19}},"103":{"start":{"line":311,"column":3},"end":{"line":313,"column":6}},"104":{"start":{"line":314,"column":3},"end":{"line":314,"column":15}},"105":{"start":{"line":338,"column":0},"end":{"line":376,"column":1}},"106":{"start":{"line":339,"column":3},"end":{"line":339,"column":19}},"107":{"start":{"line":340,"column":3},"end":{"line":344,"column":4}},"108":{"start":{"line":341,"column":6},"end":{"line":341,"column":42}},"109":{"start":{"line":343,"column":6},"end":{"line":343,"column":41}},"110":{"start":{"line":345,"column":3},"end":{"line":350,"column":4}},"111":{"start":{"line":346,"column":6},"end":{"line":346,"column":56}},"112":{"start":{"line":347,"column":6},"end":{"line":349,"column":9}},"113":{"start":{"line":348,"column":8},"end":{"line":348,"column":53}},"114":{"start":{"line":351,"column":3},"end":{"line":353,"column":4}},"115":{"start":{"line":352,"column":6},"end":{"line":352,"column":59}},"116":{"start":{"line":354,"column":3},"end":{"line":356,"column":4}},"117":{"start":{"line":355,"column":6},"end":{"line":355,"column":61}},"118":{"start":{"line":357,"column":3},"end":{"line":359,"column":4}},"119":{"start":{"line":358,"column":6},"end":{"line":358,"column":77}},"120":{"start":{"line":360,"column":3},"end":{"line":362,"column":4}},"121":{"start":{"line":361,"column":6},"end":{"line":361,"column":81}},"122":{"start":{"line":363,"column":3},"end":{"line":365,"column":4}},"123":{"start":{"line":364,"column":6},"end":{"line":364,"column":57}},"124":{"start":{"line":366,"column":3},"end":{"line":368,"column":4}},"125":{"start":{"line":367,"column":6},"end":{"line":367,"column":63}},"126":{"start":{"line":369,"column":3},"end":{"line":371,"column":4}},"127":{"start":{"line":370,"column":6},"end":{"line":370,"column":65}},"128":{"start":{"line":372,"column":3},"end":{"line":374,"column":4}},"129":{"start":{"line":373,"column":6},"end":{"line":373,"column":67}},"130":{"start":{"line":375,"column":3},"end":{"line":375,"column":15}},"131":{"start":{"line":398,"column":0},"end":{"line":450,"column":1}},"132":{"start":{"line":399,"column":3},"end":{"line":399,"column":19}},"133":{"start":{"line":400,"column":3},"end":{"line":404,"column":4}},"134":{"start":{"line":401,"column":6},"end":{"line":401,"column":42}},"135":{"start":{"line":403,"column":6},"end":{"line":403,"column":41}},"136":{"start":{"line":405,"column":3},"end":{"line":407,"column":4}},"137":{"start":{"line":406,"column":6},"end":{"line":406,"column":78}},"138":{"start":{"line":408,"column":3},"end":{"line":413,"column":4}},"139":{"start":{"line":409,"column":5},"end":{"line":409,"column":55}},"140":{"start":{"line":410,"column":5},"end":{"line":412,"column":8}},"141":{"start":{"line":411,"column":7},"end":{"line":411,"column":52}},"142":{"start":{"line":414,"column":3},"end":{"line":416,"column":4}},"143":{"start":{"line":415,"column":6},"end":{"line":415,"column":80}},"144":{"start":{"line":417,"column":3},"end":{"line":419,"column":4}},"145":{"start":{"line":418,"column":6},"end":{"line":418,"column":76}},"146":{"start":{"line":420,"column":3},"end":{"line":422,"column":4}},"147":{"start":{"line":421,"column":6},"end":{"line":421,"column":59}},"148":{"start":{"line":423,"column":3},"end":{"line":425,"column":4}},"149":{"start":{"line":424,"column":6},"end":{"line":424,"column":61}},"150":{"start":{"line":426,"column":3},"end":{"line":428,"column":4}},"151":{"start":{"line":427,"column":6},"end":{"line":427,"column":65}},"152":{"start":{"line":429,"column":3},"end":{"line":431,"column":4}},"153":{"start":{"line":430,"column":6},"end":{"line":430,"column":63}},"154":{"start":{"line":432,"column":3},"end":{"line":434,"column":4}},"155":{"start":{"line":433,"column":6},"end":{"line":433,"column":61}},"156":{"start":{"line":437,"column":3},"end":{"line":447,"column":4}},"157":{"start":{"line":438,"column":5},"end":{"line":443,"column":6}},"158":{"start":{"line":439,"column":7},"end":{"line":439,"column":64}},"159":{"start":{"line":440,"column":7},"end":{"line":442,"column":10}},"160":{"start":{"line":441,"column":9},"end":{"line":441,"column":54}},"161":{"start":{"line":444,"column":5},"end":{"line":446,"column":6}},"162":{"start":{"line":445,"column":7},"end":{"line":445,"column":78}},"163":{"start":{"line":449,"column":3},"end":{"line":449,"column":15}},"164":{"start":{"line":472,"column":0},"end":{"line":516,"column":1}},"165":{"start":{"line":473,"column":2},"end":{"line":473,"column":18}},"166":{"start":{"line":474,"column":2},"end":{"line":478,"column":3}},"167":{"start":{"line":475,"column":4},"end":{"line":475,"column":38}},"168":{"start":{"line":477,"column":4},"end":{"line":477,"column":37}},"169":{"start":{"line":479,"column":2},"end":{"line":482,"column":3}},"170":{"start":{"line":480,"column":4},"end":{"line":480,"column":70}},"171":{"start":{"line":480,"column":36},"end":{"line":480,"column":70}},"172":{"start":{"line":481,"column":4},"end":{"line":481,"column":68}},"173":{"start":{"line":483,"column":2},"end":{"line":485,"column":3}},"174":{"start":{"line":484,"column":4},"end":{"line":484,"column":54}},"175":{"start":{"line":486,"column":2},"end":{"line":488,"column":3}},"176":{"start":{"line":487,"column":4},"end":{"line":487,"column":54}},"177":{"start":{"line":489,"column":2},"end":{"line":491,"column":3}},"178":{"start":{"line":490,"column":4},"end":{"line":490,"column":55}},"179":{"start":{"line":492,"column":2},"end":{"line":494,"column":3}},"180":{"start":{"line":493,"column":4},"end":{"line":493,"column":54}},"181":{"start":{"line":495,"column":2},"end":{"line":497,"column":3}},"182":{"start":{"line":496,"column":4},"end":{"line":496,"column":54}},"183":{"start":{"line":498,"column":2},"end":{"line":500,"column":3}},"184":{"start":{"line":499,"column":4},"end":{"line":499,"column":54}},"185":{"start":{"line":501,"column":2},"end":{"line":503,"column":3}},"186":{"start":{"line":502,"column":4},"end":{"line":502,"column":57}},"187":{"start":{"line":504,"column":2},"end":{"line":506,"column":3}},"188":{"start":{"line":505,"column":4},"end":{"line":505,"column":55}},"189":{"start":{"line":507,"column":2},"end":{"line":514,"column":3}},"190":{"start":{"line":508,"column":4},"end":{"line":512,"column":5}},"191":{"start":{"line":509,"column":6},"end":{"line":509,"column":69}},"192":{"start":{"line":511,"column":6},"end":{"line":511,"column":53}},"193":{"start":{"line":513,"column":4},"end":{"line":513,"column":48}},"194":{"start":{"line":515,"column":2},"end":{"line":515,"column":14}},"195":{"start":{"line":530,"column":0},"end":{"line":534,"column":1}},"196":{"start":{"line":531,"column":3},"end":{"line":531,"column":19}},"197":{"start":{"line":532,"column":3},"end":{"line":532,"column":26}},"198":{"start":{"line":533,"column":3},"end":{"line":533,"column":15}},"199":{"start":{"line":548,"column":0},"end":{"line":552,"column":1}},"200":{"start":{"line":549,"column":3},"end":{"line":549,"column":19}},"201":{"start":{"line":550,"column":3},"end":{"line":550,"column":27}},"202":{"start":{"line":551,"column":3},"end":{"line":551,"column":15}},"203":{"start":{"line":562,"column":0},"end":{"line":566,"column":1}},"204":{"start":{"line":563,"column":3},"end":{"line":563,"column":19}},"205":{"start":{"line":564,"column":3},"end":{"line":564,"column":43}},"206":{"start":{"line":565,"column":3},"end":{"line":565,"column":15}},"207":{"start":{"line":569,"column":0},"end":{"line":569,"column":33}},"208":{"start":{"line":584,"column":0},"end":{"line":590,"column":1}},"209":{"start":{"line":585,"column":3},"end":{"line":585,"column":19}},"210":{"start":{"line":586,"column":3},"end":{"line":586,"column":26}},"211":{"start":{"line":587,"column":3},"end":{"line":587,"column":60}},"212":{"start":{"line":588,"column":3},"end":{"line":588,"column":35}},"213":{"start":{"line":589,"column":3},"end":{"line":589,"column":15}},"214":{"start":{"line":605,"column":0},"end":{"line":610,"column":1}},"215":{"start":{"line":606,"column":3},"end":{"line":606,"column":19}},"216":{"start":{"line":607,"column":3},"end":{"line":607,"column":35}},"217":{"start":{"line":608,"column":3},"end":{"line":608,"column":35}},"218":{"start":{"line":609,"column":3},"end":{"line":609,"column":15}},"219":{"start":{"line":623,"column":0},"end":{"line":629,"column":1}},"220":{"start":{"line":624,"column":3},"end":{"line":624,"column":19}},"221":{"start":{"line":625,"column":3},"end":{"line":625,"column":26}},"222":{"start":{"line":626,"column":3},"end":{"line":626,"column":60}},"223":{"start":{"line":627,"column":3},"end":{"line":627,"column":35}},"224":{"start":{"line":628,"column":3},"end":{"line":628,"column":15}},"225":{"start":{"line":640,"column":0},"end":{"line":645,"column":2}},"226":{"start":{"line":641,"column":3},"end":{"line":641,"column":19}},"227":{"start":{"line":642,"column":3},"end":{"line":642,"column":32}},"228":{"start":{"line":643,"column":3},"end":{"line":643,"column":35}},"229":{"start":{"line":644,"column":3},"end":{"line":644,"column":15}},"230":{"start":{"line":655,"column":0},"end":{"line":660,"column":2}},"231":{"start":{"line":656,"column":3},"end":{"line":656,"column":19}},"232":{"start":{"line":657,"column":3},"end":{"line":657,"column":32}},"233":{"start":{"line":658,"column":3},"end":{"line":658,"column":35}},"234":{"start":{"line":659,"column":3},"end":{"line":659,"column":15}},"235":{"start":{"line":671,"column":0},"end":{"line":676,"column":1}},"236":{"start":{"line":672,"column":3},"end":{"line":672,"column":19}},"237":{"start":{"line":673,"column":3},"end":{"line":673,"column":39}},"238":{"start":{"line":674,"column":3},"end":{"line":674,"column":35}},"239":{"start":{"line":675,"column":3},"end":{"line":675,"column":15}},"240":{"start":{"line":688,"column":0},"end":{"line":694,"column":1}},"241":{"start":{"line":689,"column":3},"end":{"line":689,"column":19}},"242":{"start":{"line":690,"column":3},"end":{"line":690,"column":26}},"243":{"start":{"line":691,"column":3},"end":{"line":691,"column":60}},"244":{"start":{"line":692,"column":3},"end":{"line":692,"column":35}},"245":{"start":{"line":693,"column":3},"end":{"line":693,"column":15}},"246":{"start":{"line":705,"column":0},"end":{"line":710,"column":1}},"247":{"start":{"line":706,"column":3},"end":{"line":706,"column":19}},"248":{"start":{"line":707,"column":3},"end":{"line":707,"column":37}},"249":{"start":{"line":708,"column":3},"end":{"line":708,"column":35}},"250":{"start":{"line":709,"column":3},"end":{"line":709,"column":15}},"251":{"start":{"line":720,"column":0},"end":{"line":725,"column":1}},"252":{"start":{"line":721,"column":3},"end":{"line":721,"column":19}},"253":{"start":{"line":722,"column":3},"end":{"line":722,"column":60}},"254":{"start":{"line":723,"column":3},"end":{"line":723,"column":35}},"255":{"start":{"line":724,"column":3},"end":{"line":724,"column":15}},"256":{"start":{"line":733,"column":0},"end":{"line":735,"column":1}},"257":{"start":{"line":734,"column":3},"end":{"line":734,"column":36}},"258":{"start":{"line":771,"column":0},"end":{"line":861,"column":1}},"259":{"start":{"line":772,"column":3},"end":{"line":772,"column":19}},"260":{"start":{"line":773,"column":3},"end":{"line":777,"column":4}},"261":{"start":{"line":774,"column":6},"end":{"line":774,"column":39}},"262":{"start":{"line":776,"column":6},"end":{"line":776,"column":38}},"263":{"start":{"line":778,"column":3},"end":{"line":784,"column":4}},"264":{"start":{"line":779,"column":6},"end":{"line":783,"column":7}},"265":{"start":{"line":780,"column":9},"end":{"line":780,"column":71}},"266":{"start":{"line":782,"column":9},"end":{"line":782,"column":91}},"267":{"start":{"line":785,"column":3},"end":{"line":787,"column":4}},"268":{"start":{"line":786,"column":6},"end":{"line":786,"column":80}},"269":{"start":{"line":788,"column":3},"end":{"line":794,"column":4}},"270":{"start":{"line":789,"column":6},"end":{"line":793,"column":7}},"271":{"start":{"line":790,"column":9},"end":{"line":790,"column":73}},"272":{"start":{"line":792,"column":9},"end":{"line":792,"column":63}},"273":{"start":{"line":795,"column":3},"end":{"line":797,"column":4}},"274":{"start":{"line":796,"column":6},"end":{"line":796,"column":82}},"275":{"start":{"line":798,"column":3},"end":{"line":800,"column":4}},"276":{"start":{"line":799,"column":6},"end":{"line":799,"column":82}},"277":{"start":{"line":801,"column":3},"end":{"line":803,"column":4}},"278":{"start":{"line":802,"column":6},"end":{"line":802,"column":96}},"279":{"start":{"line":804,"column":3},"end":{"line":806,"column":4}},"280":{"start":{"line":805,"column":6},"end":{"line":805,"column":100}},"281":{"start":{"line":807,"column":3},"end":{"line":809,"column":4}},"282":{"start":{"line":808,"column":6},"end":{"line":808,"column":98}},"283":{"start":{"line":810,"column":3},"end":{"line":812,"column":4}},"284":{"start":{"line":811,"column":6},"end":{"line":811,"column":112}},"285":{"start":{"line":813,"column":3},"end":{"line":815,"column":4}},"286":{"start":{"line":814,"column":6},"end":{"line":814,"column":108}},"287":{"start":{"line":816,"column":3},"end":{"line":818,"column":4}},"288":{"start":{"line":817,"column":6},"end":{"line":817,"column":94}},"289":{"start":{"line":819,"column":3},"end":{"line":821,"column":4}},"290":{"start":{"line":820,"column":6},"end":{"line":820,"column":112}},"291":{"start":{"line":822,"column":3},"end":{"line":824,"column":4}},"292":{"start":{"line":823,"column":6},"end":{"line":823,"column":84}},"293":{"start":{"line":825,"column":3},"end":{"line":829,"column":4}},"294":{"start":{"line":826,"column":6},"end":{"line":826,"column":85}},"295":{"start":{"line":828,"column":6},"end":{"line":828,"column":49}},"296":{"start":{"line":830,"column":3},"end":{"line":834,"column":4}},"297":{"start":{"line":831,"column":6},"end":{"line":831,"column":87}},"298":{"start":{"line":833,"column":6},"end":{"line":833,"column":53}},"299":{"start":{"line":835,"column":3},"end":{"line":837,"column":4}},"300":{"start":{"line":836,"column":6},"end":{"line":836,"column":86}},"301":{"start":{"line":838,"column":3},"end":{"line":840,"column":4}},"302":{"start":{"line":839,"column":6},"end":{"line":839,"column":102}},"303":{"start":{"line":841,"column":3},"end":{"line":843,"column":4}},"304":{"start":{"line":842,"column":6},"end":{"line":842,"column":106}},"305":{"start":{"line":844,"column":3},"end":{"line":846,"column":4}},"306":{"start":{"line":845,"column":6},"end":{"line":845,"column":85}},"307":{"start":{"line":847,"column":3},"end":{"line":849,"column":4}},"308":{"start":{"line":848,"column":6},"end":{"line":848,"column":91}},"309":{"start":{"line":850,"column":3},"end":{"line":852,"column":4}},"310":{"start":{"line":851,"column":6},"end":{"line":851,"column":109}},"311":{"start":{"line":853,"column":3},"end":{"line":855,"column":4}},"312":{"start":{"line":854,"column":6},"end":{"line":854,"column":92}},"313":{"start":{"line":856,"column":3},"end":{"line":858,"column":4}},"314":{"start":{"line":857,"column":6},"end":{"line":857,"column":82}},"315":{"start":{"line":860,"column":3},"end":{"line":860,"column":15}}},"branchMap":{"1":{"line":24,"type":"binary-expr","locations":[{"start":{"line":24,"column":23},"end":{"line":24,"column":30}},{"start":{"line":24,"column":34},"end":{"line":24,"column":53}},{"start":{"line":24,"column":58},"end":{"line":24,"column":67}}]},"2":{"line":89,"type":"if","locations":[{"start":{"line":89,"column":3},"end":{"line":89,"column":3}},{"start":{"line":89,"column":3},"end":{"line":89,"column":3}}]},"3":{"line":173,"type":"binary-expr","locations":[{"start":{"line":173,"column":10},"end":{"line":173,"column":14}},{"start":{"line":173,"column":18},"end":{"line":173,"column":21}}]},"4":{"line":218,"type":"if","locations":[{"start":{"line":218,"column":3},"end":{"line":218,"column":3}},{"start":{"line":218,"column":3},"end":{"line":218,"column":3}}]},"5":{"line":274,"type":"if","locations":[{"start":{"line":274,"column":3},"end":{"line":274,"column":3}},{"start":{"line":274,"column":3},"end":{"line":274,"column":3}}]},"6":{"line":340,"type":"if","locations":[{"start":{"line":340,"column":3},"end":{"line":340,"column":3}},{"start":{"line":340,"column":3},"end":{"line":340,"column":3}}]},"7":{"line":345,"type":"if","locations":[{"start":{"line":345,"column":3},"end":{"line":345,"column":3}},{"start":{"line":345,"column":3},"end":{"line":345,"column":3}}]},"8":{"line":351,"type":"if","locations":[{"start":{"line":351,"column":3},"end":{"line":351,"column":3}},{"start":{"line":351,"column":3},"end":{"line":351,"column":3}}]},"9":{"line":354,"type":"if","locations":[{"start":{"line":354,"column":3},"end":{"line":354,"column":3}},{"start":{"line":354,"column":3},"end":{"line":354,"column":3}}]},"10":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":3},"end":{"line":357,"column":3}},{"start":{"line":357,"column":3},"end":{"line":357,"column":3}}]},"11":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":3},"end":{"line":360,"column":3}},{"start":{"line":360,"column":3},"end":{"line":360,"column":3}}]},"12":{"line":363,"type":"if","locations":[{"start":{"line":363,"column":3},"end":{"line":363,"column":3}},{"start":{"line":363,"column":3},"end":{"line":363,"column":3}}]},"13":{"line":366,"type":"if","locations":[{"start":{"line":366,"column":3},"end":{"line":366,"column":3}},{"start":{"line":366,"column":3},"end":{"line":366,"column":3}}]},"14":{"line":369,"type":"if","locations":[{"start":{"line":369,"column":3},"end":{"line":369,"column":3}},{"start":{"line":369,"column":3},"end":{"line":369,"column":3}}]},"15":{"line":372,"type":"if","locations":[{"start":{"line":372,"column":3},"end":{"line":372,"column":3}},{"start":{"line":372,"column":3},"end":{"line":372,"column":3}}]},"16":{"line":400,"type":"if","locations":[{"start":{"line":400,"column":3},"end":{"line":400,"column":3}},{"start":{"line":400,"column":3},"end":{"line":400,"column":3}}]},"17":{"line":405,"type":"if","locations":[{"start":{"line":405,"column":3},"end":{"line":405,"column":3}},{"start":{"line":405,"column":3},"end":{"line":405,"column":3}}]},"18":{"line":408,"type":"if","locations":[{"start":{"line":408,"column":3},"end":{"line":408,"column":3}},{"start":{"line":408,"column":3},"end":{"line":408,"column":3}}]},"19":{"line":414,"type":"if","locations":[{"start":{"line":414,"column":3},"end":{"line":414,"column":3}},{"start":{"line":414,"column":3},"end":{"line":414,"column":3}}]},"20":{"line":417,"type":"if","locations":[{"start":{"line":417,"column":3},"end":{"line":417,"column":3}},{"start":{"line":417,"column":3},"end":{"line":417,"column":3}}]},"21":{"line":420,"type":"if","locations":[{"start":{"line":420,"column":3},"end":{"line":420,"column":3}},{"start":{"line":420,"column":3},"end":{"line":420,"column":3}}]},"22":{"line":423,"type":"if","locations":[{"start":{"line":423,"column":3},"end":{"line":423,"column":3}},{"start":{"line":423,"column":3},"end":{"line":423,"column":3}}]},"23":{"line":426,"type":"if","locations":[{"start":{"line":426,"column":3},"end":{"line":426,"column":3}},{"start":{"line":426,"column":3},"end":{"line":426,"column":3}}]},"24":{"line":429,"type":"if","locations":[{"start":{"line":429,"column":3},"end":{"line":429,"column":3}},{"start":{"line":429,"column":3},"end":{"line":429,"column":3}}]},"25":{"line":432,"type":"if","locations":[{"start":{"line":432,"column":3},"end":{"line":432,"column":3}},{"start":{"line":432,"column":3},"end":{"line":432,"column":3}}]},"26":{"line":437,"type":"if","locations":[{"start":{"line":437,"column":3},"end":{"line":437,"column":3}},{"start":{"line":437,"column":3},"end":{"line":437,"column":3}}]},"27":{"line":437,"type":"binary-expr","locations":[{"start":{"line":437,"column":6},"end":{"line":437,"column":22}},{"start":{"line":437,"column":27},"end":{"line":437,"column":89}}]},"28":{"line":438,"type":"if","locations":[{"start":{"line":438,"column":5},"end":{"line":438,"column":5}},{"start":{"line":438,"column":5},"end":{"line":438,"column":5}}]},"29":{"line":444,"type":"if","locations":[{"start":{"line":444,"column":5},"end":{"line":444,"column":5}},{"start":{"line":444,"column":5},"end":{"line":444,"column":5}}]},"30":{"line":474,"type":"if","locations":[{"start":{"line":474,"column":2},"end":{"line":474,"column":2}},{"start":{"line":474,"column":2},"end":{"line":474,"column":2}}]},"31":{"line":479,"type":"if","locations":[{"start":{"line":479,"column":2},"end":{"line":479,"column":2}},{"start":{"line":479,"column":2},"end":{"line":479,"column":2}}]},"32":{"line":480,"type":"if","locations":[{"start":{"line":480,"column":4},"end":{"line":480,"column":4}},{"start":{"line":480,"column":4},"end":{"line":480,"column":4}}]},"33":{"line":483,"type":"if","locations":[{"start":{"line":483,"column":2},"end":{"line":483,"column":2}},{"start":{"line":483,"column":2},"end":{"line":483,"column":2}}]},"34":{"line":486,"type":"if","locations":[{"start":{"line":486,"column":2},"end":{"line":486,"column":2}},{"start":{"line":486,"column":2},"end":{"line":486,"column":2}}]},"35":{"line":489,"type":"if","locations":[{"start":{"line":489,"column":2},"end":{"line":489,"column":2}},{"start":{"line":489,"column":2},"end":{"line":489,"column":2}}]},"36":{"line":492,"type":"if","locations":[{"start":{"line":492,"column":2},"end":{"line":492,"column":2}},{"start":{"line":492,"column":2},"end":{"line":492,"column":2}}]},"37":{"line":495,"type":"if","locations":[{"start":{"line":495,"column":2},"end":{"line":495,"column":2}},{"start":{"line":495,"column":2},"end":{"line":495,"column":2}}]},"38":{"line":498,"type":"if","locations":[{"start":{"line":498,"column":2},"end":{"line":498,"column":2}},{"start":{"line":498,"column":2},"end":{"line":498,"column":2}}]},"39":{"line":501,"type":"if","locations":[{"start":{"line":501,"column":2},"end":{"line":501,"column":2}},{"start":{"line":501,"column":2},"end":{"line":501,"column":2}}]},"40":{"line":504,"type":"if","locations":[{"start":{"line":504,"column":2},"end":{"line":504,"column":2}},{"start":{"line":504,"column":2},"end":{"line":504,"column":2}}]},"41":{"line":507,"type":"if","locations":[{"start":{"line":507,"column":2},"end":{"line":507,"column":2}},{"start":{"line":507,"column":2},"end":{"line":507,"column":2}}]},"42":{"line":508,"type":"if","locations":[{"start":{"line":508,"column":4},"end":{"line":508,"column":4}},{"start":{"line":508,"column":4},"end":{"line":508,"column":4}}]},"43":{"line":773,"type":"if","locations":[{"start":{"line":773,"column":3},"end":{"line":773,"column":3}},{"start":{"line":773,"column":3},"end":{"line":773,"column":3}}]},"44":{"line":778,"type":"if","locations":[{"start":{"line":778,"column":3},"end":{"line":778,"column":3}},{"start":{"line":778,"column":3},"end":{"line":778,"column":3}}]},"45":{"line":779,"type":"if","locations":[{"start":{"line":779,"column":6},"end":{"line":779,"column":6}},{"start":{"line":779,"column":6},"end":{"line":779,"column":6}}]},"46":{"line":785,"type":"if","locations":[{"start":{"line":785,"column":3},"end":{"line":785,"column":3}},{"start":{"line":785,"column":3},"end":{"line":785,"column":3}}]},"47":{"line":788,"type":"if","locations":[{"start":{"line":788,"column":3},"end":{"line":788,"column":3}},{"start":{"line":788,"column":3},"end":{"line":788,"column":3}}]},"48":{"line":789,"type":"if","locations":[{"start":{"line":789,"column":6},"end":{"line":789,"column":6}},{"start":{"line":789,"column":6},"end":{"line":789,"column":6}}]},"49":{"line":795,"type":"if","locations":[{"start":{"line":795,"column":3},"end":{"line":795,"column":3}},{"start":{"line":795,"column":3},"end":{"line":795,"column":3}}]},"50":{"line":798,"type":"if","locations":[{"start":{"line":798,"column":3},"end":{"line":798,"column":3}},{"start":{"line":798,"column":3},"end":{"line":798,"column":3}}]},"51":{"line":801,"type":"if","locations":[{"start":{"line":801,"column":3},"end":{"line":801,"column":3}},{"start":{"line":801,"column":3},"end":{"line":801,"column":3}}]},"52":{"line":804,"type":"if","locations":[{"start":{"line":804,"column":3},"end":{"line":804,"column":3}},{"start":{"line":804,"column":3},"end":{"line":804,"column":3}}]},"53":{"line":807,"type":"if","locations":[{"start":{"line":807,"column":3},"end":{"line":807,"column":3}},{"start":{"line":807,"column":3},"end":{"line":807,"column":3}}]},"54":{"line":810,"type":"if","locations":[{"start":{"line":810,"column":3},"end":{"line":810,"column":3}},{"start":{"line":810,"column":3},"end":{"line":810,"column":3}}]},"55":{"line":813,"type":"if","locations":[{"start":{"line":813,"column":3},"end":{"line":813,"column":3}},{"start":{"line":813,"column":3},"end":{"line":813,"column":3}}]},"56":{"line":816,"type":"if","locations":[{"start":{"line":816,"column":3},"end":{"line":816,"column":3}},{"start":{"line":816,"column":3},"end":{"line":816,"column":3}}]},"57":{"line":819,"type":"if","locations":[{"start":{"line":819,"column":3},"end":{"line":819,"column":3}},{"start":{"line":819,"column":3},"end":{"line":819,"column":3}}]},"58":{"line":822,"type":"if","locations":[{"start":{"line":822,"column":3},"end":{"line":822,"column":3}},{"start":{"line":822,"column":3},"end":{"line":822,"column":3}}]},"59":{"line":825,"type":"if","locations":[{"start":{"line":825,"column":3},"end":{"line":825,"column":3}},{"start":{"line":825,"column":3},"end":{"line":825,"column":3}}]},"60":{"line":830,"type":"if","locations":[{"start":{"line":830,"column":3},"end":{"line":830,"column":3}},{"start":{"line":830,"column":3},"end":{"line":830,"column":3}}]},"61":{"line":835,"type":"if","locations":[{"start":{"line":835,"column":3},"end":{"line":835,"column":3}},{"start":{"line":835,"column":3},"end":{"line":835,"column":3}}]},"62":{"line":838,"type":"if","locations":[{"start":{"line":838,"column":3},"end":{"line":838,"column":3}},{"start":{"line":838,"column":3},"end":{"line":838,"column":3}}]},"63":{"line":841,"type":"if","locations":[{"start":{"line":841,"column":3},"end":{"line":841,"column":3}},{"start":{"line":841,"column":3},"end":{"line":841,"column":3}}]},"64":{"line":844,"type":"if","locations":[{"start":{"line":844,"column":3},"end":{"line":844,"column":3}},{"start":{"line":844,"column":3},"end":{"line":844,"column":3}}]},"65":{"line":847,"type":"if","locations":[{"start":{"line":847,"column":3},"end":{"line":847,"column":3}},{"start":{"line":847,"column":3},"end":{"line":847,"column":3}}]},"66":{"line":850,"type":"if","locations":[{"start":{"line":850,"column":3},"end":{"line":850,"column":3}},{"start":{"line":850,"column":3},"end":{"line":850,"column":3}}]},"67":{"line":853,"type":"if","locations":[{"start":{"line":853,"column":3},"end":{"line":853,"column":3}},{"start":{"line":853,"column":3},"end":{"line":853,"column":3}}]},"68":{"line":856,"type":"if","locations":[{"start":{"line":856,"column":3},"end":{"line":856,"column":3}},{"start":{"line":856,"column":3},"end":{"line":856,"column":3}}]}},"code":["/**"," * Load dependencies"," */","var querystring = require('querystring'),","    format = require('./utils/format'),","    arrayUtils = require('./utils/array'),","    versionUtils = require('./utils/version');","","/**"," * Expose `Query`"," */","","module.exports = exports = Query;","","/**"," * Create a new `Query`"," * @constructor"," *"," * @return {Query}"," * @api private"," */","","function Query(options){","   this.solrVersion = (options && options.solrVersion) || undefined;","   this.parameters = [];","}","","/**"," * Set a new parameter"," * Since all possibilities provided by Solr are not available in the `Query` object, `set()` is there to fit this gap."," *"," * @param {String} parameter - string, special characters have to be correctly encoded or the request will fail."," *"," * @return {Query} - allow chaining"," * @api public"," */","Query.prototype.set = function(parameter){","   var self = this;","   this.parameters.push(parameter);","   return self;","}","","/**"," * Set the query parser to use with this request."," *"," * @param {String} type - name of the query parser e.g: 'dismax'"," *"," * @return {Query}"," * @api public"," */","","Query.prototype.defType = function(type){","   var self = this;","   var parameter = 'defType=' + type;","   this.parameters.push(parameter);","   return self;","}","","/**"," * Set the Request Handler used to process the request based on its `name`."," * Works only if no Request Handler has been configured with `/select` as its name in solrconfig.xml."," *"," * @param {String} name - name of the Request Handler"," *"," * @return {Query}"," * @api public"," */","","Query.prototype.requestHandler =","Query.prototype.qt = function(name){","  var self = this;","  var parameter = 'qt=' + name;","  this.parameters.push(parameter);","  return self;","}","","/**"," *  Set the main query"," *"," * @param {String|Object} q -"," *"," * @return  {Query}"," * @api public"," */","","Query.prototype.q = function(q){","   var self = this;","   var parameter ='q=';","   if ( typeof(q) === 'string' ){","      parameter += encodeURIComponent(q);","   }else{","      parameter += querystring.stringify(q, '%20AND%20',':');","   }","   this.parameters.push(parameter);","   return self;","}","","/**"," *  Set the default query operator"," *"," * @param {String} op -"," *"," * @return  {Query}"," * @api public"," */","","Query.prototype.qop = function(op){","    var self = this;","    var parameter ='q.op=';","    parameter += op;","    this.parameters.push(parameter);","    return self;","};","","/**"," * Set the default query field."," *"," * @param {String} df - the default field where solr should search."," *"," * @return  {Query}"," * @api public"," */","Query.prototype.df = function (df) {","    var self = this;","    var parameter = 'df=';","    parameter += df;","    this.parameters.push(parameter);","    return self;","};","","/**"," * Set the offset where the set of returned documents should begin."," *"," * @param {Number} start - the offset where the set of returned documents should begin."," *"," * @return {Query}"," * @api public"," */","","Query.prototype.start = function(start){","   var self = this;","   var parameter = 'start=' + start ;","   this.parameters.push(parameter);","   return self;","}","","/**"," * Set the maximum number of documents returned"," *"," * @param {Number} rows - number of documents"," *"," * @return {Query}"," * @api public"," */","Query.prototype.rows = function(rows){","   var self = this;","   var parameter = 'rows=' + rows ;","   this.parameters.push(parameter);","   return self;","}","","/**"," * Request to use cursorMarks for deep-paging as explained in http://heliosearch.org/solr/paging-and-deep-paging/"," * Note that usage of a cursor requires a sort containing a uniqueKey field tie breaker"," *"," * @param {String} mark - The mark to use, defaults to \"*\" to request a new cursor in the first request"," *"," * @return {Query}"," * @api public"," */","Query.prototype.cursorMark = function(mark){","   var self = this;","   mark = mark || \"*\";","   var parameter = 'cursorMark=' + mark ;","   this.parameters.push(parameter);","   return self;","}","","/**"," * Sort a result in descending or ascending order based on one or more fields."," *"," * @param {Object} options -"," *"," * @return {Query}"," * @api public"," */","","Query.prototype.sort = function(options){","   var self = this;","   var parameter = 'sort=';","   parameter += querystring.stringify(options, ',' , '%20');","   this.parameters.push(parameter);","   return self;","}","","/**"," * Filter the set of documents found before to return the result with the given range determined by `field`, `start` and `end`."," *"," * @param {Array|Object} options -"," * @param {String} options.field - the name of the field where the range is applied"," * @param {String|Number|Date} options.start - the offset where the range starts"," * @param {String|Number|Date} options.end - the offset where the range ends"," *"," * @return {Query}"," * @api public"," *"," * @example"," * var query = client.createQuery();"," * query.q({ '*' : '*' }).rangeFilter({ field : 'id', start : 100, end : 200})"," * // also works"," * query.q({ '*' : '*' }).rangeFilter([{ field : 'id', start : 100, end : 200},{ field : 'date', start : new Date(), end : new Date() - 3600}]);"," */","","Query.prototype.rangeFilter = function(options){","   var self = this;","   options = format.dateISOify(options);","   var parameter = 'fq=';","   if(Array.isArray(options)){","     parameter += \"(\";","      var filters = options.map(function(option){","         var key = option.field;","         var filter = {};","         filter[key] = '[' + encodeURIComponent(option.start) + '%20TO%20' + encodeURIComponent(option.end) + ']';","         return format.stringify(filter, '',':');","      });","      parameter += filters.join('%20AND%20');","      parameter += \")\";","   }else{","      var key = options.field;","      var filter = {};","      filter[key] = '[' + encodeURIComponent(options.start) + '%20TO%20' + encodeURIComponent(options.end) + ']';","      parameter += format.stringify(filter, '',':');","   }","   this.parameters.push(parameter);","   return self;","}","","/**"," * Filter the set of documents found before to return the result with the given `field` and `value`."," *"," * @param {String} field - name of field"," * @param {String|Number|Date} value - value of the field that must match"," *"," * @return {Query}"," * @api public"," *"," * @example"," * var query = client.createQuery();"," * query.q({ '*' : '*' }).matchFilter('id', 100)"," */","","Query.prototype.matchFilter = function(field,value){","   var self = this;","   value = format.dateISOify(value);","   var parameter = 'fq=';","   parameter += field + ':' + encodeURIComponent(value);","   this.parameters.push(parameter);","   return self;","}","","/**"," * Specify a set of fields to return."," *"," * @param {String|Array} field - field name"," *"," * @return {Query}"," * @api public"," */","","Query.prototype.fl =","Query.prototype.restrict = function(fields){","   var self = this;","   var parameter = 'fl=';","   if(typeof(fields) === 'string'){","      parameter += fields;","   }else{","      parameter += fields.join(',');","   }","   this.parameters.push(parameter);","   return self;","}","","/**"," * Set the time allowed for a search to finish."," * Partial results may be returned (if there are any)."," *"," * @param {String|Number} time - time is in milliseconds. Values <= 0 mean no time restriction."," *"," * @return {Query}"," * @api public"," */","","Query.prototype.timeout = function(time){","   var self = this;","   var parameter = 'timeAllowed=' + time;","   this.parameters.push(parameter);","   return self;","}","","/**"," * Group documents with the given `field`"," *"," * @param {String} field - field name"," *"," * @return {Query}"," * @api public"," */","","Query.prototype.groupBy = function(field){","   var self = this;","   this.group({","      'field': field","   });","   return self;","}","","/**"," * Group documents using field collapsing or result grouping feature."," * Field Collapsing collapses a group of results with the same field value down to a single (or fixed number) of entries."," * Result Grouping groups documents with a common field value into groups, returning the top documents per group, and the top groups based on what documents are in the groups."," *"," * @param {Object} options"," * @param {Boolean} [options.on=true] - if false, turn off result grouping, otherwise turn on."," * @param {String|Array} options.field - Group based on the unique values of a field."," * @param {Number} [options.limit=1] - The number of results (documents) to return for each group. Solr's default value is 1."," * @param {Number} options.offset - The offset into the document list of each group."," * @param {String} [options.sort=\"score desc\"] - How to sort documents within a single group. Defaults to the same value as the sort parameter."," * @param {String} options.format - if simple, the grouped documents are presented in a single flat list. The start and rows parameters refer to numbers of documents instead of numbers of groups."," * @param {Boolean} options.main - If true, the result of the last field grouping command is used as the main result list in the response, using group.format=simple."," * @param {Boolean} [options.ngroups=false] - If true, includes the number of groups that have matched the query. Default is false."," * @param {Boolean} options.truncate - If true, facet counts are based on the most relevant document of each group matching the query. Same applies for StatsComponent. Default is false."," * @param {Number}  [options.cache=0] - If > 0 enables grouping cache. Grouping is executed actual two searches. This option caches the second search. A value of 0 disables grouping caching. Default is 0."," *"," * @return {Query}"," * @api public"," */","","Query.prototype.group = function(options){","   var self = this;","   if(options.on === false){","      this.parameters.push('group=false');","   }else{","      this.parameters.push('group=true');","   }","   if( options.field ){","      options.field = arrayUtils.toArray(options.field);","      options.field.forEach(function(field){","        self.parameters.push('group.field=' + field);","      });","   }","   if( options.limit !== undefined){","      this.parameters.push('group.limit=' + options.limit);","   }","   if( options.offset !== undefined){","      this.parameters.push('group.offset=' + options.offset);","   }","   if( options.sort ){","      this.parameters.push('group.sort=' + encodeURIComponent(options.sort));","   }","   if( options.format ){","      this.parameters.push('group.format=' + encodeURIComponent(options.format));","   }","   if( options.main !== undefined){","      this.parameters.push('group.main=' + options.main);","   }","   if( options.ngroups !== undefined){","      this.parameters.push('group.ngroups=' + options.ngroups);","   }","   if( options.truncate !== undefined){","      this.parameters.push('group.truncate=' + options.truncate);","   }","   if( options.cache !== undefined){","      this.parameters.push('group.cache.percent=' + options.cache);","   }","   return self;","}","","/**"," * Create a facet"," *"," * @param {Object} options - set of options to create a facet"," * @param {Boolean} [options.on=true] - Turn on or off facet"," * @param {String} [options.query] - This parameter allows you to specify an arbitrary query in the Lucene default syntax to generate a facet count. By default, faceting returns a count of the unique terms for a \"field\", while facet.query allows you to determine counts for arbitrary terms or expressions."," * @param {String|Array} options.field - This parameter allows you to specify a field which should be treated as a facet. It will iterate over each Term in the field and generate a facet count using that Term as the constraint. Multiple fields can be defined providing an array instead of a string."," * @param {String} [options.prefix] - Limits the terms on which to facet to those starting with the given string prefix."," * @param {String} [options.sort] - This param determines the ordering of the facet field constraints.count"," * @param {Number} [options.limit=100] - This parameter indicates the maximum number of constraint counts that should be returned for the facet fields. A negative value means unlimited.The solr's default value is 100."," * @param {Number} [options.offset=0] - This param indicates an offset into the list of constraints to allow paging.The solr's default value is 0."," * @param {Number} [options.mincount=0] - This parameter indicates the minimum counts for facet fields should be included in the response. The solr's default value is 0."," * @param {Boolean} [options.missing=false] - Set to `true` this param indicates that in addition to the Term based constraints of a facet field, a count of all matching results which have no value for the field should be computed. The solr's default value is false."," * @param {String} [options.method=\"fc\"] - This parameter indicates what type of algorithm/method to use when faceting a field.The solr's default value is fc (except for BoolField)."," * @param {String|Array} options.pivot - This parameter allows you to specify a field which should be treated as a facet pivot. It will iterate over each Term in the field. Multiple fields can be defined providing an array instead of a string."," * @param {String} [options.pivot.mincount=0] - This parameter indicates the minimum counts for facet pivot fields to be included in the response. The solr's default value is 0."," *"," * @return {Query}"," * @api public"," */","Query.prototype.facet = function(options){","   var self = this;","   if(options.on === false){","      this.parameters.push('facet=false');","   }else{","      this.parameters.push('facet=true');","   }","   if(options.query){","      this.parameters.push('facet.query=' + encodeURIComponent(options.query))","   }","   if(options.field){","     options.field = arrayUtils.toArray(options.field);","     options.field.forEach(function(field) {","       self.parameters.push('facet.field=' + field);","     });","   }","   if(options.prefix){","      this.parameters.push('facet.prefix=' + encodeURIComponent(options.prefix))","   }","   if(options.sort){","      this.parameters.push('facet.sort=' + encodeURIComponent(options.sort))","   }","   if(options.limit !== undefined){","      this.parameters.push('facet.limit=' + options.limit);","   }","   if(options.offset !== undefined){","      this.parameters.push('facet.offset=' + options.offset);","   }","   if(options.mincount !== undefined){","      this.parameters.push('facet.mincount=' + options.mincount);","   }","   if(options.missing !== undefined){","      this.parameters.push('facet.missing=' + options.missing);","   }","   if(options.method){","      this.parameters.push('facet.method=' + options.method);","   }","","   // Only supported with version 4.0 and above","   if(this.solrVersion && (versionUtils.version(this.solrVersion) >= versionUtils.Solr4_0)) {","     if(options.pivot){","       options.field = arrayUtils.toArray(options.pivot.fields);","       options.field.forEach(function(field) {","         self.parameters.push('facet.pivot=' + field);","       });","     }","     if(options.pivot.mincount) {","       this.parameters.push('facet.pivot.mincount=' + options.pivot.mincount);","     }","   }","","   return self;","}","","/**"," * Create a MoreLikeThis. MoreLikeThis constructs a lucene query based on terms within a document."," *"," * @param {Object} options - set of options to create a morelikethis"," * @param {Boolean} [options.on=true] - Turn on or off morelikethis"," * @param {String|Array} [options.fl] - The fields to use for similarity. NOTE: if possible, these should have a stored TermVector"," * @param {Number} [options.count] - The number of similar documents to return for each result."," * @param {Number} [options.mintf] - Minimum Term Frequency - the frequency below which terms will be ignored in the source doc."," * @param {Number} [options.mindf] - Minimum Document Frequency - the frequency at which words will be ignored which do not occur in at least this many docs."," * @param {Number} [options.minwl] - minimum word length below which words will be ignored."," * @param {Number} [options.maxwl] - maximum word length above which words will be ignored."," * @param {Number} [options.maxqt] - maximum number of query terms that will be included in any generated query."," * @param {Number} [options.maxntp] - maximum number of tokens to parse in each example doc field that is not stored with TermVector support."," * @param {Boolean} [options.boost] - set if the query will be boosted by the interesting term relevance."," * @param {String|Object} [options.qf] - Query fields and their boosts using the same format as that used in DisMaxQParserPlugin. These fields must also be specified in mlt.fl."," *"," * @return {Query}"," * @api public"," */","","Query.prototype.mlt = function(options){","  var self = this;","  if(options.on === false){","    this.parameters.push('mlt=false');","  }else{","    this.parameters.push('mlt=true');","  }","  if(options.fl){","    if(options.fl instanceof Array) options.fl = options.fl.join(',');","    this.parameters.push('mlt.fl=' + encodeURIComponent(options.fl))","  }","  if(options.count !== undefined){","    this.parameters.push('mlt.count=' + options.count)","  }","  if(options.mintf !== undefined){","    this.parameters.push('mlt.mintf=' + options.mintf)","  }","  if(options.mindf !== undefined){","    this.parameters.push('mlt.mindf=' + options.mindf);","  }","  if(options.minwl !== undefined){","    this.parameters.push('mlt.minwl=' + options.minwl)","  }","  if(options.maxwl !== undefined ){","    this.parameters.push('mlt.maxwl=' + options.maxwl)","  }","  if(options.maxqt !== undefined){","    this.parameters.push('mlt.maxqt=' + options.maxqt)","  }","  if(options.maxntp !== undefined){","    this.parameters.push('mlt.maxntp=' + options.maxntp);","  }","  if(options.boost !== undefined){","    this.parameters.push('mlt.boost=' + options.boost);","  }","  if(options.qf){","    if( typeof options.qf === 'object'){","      var parameter = querystring.stringify(options.qf, '%20' , '^');;","    }else{","      var parameter = encodeURIComponent(options.qf);","    }","    this.parameters.push('mlt.qf=' + parameter);","  }","  return self;","}","","/*!"," * DisMax parameters"," * do not forget to use `.dismax()` when using these parameters"," */","","/**"," * Use the DisMax query parser"," *"," * @return {Query}"," * @api public"," */","","Query.prototype.dismax = function(){","   var self = this;","   this.defType('dismax');","   return self;","}","","/*!"," * EDisMax parameters"," * do not forget to use `.edismax()` when using these parameters"," */","","/**"," * Use the EDisMax query parser"," *"," * @return {Query}"," * @api public"," */","","Query.prototype.edismax = function(){","   var self = this;","   this.defType('edismax');","   return self;","}","","/**"," * Add the parameter debugQuery."," * Additional debugging informations will be available in the response."," *"," * @return {Query}"," * @api public"," */","","Query.prototype.debugQuery = function(){","   var self = this;","   this.parameters.push('debugQuery=true');","   return self;","}","","//TODO","Query.prototype.ps = function(){}","","/**"," * Set the \"boosts\" to associate with each fields"," *"," * @param {Object} options -"," *"," * @return {Query}"," * @api public"," *"," * @example"," * var query = client.createQuery();"," * query.qf({title : 2.2, description : 0.5 });"," */","","Query.prototype.qf = function(options){","   var self = this;","   var parameter = 'qf=' ;","   parameter += querystring.stringify(options, '%20' , '^');","   this.parameters.push(parameter);","   return self;","}","","/**"," * Set the minimum number or percent of clauses that must match."," *"," * @param {String|Number} minimum - number or percent of clauses that must match"," *"," * @return {Query}"," * @api public"," *"," * @example"," * var query = client.createQuery();"," * query.mm(2); // or query.mm('75%');"," */","","Query.prototype.mm = function(minimum){","   var self = this;","   var parameter = 'mm=' + minimum;","   this.parameters.push(parameter);","   return self;","}","","/**"," * Set the Phrase Fields parameter."," * Once the list of matching documents has been identified using the \"fq\" and \"qf\" params, the \"pf\" param can be used to \"boost\" the score of documents in cases where all of the terms"," * in the \"q\" param appear in close proximity."," *"," * @param {Object} options -"," *"," * @return {Query}"," * @api public"," */","","Query.prototype.pf = function(options){","   var self = this;","   var parameter = 'pf=' ;","   parameter += querystring.stringify(options, '%20' , '^');","   this.parameters.push(parameter);","   return self;","}","","/**"," * Set the phrase slop allowed in a query."," *"," * @param {Number} slop - Amount of phrase slop allowed by the query filter. This value should represent the maximum number of words allowed between words in a field that match a phrase in the query."," *"," * @return {Query}"," * @api public"," */","","Query.prototype.ps = function(slop){","   var self = this;","   var parameter = 'ps=' + slop;","   this.parameters.push(parameter);","   return self;","};","","/**"," * Set the query slop allowed in a query."," *"," * @param {Number} slop - Amount of query slop allowed by the query filter. This value should be used to affect boosting of query strings."," *"," * @return {Query}"," * @api public"," */","Query.prototype.qs = function(slop){","   var self = this;","   var parameter = 'qs=' + slop;","   this.parameters.push(parameter);","   return self;","};","","/**"," * Set the tiebreaker in DisjunctionMaxQueries (should be something much less than 1)"," *"," * @param {Float|Number} tiebreaker -"," *"," * @return {Query}"," * @api public"," */","","Query.prototype.tie = function(tiebreaker){","   var self = this;","   var parameter = 'tie=' + tiebreaker;","   this.parameters.push(parameter);","   return self;","}","","/**"," * Set the Boost Query parameter."," * A raw query string (in the SolrQuerySyntax) that will be included with the user's query to influence the score. If this is a BooleanQuery with a default boost (1.0f) then the individual clauses will be added directly to the main query. Otherwise, the query will be included as is."," *"," * @param {Object} options -"," *"," * @return {Query}"," * @api public"," */","","Query.prototype.bq = function(options){","   var self = this;","   var parameter = 'bq=' ;","   parameter += querystring.stringify(options, '%20' , '^');","   this.parameters.push(parameter);","   return self;","}","","","/**"," * Set the Functions (with optional boosts) that will be included in the user's query to influence the score."," * @param {String} functions - e.g.: `recip(rord(myfield),1,2,3)^1.5`"," *"," * @return {Query}"," * @api public"," */","","Query.prototype.bf = function(functions){","   var self = this;","   var parameter = 'bf=' + functions;","   this.parameters.push(parameter);","   return self;","}","","/**"," * Set the Functions (with optional boosts) that will be included in the user's query to influence the score."," * @param {String} functions - e.g.: `recip(rord(myfield),1,2,3)^1.5`"," *"," * @return {Query}"," * @api public"," */","","Query.prototype.boost = function(functions){","   var self = this;","   var parameter = 'boost=' + encodeURIComponent(functions);","   this.parameters.push(parameter);","   return self;","}","","/**"," * Build a querystring with the array of `this.parameters`."," *"," * @return {String}"," * @api private"," */","Query.prototype.build = function(){","   return this.parameters.join('&');","}","","/**"," * Set the Query Highlighting parameter."," *"," * @param {Object} options - set of options for Highlighting"," * @param {Boolean} [options.on=true] - Turn on or off Highlighting"," * @param {String|Array} [options.q] - This parameters specifies and overriding query for highlighting. Multiple values specified in an array will be chained together with AND."," * @param {String} [options.qparser] - This parameter specifies the qparser for the hl.q query."," * @param {String|Array} [options.fl] - 'Field list.' Fields to be highlighted. Multiple fields can be entered by providing an array."," * @param {Number} [options.snippets] - This parameter defines the maximum number of snippets to generate per field. Any number of snippets from 0 to this number can be generated per field"," * @param {Number} [options.fragsize] - This parameter defines the size, in characters, of the fragments to consider for highlighting."," * @param {Boolean} [options.mergeContiguous] - This parameter instructs Solr to collapse continguous fragments into a single fragment."," * @param {Number} [options.maxAnalyzedChars] - This param specifies the number of characters into a document that Solr should look for suitable snippets."," * @param {Number} [options.maxMultiValuedToExamine] - This param specifies the max number of entries in a multi-valued field to examine before stopping"," * @param {Number} [options.maxMultiValuedToMatch] - This param specifies the maximum number of matches in a multi-valued field that are found before stopping."," * @param {String} [options.alternateField] - Specifies a field to be used as a backup default summary if Solr cannot generate a snippet."," * @param {Number} [options.maxAlternateFieldLength] - Specifies the maximum number of characters of the field to return. A number <=0 means the field length is unlimited."," * @param {String} [options.formatter] - Selects a formatter for the highlighted output. At the time of writing, the only legal value is 'simple'."," * @param {String} [options.simplePre] - This parameter defines the string to place before the data to be highlighted."," * @param {String} [options.simplePost] - This parameter defines the string to place after the data to be highlighted."," * @param {String} [options.fragmenter] - Specifies a text snippet generator for highlighted text. Default is 'gap' but 'regex' is another option."," * @param {Boolean} [options.highlightMultiTerm] - Turn on or off MultiTermHighlighting. If True, Solr will use Highlight phrase terms that appear in multiple fields."," * @param {Boolean} [options.requireFieldMatch] - If set to True, this parameter will force Solr to highlight terms only if they appear in the specified field. If false, terms are highlighted in all requested fields regardless of which field matches the query."," * @param {Boolean} [options.usePhraseHighlighter] - If set to True, Solr will use the Lucene SpanScorer class to highlight phrase terms only when they appear within the query phrase in the document."," * @param {Number} [options.regexSlop] - When using the regex fragmenter, this number specifies the factor by which the fragmenter can stray from the ideal fragment size."," * @param {String} [options.regexPattern] - This parameter specifies the regulat expression for fragmenting."," * @param {Number} [options.regexMaxAnalyzedChars] - This parameters specifies the max number of characters to analyze from a field when using the regex fragmenter."," * @param {Boolean} [options.preserveMulti] - If True, multi-valued fields will return all values in the order they were saved in the index. If False, only values that match the highlight request will be returned."," * @param {Boolean} [options.payloads] - If usePhraseHighlighter is True, and the indexed field has payloads but not term vectors, the index payloads will be read into the highlighter's index along with the posting. If you don't want this behavior, you may set this parameter to False and save some memory.",""," *"," * @return {Query}"," * @api public"," */","","Query.prototype.hl = function(options){","   var self = this;","   if(options.on === false){","      this.parameters.push('hl=false');","   }else{","      this.parameters.push('hl=true');","   }","   if(options.q !== undefined){","      if ( typeof(options.q) === 'string' ){","         this.parameters.push('hl.q=' + encodeURIComponent(options.q));","      }else{","         this.parameters.push('hl.q=' + querystring.stringify(options.q, '%20AND%20',':'));","      }","   }","   if(options.qparser !== undefined){","      this.parameters.push('hl.qparser=' + encodeURIComponent(options.qparser));","   }","   if(options.fl !== undefined){","      if ( typeof(options.fl) === 'string' ){","         this.parameters.push('hl.fl=' + encodeURIComponent(options.fl));","      }else{","         this.parameters.push('hl.fl=' + options.fl.join(','));","      }","   }","   if(options.snippets !== undefined){","      this.parameters.push('hl.snippets=' + encodeURIComponent(options.snippets));","   }","   if(options.fragsize !== undefined){","      this.parameters.push('hl.fragsize=' + encodeURIComponent(options.fragsize));","   }","   if(options.mergeContiguous !== undefined){","      this.parameters.push('hl.mergeContiguous=' + encodeURIComponent(options.mergeContiguous));","   }","   if(options.requireFieldMatch !== undefined){","      this.parameters.push('hl.requireFieldMatch=' + encodeURIComponent(options.requireFieldMatch));","   }","   if(options.maxAnalyzedChars !== undefined){","      this.parameters.push('hl.maxAnalyzedChars=' + encodeURIComponent(options.maxAnalyzedChars));","   }","   if(options.maxMultiValuedToExamine !== undefined){","      this.parameters.push('hl.maxMultiValuedToExamine=' + encodeURIComponent(options.maxMultiValuedToExamine));","   }","   if(options.maxMultiValuedToMatch !== undefined){","      this.parameters.push('hl.maxMultiValuedToMatch=' + encodeURIComponent(options.maxMultiValuedToMatch));","   }","   if(options.alternateField){","      this.parameters.push('hl.alternateField=' + encodeURIComponent(options.alternateField));","   }","   if(options.maxAlternateFieldLength !== undefined){","      this.parameters.push('hl.maxAlternateFieldLength=' + encodeURIComponent(options.maxAlternateFieldLength));","   }","   if(options.formatter){","      this.parameters.push('hl.formatter=' + encodeURIComponent(options.formatter));","   }","   if(options.simplePre){","      this.parameters.push('hl.simple.pre=' + encodeURIComponent(options.simplePre));","   }else{","      this.parameters.push('hl.simple.pre=<em>');","   }","   if(options.simplePost){","      this.parameters.push('hl.simple.post=' + encodeURIComponent(options.simplePost));","   }else{","      this.parameters.push('hl.simple.post=<%2Fem>');","   }","   if(options.fragmenter){","      this.parameters.push('hl.fragmenter=' + encodeURIComponent(options.fragmenter));","   }","   if(options.highlightMultiTerm !== undefined){","      this.parameters.push('hl.highlightMultiTerm=' + encodeURIComponent(options.highlightMultiTerm));","   }","   if(options.usePhraseHighlighter !== undefined){","      this.parameters.push('hl.usePhraseHighlighter=' + encodeURIComponent(options.usePhraseHighlighter));","   }","   if(options.regexSlop !== undefined){","      this.parameters.push('hl.regex.slop=' + encodeURIComponent(options.regexSlop));","   }","   if(options.regexPattern){","      this.parameters.push('hl.regex.pattern=' + encodeURIComponent(options.regexPattern));","   }","   if(options.regexMaxAnalyzedChars){","      this.parameters.push('hl.regex.maxAnalyzedChars=' + encodeURIComponent(options.regexMaxAnalyzedChars));","   }","   if(options.preserveMulti !== undefined){","      this.parameters.push('hl.preserveMulti=' + encodeURIComponent(options.preserveMulti));","   }","   if(options.payloads !== undefined){","      this.parameters.push('hl.payloads=' + encodeURIComponent(options.payloads));","   }","","   return self;","}",""],"l":{"4":1,"13":1,"23":1,"24":0,"25":0,"37":1,"38":0,"39":0,"40":0,"52":1,"53":0,"54":0,"55":0,"56":0,"69":1,"71":0,"72":0,"73":0,"74":0,"86":1,"87":0,"88":0,"89":0,"90":0,"92":0,"94":0,"95":0,"107":1,"108":0,"109":0,"110":0,"111":0,"112":0,"123":1,"124":0,"125":0,"126":0,"127":0,"128":0,"140":1,"141":0,"142":0,"143":0,"144":0,"155":1,"156":0,"157":0,"158":0,"159":0,"171":1,"172":0,"173":0,"174":0,"175":0,"176":0,"188":1,"189":0,"190":0,"191":0,"192":0,"193":0,"214":1,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"226":0,"227":0,"229":0,"230":0,"231":0,"232":0,"234":0,"235":0,"252":1,"253":0,"254":0,"255":0,"256":0,"257":0,"258":0,"270":1,"272":0,"273":0,"274":0,"275":0,"277":0,"279":0,"280":0,"293":1,"294":0,"295":0,"296":0,"297":0,"309":1,"310":0,"311":0,"314":0,"338":1,"339":0,"340":0,"341":0,"343":0,"345":0,"346":0,"347":0,"348":0,"351":0,"352":0,"354":0,"355":0,"357":0,"358":0,"360":0,"361":0,"363":0,"364":0,"366":0,"367":0,"369":0,"370":0,"372":0,"373":0,"375":0,"398":1,"399":0,"400":0,"401":0,"403":0,"405":0,"406":0,"408":0,"409":0,"410":0,"411":0,"414":0,"415":0,"417":0,"418":0,"420":0,"421":0,"423":0,"424":0,"426":0,"427":0,"429":0,"430":0,"432":0,"433":0,"437":0,"438":0,"439":0,"440":0,"441":0,"444":0,"445":0,"449":0,"472":1,"473":0,"474":0,"475":0,"477":0,"479":0,"480":0,"481":0,"483":0,"484":0,"486":0,"487":0,"489":0,"490":0,"492":0,"493":0,"495":0,"496":0,"498":0,"499":0,"501":0,"502":0,"504":0,"505":0,"507":0,"508":0,"509":0,"511":0,"513":0,"515":0,"530":1,"531":0,"532":0,"533":0,"548":1,"549":0,"550":0,"551":0,"562":1,"563":0,"564":0,"565":0,"569":1,"584":1,"585":0,"586":0,"587":0,"588":0,"589":0,"605":1,"606":0,"607":0,"608":0,"609":0,"623":1,"624":0,"625":0,"626":0,"627":0,"628":0,"640":1,"641":0,"642":0,"643":0,"644":0,"655":1,"656":0,"657":0,"658":0,"659":0,"671":1,"672":0,"673":0,"674":0,"675":0,"688":1,"689":0,"690":0,"691":0,"692":0,"693":0,"705":1,"706":0,"707":0,"708":0,"709":0,"720":1,"721":0,"722":0,"723":0,"724":0,"733":1,"734":0,"771":1,"772":0,"773":0,"774":0,"776":0,"778":0,"779":0,"780":0,"782":0,"785":0,"786":0,"788":0,"789":0,"790":0,"792":0,"795":0,"796":0,"798":0,"799":0,"801":0,"802":0,"804":0,"805":0,"807":0,"808":0,"810":0,"811":0,"813":0,"814":0,"816":0,"817":0,"819":0,"820":0,"822":0,"823":0,"825":0,"826":0,"828":0,"830":0,"831":0,"833":0,"835":0,"836":0,"838":0,"839":0,"841":0,"842":0,"844":0,"845":0,"847":0,"848":0,"850":0,"851":0,"853":0,"854":0,"856":0,"857":0,"860":0}},"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/utils/format.js":{"path":"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/utils/format.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":1,"31":0,"32":0,"33":0,"34":0,"35":0,"36":1,"37":1,"38":0,"39":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0,0,0],"15":[0,0],"16":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"dateISOify","line":17,"loc":{"start":{"line":17,"column":0},"end":{"line":17,"column":24}}},"2":{"name":"toISOString","line":41,"loc":{"start":{"line":41,"column":0},"end":{"line":41,"column":27}}},"3":{"name":"stringify","line":63,"loc":{"start":{"line":63,"column":0},"end":{"line":63,"column":39}}},"4":{"name":"(anonymous_4)","line":70,"loc":{"start":{"line":70,"column":34},"end":{"line":70,"column":46}}},"5":{"name":"(anonymous_5)","line":72,"loc":{"start":{"line":72,"column":28},"end":{"line":72,"column":40}}},"6":{"name":"stringifyPrimitive","line":99,"loc":{"start":{"line":99,"column":0},"end":{"line":99,"column":31}}},"7":{"name":"escapeSpecialChars","line":130,"loc":{"start":{"line":130,"column":0},"end":{"line":130,"column":30}}},"8":{"name":"(anonymous_8)","line":131,"loc":{"start":{"line":131,"column":56},"end":{"line":131,"column":72}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":34}},"3":{"start":{"line":17,"column":0},"end":{"line":30,"column":1}},"4":{"start":{"line":18,"column":3},"end":{"line":28,"column":4}},"5":{"start":{"line":19,"column":6},"end":{"line":21,"column":7}},"6":{"start":{"line":20,"column":9},"end":{"line":20,"column":37}},"7":{"start":{"line":22,"column":9},"end":{"line":28,"column":4}},"8":{"start":{"line":23,"column":6},"end":{"line":25,"column":7}},"9":{"start":{"line":24,"column":9},"end":{"line":24,"column":73}},"10":{"start":{"line":24,"column":40},"end":{"line":24,"column":73}},"11":{"start":{"line":27,"column":6},"end":{"line":27,"column":55}},"12":{"start":{"line":27,"column":32},"end":{"line":27,"column":55}},"13":{"start":{"line":29,"column":3},"end":{"line":29,"column":14}},"14":{"start":{"line":41,"column":0},"end":{"line":43,"column":1}},"15":{"start":{"line":42,"column":3},"end":{"line":42,"column":71}},"16":{"start":{"line":49,"column":0},"end":{"line":49,"column":30}},"17":{"start":{"line":63,"column":0},"end":{"line":89,"column":1}},"18":{"start":{"line":64,"column":2},"end":{"line":64,"column":19}},"19":{"start":{"line":65,"column":2},"end":{"line":65,"column":17}},"20":{"start":{"line":66,"column":2},"end":{"line":66,"column":41}},"21":{"start":{"line":68,"column":2},"end":{"line":88,"column":3}},"22":{"start":{"line":70,"column":6},"end":{"line":82,"column":19}},"23":{"start":{"line":71,"column":8},"end":{"line":81,"column":9}},"24":{"start":{"line":72,"column":10},"end":{"line":76,"column":23}},"25":{"start":{"line":73,"column":12},"end":{"line":75,"column":41}},"26":{"start":{"line":78,"column":10},"end":{"line":80,"column":44}},"27":{"start":{"line":85,"column":6},"end":{"line":85,"column":27}},"28":{"start":{"line":85,"column":17},"end":{"line":85,"column":27}},"29":{"start":{"line":86,"column":6},"end":{"line":87,"column":37}},"30":{"start":{"line":99,"column":0},"end":{"line":113,"column":1}},"31":{"start":{"line":100,"column":2},"end":{"line":112,"column":3}},"32":{"start":{"line":102,"column":6},"end":{"line":102,"column":15}},"33":{"start":{"line":105,"column":6},"end":{"line":105,"column":34}},"34":{"start":{"line":108,"column":6},"end":{"line":108,"column":34}},"35":{"start":{"line":111,"column":6},"end":{"line":111,"column":16}},"36":{"start":{"line":119,"column":1},"end":{"line":119,"column":49}},"37":{"start":{"line":130,"column":0},"end":{"line":136,"column":1}},"38":{"start":{"line":131,"column":2},"end":{"line":135,"column":30}},"39":{"start":{"line":132,"column":4},"end":{"line":132,"column":24}}},"branchMap":{"1":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":3},"end":{"line":18,"column":3}},{"start":{"line":18,"column":3},"end":{"line":18,"column":3}}]},"2":{"line":22,"type":"if","locations":[{"start":{"line":22,"column":9},"end":{"line":22,"column":9}},{"start":{"line":22,"column":9},"end":{"line":22,"column":9}}]},"3":{"line":22,"type":"binary-expr","locations":[{"start":{"line":22,"column":12},"end":{"line":22,"column":33}},{"start":{"line":22,"column":37},"end":{"line":22,"column":59}}]},"4":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":9},"end":{"line":24,"column":9}},{"start":{"line":24,"column":9},"end":{"line":24,"column":9}}]},"5":{"line":27,"type":"if","locations":[{"start":{"line":27,"column":6},"end":{"line":27,"column":6}},{"start":{"line":27,"column":6},"end":{"line":27,"column":6}}]},"6":{"line":42,"type":"cond-expr","locations":[{"start":{"line":42,"column":45},"end":{"line":42,"column":63}},{"start":{"line":42,"column":66},"end":{"line":42,"column":70}}]},"7":{"line":42,"type":"binary-expr","locations":[{"start":{"line":42,"column":11},"end":{"line":42,"column":15}},{"start":{"line":42,"column":19},"end":{"line":42,"column":41}}]},"8":{"line":64,"type":"binary-expr","locations":[{"start":{"line":64,"column":8},"end":{"line":64,"column":11}},{"start":{"line":64,"column":15},"end":{"line":64,"column":18}}]},"9":{"line":65,"type":"binary-expr","locations":[{"start":{"line":65,"column":7},"end":{"line":65,"column":9}},{"start":{"line":65,"column":13},"end":{"line":65,"column":16}}]},"10":{"line":66,"type":"cond-expr","locations":[{"start":{"line":66,"column":25},"end":{"line":66,"column":34}},{"start":{"line":66,"column":37},"end":{"line":66,"column":40}}]},"11":{"line":68,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":82,"column":19}},{"start":{"line":84,"column":4},"end":{"line":87,"column":37}}]},"12":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":71,"column":8}},{"start":{"line":71,"column":8},"end":{"line":71,"column":8}}]},"13":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":6},"end":{"line":85,"column":6}},{"start":{"line":85,"column":6},"end":{"line":85,"column":6}}]},"14":{"line":100,"type":"switch","locations":[{"start":{"line":101,"column":4},"end":{"line":102,"column":15}},{"start":{"line":104,"column":4},"end":{"line":105,"column":34}},{"start":{"line":107,"column":4},"end":{"line":108,"column":34}},{"start":{"line":110,"column":4},"end":{"line":111,"column":16}}]},"15":{"line":105,"type":"cond-expr","locations":[{"start":{"line":105,"column":17},"end":{"line":105,"column":23}},{"start":{"line":105,"column":26},"end":{"line":105,"column":33}}]},"16":{"line":108,"type":"cond-expr","locations":[{"start":{"line":108,"column":27},"end":{"line":108,"column":28}},{"start":{"line":108,"column":31},"end":{"line":108,"column":33}}]}},"code":["/**"," * Expose `dateISOify()` and `toISOString()`"," */","","exports.dateISOify = dateISOify;","exports.toISOString = toISOString;","","/**"," * ISOify `Date` objects (possibly in collections)"," *"," * @param {Array|Object} obj"," *"," * @return {Array|Object}"," * @api private"," */","","function dateISOify(obj){","   if( obj instanceof Array ){","      for(var i = 0; i < obj.length; i++){","         obj[i] = dateISOify(obj[i]);","      }","   }else if(obj instanceof Object && !(obj instanceof Date) ){","      for(var key in obj){","         if( obj[key] instanceof Date ) obj[key] = toISOString(obj[key]);","      }","   }else{","      if( obj instanceof Date ) obj = toISOString(obj);","   }","   return obj;","};","","/**"," * ISOify a single `Date` object"," * Sidesteps `Invalid Date` objects by returning `null` instead"," *"," * @param {Date}"," *"," * @return {null|String}"," * @api private"," */","function toISOString(date) {","   return (date && !isNaN(date.getTime())) ? date.toISOString() : null;","};","","/**"," * Expose `stringify()`"," */","","exports.stringify = stringify;","","/**"," * Serialize an object to a string. Optionally override the default separator ('&') and assignment ('=') characters."," *"," * @param {Object} obj - object to serialiaze"," * @param {String} [sep] - separator character"," * @param {String} [eq] - assignment character"," * @param {String} [name] -"," *"," * @return {String}"," * @api private"," */","","function stringify(obj, sep, eq, name) {","  sep = sep || '&';","  eq = eq || '=';","  obj = (obj === null) ? undefined : obj;","","  switch (typeof obj) {","    case 'object':","      return Object.keys(obj).map(function(k) {","        if (Array.isArray(obj[k])) {","          return obj[k].map(function(v) {","            return stringifyPrimitive(k) +","                   eq +","                   stringifyPrimitive(v);","          }).join(sep);","        } else {","          return stringifyPrimitive(k) +","                 eq +","                 stringifyPrimitive(obj[k]);","        }","      }).join(sep);","","    default:","      if (!name) return '';","      return stringifyPrimitive(name) + eq +","             stringifyPrimitive(obj);","  }","};","","/**"," * Stringify a primitive"," *"," * @param {String|Boolean|Number} v - primitive value"," *"," * @return {String}"," * @api private"," */","function stringifyPrimitive(v) {","  switch (typeof v) {","    case 'string':","      return v;","","    case 'boolean':","      return v ? 'true' : 'false';","","    case 'number':","      return isFinite(v) ? v : '';","","    default:","      return '';","  }","};","","/**"," * Expose `escapeSpecialChars`"," */",""," exports.escapeSpecialChars = escapeSpecialChars;",""," /**","  * Escape special characters that are part of the query syntax of Lucene","  *","  * @param {String} s - string to escape","  *","  * @return {String}","  * @api public","  */","","function escapeSpecialChars(s){","  return s.replace(/([\\+\\-!\\(\\)\\{\\}\\[\\]\\^\"~\\*\\?:\\\\])/g, function(match) {","    return '\\\\' + match;","  })","  .replace(/&&/g, '\\\\&\\\\&')","  .replace(/\\|\\|/g, '\\\\|\\\\|');","}",""],"l":{"5":1,"6":1,"17":1,"18":0,"19":0,"20":0,"22":0,"23":0,"24":0,"27":0,"29":0,"41":1,"42":0,"49":1,"63":1,"64":0,"65":0,"66":0,"68":0,"70":0,"71":0,"72":0,"73":0,"78":0,"85":0,"86":0,"99":1,"100":0,"102":0,"105":0,"108":0,"111":0,"119":1,"130":1,"131":0,"132":0}},"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/utils/array.js":{"path":"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/utils/array.js","s":{"1":1,"2":0,"3":1,"4":0,"5":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"toArray","line":7,"loc":{"start":{"line":7,"column":18},"end":{"line":7,"column":57}}},"2":{"name":"defaultValue","line":10,"loc":{"start":{"line":10,"column":2},"end":{"line":10,"column":31}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":15,"column":2}},"2":{"start":{"line":8,"column":2},"end":{"line":8,"column":38}},"3":{"start":{"line":10,"column":2},"end":{"line":12,"column":3}},"4":{"start":{"line":11,"column":4},"end":{"line":11,"column":75}},"5":{"start":{"line":14,"column":2},"end":{"line":14,"column":64}}},"branchMap":{"1":{"line":8,"type":"binary-expr","locations":[{"start":{"line":8,"column":18},"end":{"line":8,"column":31}},{"start":{"line":8,"column":35},"end":{"line":8,"column":37}}]},"2":{"line":11,"type":"cond-expr","locations":[{"start":{"line":11,"column":53},"end":{"line":11,"column":66}},{"start":{"line":11,"column":69},"end":{"line":11,"column":74}}]},"3":{"line":11,"type":"binary-expr","locations":[{"start":{"line":11,"column":12},"end":{"line":11,"column":26}},{"start":{"line":11,"column":30},"end":{"line":11,"column":49}}]},"4":{"line":14,"type":"cond-expr","locations":[{"start":{"line":14,"column":34},"end":{"line":14,"column":39}},{"start":{"line":14,"column":42},"end":{"line":14,"column":63}}]}},"code":["/**"," *"," * @param value"," * @param defaultIfNull - Will set the value to the default if it is Null or Undefined"," * @returns {*[]}"," */","exports.toArray = function toArray(value, defaultIfNull) {","  defaultIfNull = defaultIfNull || '';","","  function defaultValue(value) {","    return (value === null || value === undefined) ? defaultIfNull : value;","  }","","  return (Array.isArray(value)) ? value : [defaultValue(value)];","};",""],"l":{"7":1,"8":0,"10":1,"11":0,"14":0}},"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/utils/version.js":{"path":"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/utils/version.js","s":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"(anonymous_1)","line":35,"loc":{"start":{"line":35,"column":18},"end":{"line":35,"column":40}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":5,"column":18}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":18}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":18}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":18}},"5":{"start":{"line":15,"column":0},"end":{"line":20,"column":2}},"6":{"start":{"line":22,"column":0},"end":{"line":22,"column":36}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":26}},"8":{"start":{"line":24,"column":0},"end":{"line":24,"column":26}},"9":{"start":{"line":25,"column":0},"end":{"line":25,"column":26}},"10":{"start":{"line":26,"column":0},"end":{"line":26,"column":26}},"11":{"start":{"line":35,"column":0},"end":{"line":37,"column":2}},"12":{"start":{"line":36,"column":2},"end":{"line":36,"column":161}}},"branchMap":{"1":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":46},"end":{"line":36,"column":79}},{"start":{"line":36,"column":84},"end":{"line":36,"column":159}}]},"2":{"line":36,"type":"cond-expr","locations":[{"start":{"line":36,"column":112},"end":{"line":36,"column":137}},{"start":{"line":36,"column":140},"end":{"line":36,"column":159}}]}},"code":["/**"," * The purpose of those helpers is to centralize and standardize the work on detecting current running Solr Version"," */","","var Solr3_2 = 302;","var Solr4_0 = 400;","var Solr5_0 = 500;","var Solr5_1 = 501;","","/**"," * Enum that lists supported versions of Solr. Pass one of the keys from this enum as a solrVersion property"," *"," * @type {{3.2: number, 4.0: number, 5.0: number, 5.1: number}}"," */","var versionsEnum = {","  '3.2': Solr3_2,","  '4.0': Solr4_0,","  '5.0': Solr5_0,","  '5.1': Solr5_1","};","","exports.versionsEnum = versionsEnum;","exports.Solr3_2 = Solr3_2;","exports.Solr4_0 = Solr4_0;","exports.Solr5_0 = Solr5_0;","exports.Solr5_1 = Solr5_1;","","/**"," * solrVersion must match one of enum keys"," * If a number is passed, it'll be assume a .0 release (3 -> 3.0)"," * If nothing matches, it will be assumed 3.2"," *"," * @param solrVersion"," */","exports.version = function(solrVersion) {","  return (typeof solrVersion === \"number\") ? (versionsEnum[''+solrVersion+'.0']) : (versionsEnum[solrVersion] ? versionsEnum[solrVersion] : versionsEnum['3.2']);","};",""],"l":{"5":1,"6":1,"7":1,"8":1,"15":1,"22":1,"23":1,"24":1,"25":1,"26":1,"35":1,"36":0}},"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/collection.js":{"path":"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/collection.js","s":{"1":1,"2":1,"3":1,"4":0,"5":1,"6":0,"7":0,"8":0,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":0,"44":0,"45":0,"46":0,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":1,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":1,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1,"90":0,"91":0,"92":0,"93":0,"94":0,"95":1,"96":0,"97":0,"98":0,"99":0,"100":0,"101":1,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":1,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":1,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":1,"158":0,"159":0,"160":0,"161":0,"162":0,"163":0,"164":0,"165":1,"166":0,"167":0,"168":0,"169":1,"170":0,"171":0,"172":0,"173":1,"174":0,"175":0,"176":0,"177":0,"178":0,"179":1,"180":0,"181":0,"182":0,"183":1,"184":0,"185":0,"186":0,"187":0,"188":0,"189":0,"190":0,"191":0,"192":0,"193":0,"194":0,"195":0,"196":0,"197":0,"198":0,"199":1,"200":0,"201":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"210":0,"211":1,"212":0,"213":0,"214":0,"215":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":1,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"232":0,"233":1,"234":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0],"29":[0,0],"30":[0,0],"31":[0,0],"32":[0,0],"33":[0,0],"34":[0,0],"35":[0,0],"36":[0,0],"37":[0,0],"38":[0,0],"39":[0,0],"40":[0,0],"41":[0,0],"42":[0,0],"43":[0,0],"44":[0,0],"45":[0,0],"46":[0,0],"47":[0,0],"48":[0,0],"49":[0,0],"50":[0,0],"51":[0,0],"52":[0,0],"53":[0,0],"54":[0,0],"55":[0,0],"56":[0,0],"57":[0,0],"58":[0,0],"59":[0,0],"60":[0,0],"61":[0,0],"62":[0,0],"63":[0,0],"64":[0,0],"65":[0,0],"66":[0,0],"67":[0,0],"68":[0,0]},"f":{"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0},"fnMap":{"1":{"name":"Collection","line":21,"loc":{"start":{"line":21,"column":0},"end":{"line":21,"column":21}}},"2":{"name":"(anonymous_2)","line":34,"loc":{"start":{"line":34,"column":27},"end":{"line":34,"column":46}}},"3":{"name":"(anonymous_3)","line":60,"loc":{"start":{"line":60,"column":30},"end":{"line":60,"column":48}}},"4":{"name":"(anonymous_4)","line":119,"loc":{"start":{"line":119,"column":30},"end":{"line":119,"column":45}}},"5":{"name":"(anonymous_5)","line":142,"loc":{"start":{"line":142,"column":34},"end":{"line":142,"column":52}}},"6":{"name":"(anonymous_6)","line":179,"loc":{"start":{"line":179,"column":35},"end":{"line":179,"column":53}}},"7":{"name":"(anonymous_7)","line":202,"loc":{"start":{"line":202,"column":35},"end":{"line":202,"column":53}}},"8":{"name":"(anonymous_8)","line":225,"loc":{"start":{"line":225,"column":35},"end":{"line":225,"column":53}}},"9":{"name":"(anonymous_9)","line":250,"loc":{"start":{"line":250,"column":35},"end":{"line":250,"column":50}}},"10":{"name":"(anonymous_10)","line":268,"loc":{"start":{"line":268,"column":30},"end":{"line":268,"column":45}}},"11":{"name":"(anonymous_11)","line":290,"loc":{"start":{"line":290,"column":37},"end":{"line":290,"column":55}}},"12":{"name":"(anonymous_12)","line":322,"loc":{"start":{"line":322,"column":34},"end":{"line":322,"column":52}}},"13":{"name":"(anonymous_13)","line":354,"loc":{"start":{"line":354,"column":35},"end":{"line":354,"column":53}}},"14":{"name":"(anonymous_14)","line":380,"loc":{"start":{"line":380,"column":31},"end":{"line":380,"column":49}}},"15":{"name":"(anonymous_15)","line":412,"loc":{"start":{"line":412,"column":31},"end":{"line":412,"column":49}}},"16":{"name":"(anonymous_16)","line":436,"loc":{"start":{"line":436,"column":34},"end":{"line":436,"column":52}}},"17":{"name":"(anonymous_17)","line":455,"loc":{"start":{"line":455,"column":38},"end":{"line":455,"column":49}}},"18":{"name":"(anonymous_18)","line":468,"loc":{"start":{"line":468,"column":37},"end":{"line":468,"column":48}}},"19":{"name":"(anonymous_19)","line":484,"loc":{"start":{"line":484,"column":37},"end":{"line":484,"column":57}}},"20":{"name":"(anonymous_20)","line":500,"loc":{"start":{"line":500,"column":28},"end":{"line":500,"column":39}}},"21":{"name":"(anonymous_21)","line":521,"loc":{"start":{"line":521,"column":38},"end":{"line":521,"column":56}}},"22":{"name":"(anonymous_22)","line":558,"loc":{"start":{"line":558,"column":41},"end":{"line":558,"column":59}}},"23":{"name":"(anonymous_23)","line":590,"loc":{"start":{"line":590,"column":42},"end":{"line":590,"column":60}}},"24":{"name":"(anonymous_24)","line":620,"loc":{"start":{"line":620,"column":40},"end":{"line":620,"column":58}}},"25":{"name":"(anonymous_25)","line":642,"loc":{"start":{"line":642,"column":29},"end":{"line":642,"column":39}}}},"statementMap":{"1":{"start":{"line":4,"column":0},"end":{"line":5,"column":39}},"2":{"start":{"line":11,"column":0},"end":{"line":11,"column":38}},"3":{"start":{"line":21,"column":0},"end":{"line":23,"column":1}},"4":{"start":{"line":22,"column":2},"end":{"line":22,"column":23}},"5":{"start":{"line":34,"column":0},"end":{"line":38,"column":1}},"6":{"start":{"line":35,"column":2},"end":{"line":35,"column":18}},"7":{"start":{"line":36,"column":2},"end":{"line":36,"column":34}},"8":{"start":{"line":37,"column":2},"end":{"line":37,"column":14}},"9":{"start":{"line":60,"column":0},"end":{"line":109,"column":1}},"10":{"start":{"line":61,"column":2},"end":{"line":61,"column":18}},"11":{"start":{"line":62,"column":2},"end":{"line":62,"column":40}},"12":{"start":{"line":63,"column":2},"end":{"line":65,"column":3}},"13":{"start":{"line":64,"column":4},"end":{"line":64,"column":49}},"14":{"start":{"line":66,"column":2},"end":{"line":68,"column":3}},"15":{"start":{"line":67,"column":4},"end":{"line":67,"column":62}},"16":{"start":{"line":69,"column":2},"end":{"line":71,"column":3}},"17":{"start":{"line":70,"column":4},"end":{"line":70,"column":59}},"18":{"start":{"line":72,"column":2},"end":{"line":78,"column":3}},"19":{"start":{"line":73,"column":4},"end":{"line":77,"column":5}},"20":{"start":{"line":74,"column":6},"end":{"line":74,"column":55}},"21":{"start":{"line":76,"column":6},"end":{"line":76,"column":62}},"22":{"start":{"line":79,"column":2},"end":{"line":81,"column":3}},"23":{"start":{"line":80,"column":4},"end":{"line":80,"column":75}},"24":{"start":{"line":82,"column":2},"end":{"line":84,"column":3}},"25":{"start":{"line":83,"column":4},"end":{"line":83,"column":73}},"26":{"start":{"line":85,"column":2},"end":{"line":91,"column":3}},"27":{"start":{"line":86,"column":4},"end":{"line":90,"column":5}},"28":{"start":{"line":87,"column":6},"end":{"line":87,"column":69}},"29":{"start":{"line":89,"column":6},"end":{"line":89,"column":76}},"30":{"start":{"line":92,"column":2},"end":{"line":94,"column":3}},"31":{"start":{"line":93,"column":4},"end":{"line":93,"column":82}},"32":{"start":{"line":95,"column":2},"end":{"line":97,"column":3}},"33":{"start":{"line":96,"column":4},"end":{"line":96,"column":82}},"34":{"start":{"line":98,"column":2},"end":{"line":100,"column":3}},"35":{"start":{"line":99,"column":4},"end":{"line":99,"column":64}},"36":{"start":{"line":101,"column":2},"end":{"line":103,"column":3}},"37":{"start":{"line":102,"column":4},"end":{"line":102,"column":71}},"38":{"start":{"line":104,"column":2},"end":{"line":106,"column":3}},"39":{"start":{"line":105,"column":4},"end":{"line":105,"column":51}},"40":{"start":{"line":108,"column":2},"end":{"line":108,"column":14}},"41":{"start":{"line":119,"column":0},"end":{"line":127,"column":1}},"42":{"start":{"line":120,"column":2},"end":{"line":120,"column":18}},"43":{"start":{"line":121,"column":2},"end":{"line":121,"column":40}},"44":{"start":{"line":122,"column":2},"end":{"line":124,"column":3}},"45":{"start":{"line":123,"column":4},"end":{"line":123,"column":41}},"46":{"start":{"line":126,"column":2},"end":{"line":126,"column":14}},"47":{"start":{"line":142,"column":0},"end":{"line":166,"column":1}},"48":{"start":{"line":143,"column":2},"end":{"line":143,"column":18}},"49":{"start":{"line":144,"column":2},"end":{"line":144,"column":44}},"50":{"start":{"line":145,"column":2},"end":{"line":147,"column":3}},"51":{"start":{"line":146,"column":4},"end":{"line":146,"column":61}},"52":{"start":{"line":148,"column":2},"end":{"line":150,"column":3}},"53":{"start":{"line":149,"column":4},"end":{"line":149,"column":51}},"54":{"start":{"line":151,"column":2},"end":{"line":157,"column":3}},"55":{"start":{"line":152,"column":4},"end":{"line":156,"column":5}},"56":{"start":{"line":153,"column":6},"end":{"line":153,"column":55}},"57":{"start":{"line":155,"column":6},"end":{"line":155,"column":62}},"58":{"start":{"line":158,"column":2},"end":{"line":160,"column":3}},"59":{"start":{"line":159,"column":4},"end":{"line":159,"column":58}},"60":{"start":{"line":161,"column":2},"end":{"line":163,"column":3}},"61":{"start":{"line":162,"column":4},"end":{"line":162,"column":51}},"62":{"start":{"line":165,"column":2},"end":{"line":165,"column":14}},"63":{"start":{"line":179,"column":0},"end":{"line":190,"column":1}},"64":{"start":{"line":180,"column":2},"end":{"line":180,"column":18}},"65":{"start":{"line":181,"column":2},"end":{"line":181,"column":45}},"66":{"start":{"line":182,"column":2},"end":{"line":184,"column":3}},"67":{"start":{"line":183,"column":4},"end":{"line":183,"column":61}},"68":{"start":{"line":185,"column":2},"end":{"line":187,"column":3}},"69":{"start":{"line":186,"column":4},"end":{"line":186,"column":51}},"70":{"start":{"line":189,"column":2},"end":{"line":189,"column":14}},"71":{"start":{"line":202,"column":0},"end":{"line":213,"column":1}},"72":{"start":{"line":203,"column":2},"end":{"line":203,"column":18}},"73":{"start":{"line":204,"column":2},"end":{"line":204,"column":45}},"74":{"start":{"line":205,"column":2},"end":{"line":207,"column":3}},"75":{"start":{"line":206,"column":4},"end":{"line":206,"column":61}},"76":{"start":{"line":208,"column":2},"end":{"line":210,"column":3}},"77":{"start":{"line":209,"column":4},"end":{"line":209,"column":51}},"78":{"start":{"line":212,"column":2},"end":{"line":212,"column":14}},"79":{"start":{"line":225,"column":0},"end":{"line":240,"column":1}},"80":{"start":{"line":226,"column":2},"end":{"line":226,"column":18}},"81":{"start":{"line":227,"column":2},"end":{"line":227,"column":45}},"82":{"start":{"line":228,"column":2},"end":{"line":230,"column":3}},"83":{"start":{"line":229,"column":4},"end":{"line":229,"column":49}},"84":{"start":{"line":231,"column":2},"end":{"line":237,"column":3}},"85":{"start":{"line":232,"column":4},"end":{"line":236,"column":5}},"86":{"start":{"line":233,"column":6},"end":{"line":233,"column":65}},"87":{"start":{"line":235,"column":6},"end":{"line":235,"column":72}},"88":{"start":{"line":239,"column":2},"end":{"line":239,"column":14}},"89":{"start":{"line":250,"column":0},"end":{"line":258,"column":1}},"90":{"start":{"line":251,"column":2},"end":{"line":251,"column":18}},"91":{"start":{"line":252,"column":2},"end":{"line":252,"column":45}},"92":{"start":{"line":253,"column":2},"end":{"line":255,"column":3}},"93":{"start":{"line":254,"column":4},"end":{"line":254,"column":41}},"94":{"start":{"line":257,"column":2},"end":{"line":257,"column":14}},"95":{"start":{"line":268,"column":0},"end":{"line":276,"column":1}},"96":{"start":{"line":269,"column":2},"end":{"line":269,"column":18}},"97":{"start":{"line":270,"column":2},"end":{"line":270,"column":40}},"98":{"start":{"line":271,"column":2},"end":{"line":273,"column":3}},"99":{"start":{"line":272,"column":4},"end":{"line":272,"column":41}},"100":{"start":{"line":275,"column":2},"end":{"line":275,"column":14}},"101":{"start":{"line":290,"column":0},"end":{"line":307,"column":1}},"102":{"start":{"line":291,"column":2},"end":{"line":291,"column":18}},"103":{"start":{"line":292,"column":2},"end":{"line":292,"column":47}},"104":{"start":{"line":293,"column":2},"end":{"line":295,"column":3}},"105":{"start":{"line":294,"column":4},"end":{"line":294,"column":61}},"106":{"start":{"line":296,"column":2},"end":{"line":298,"column":3}},"107":{"start":{"line":297,"column":4},"end":{"line":297,"column":51}},"108":{"start":{"line":299,"column":2},"end":{"line":301,"column":3}},"109":{"start":{"line":300,"column":4},"end":{"line":300,"column":55}},"110":{"start":{"line":302,"column":2},"end":{"line":304,"column":3}},"111":{"start":{"line":303,"column":4},"end":{"line":303,"column":61}},"112":{"start":{"line":306,"column":2},"end":{"line":306,"column":14}},"113":{"start":{"line":322,"column":0},"end":{"line":342,"column":1}},"114":{"start":{"line":323,"column":2},"end":{"line":323,"column":18}},"115":{"start":{"line":324,"column":2},"end":{"line":324,"column":44}},"116":{"start":{"line":325,"column":2},"end":{"line":327,"column":3}},"117":{"start":{"line":326,"column":4},"end":{"line":326,"column":61}},"118":{"start":{"line":328,"column":2},"end":{"line":330,"column":3}},"119":{"start":{"line":329,"column":4},"end":{"line":329,"column":51}},"120":{"start":{"line":331,"column":2},"end":{"line":333,"column":3}},"121":{"start":{"line":332,"column":4},"end":{"line":332,"column":53}},"122":{"start":{"line":334,"column":2},"end":{"line":336,"column":3}},"123":{"start":{"line":335,"column":4},"end":{"line":335,"column":49}},"124":{"start":{"line":337,"column":2},"end":{"line":339,"column":3}},"125":{"start":{"line":338,"column":4},"end":{"line":338,"column":51}},"126":{"start":{"line":341,"column":2},"end":{"line":341,"column":14}},"127":{"start":{"line":354,"column":0},"end":{"line":365,"column":1}},"128":{"start":{"line":355,"column":2},"end":{"line":355,"column":18}},"129":{"start":{"line":356,"column":2},"end":{"line":356,"column":45}},"130":{"start":{"line":357,"column":2},"end":{"line":359,"column":3}},"131":{"start":{"line":358,"column":4},"end":{"line":358,"column":49}},"132":{"start":{"line":360,"column":2},"end":{"line":362,"column":3}},"133":{"start":{"line":361,"column":4},"end":{"line":361,"column":47}},"134":{"start":{"line":364,"column":2},"end":{"line":364,"column":14}},"135":{"start":{"line":380,"column":0},"end":{"line":400,"column":1}},"136":{"start":{"line":381,"column":2},"end":{"line":381,"column":18}},"137":{"start":{"line":382,"column":2},"end":{"line":382,"column":41}},"138":{"start":{"line":383,"column":2},"end":{"line":385,"column":3}},"139":{"start":{"line":384,"column":4},"end":{"line":384,"column":61}},"140":{"start":{"line":386,"column":2},"end":{"line":388,"column":3}},"141":{"start":{"line":387,"column":4},"end":{"line":387,"column":74}},"142":{"start":{"line":389,"column":2},"end":{"line":391,"column":3}},"143":{"start":{"line":390,"column":4},"end":{"line":390,"column":58}},"144":{"start":{"line":392,"column":2},"end":{"line":394,"column":3}},"145":{"start":{"line":393,"column":4},"end":{"line":393,"column":70}},"146":{"start":{"line":395,"column":2},"end":{"line":397,"column":3}},"147":{"start":{"line":396,"column":4},"end":{"line":396,"column":51}},"148":{"start":{"line":399,"column":2},"end":{"line":399,"column":14}},"149":{"start":{"line":412,"column":0},"end":{"line":423,"column":1}},"150":{"start":{"line":413,"column":2},"end":{"line":413,"column":18}},"151":{"start":{"line":414,"column":2},"end":{"line":414,"column":41}},"152":{"start":{"line":415,"column":2},"end":{"line":417,"column":3}},"153":{"start":{"line":416,"column":4},"end":{"line":416,"column":49}},"154":{"start":{"line":418,"column":2},"end":{"line":420,"column":3}},"155":{"start":{"line":419,"column":4},"end":{"line":419,"column":49}},"156":{"start":{"line":422,"column":2},"end":{"line":422,"column":14}},"157":{"start":{"line":436,"column":0},"end":{"line":447,"column":1}},"158":{"start":{"line":437,"column":2},"end":{"line":437,"column":18}},"159":{"start":{"line":438,"column":2},"end":{"line":438,"column":44}},"160":{"start":{"line":439,"column":2},"end":{"line":441,"column":3}},"161":{"start":{"line":440,"column":4},"end":{"line":440,"column":49}},"162":{"start":{"line":442,"column":2},"end":{"line":444,"column":3}},"163":{"start":{"line":443,"column":4},"end":{"line":443,"column":49}},"164":{"start":{"line":446,"column":2},"end":{"line":446,"column":14}},"165":{"start":{"line":455,"column":0},"end":{"line":460,"column":1}},"166":{"start":{"line":456,"column":2},"end":{"line":456,"column":18}},"167":{"start":{"line":457,"column":2},"end":{"line":457,"column":48}},"168":{"start":{"line":459,"column":2},"end":{"line":459,"column":14}},"169":{"start":{"line":468,"column":0},"end":{"line":473,"column":1}},"170":{"start":{"line":469,"column":2},"end":{"line":469,"column":18}},"171":{"start":{"line":470,"column":2},"end":{"line":470,"column":47}},"172":{"start":{"line":472,"column":2},"end":{"line":472,"column":14}},"173":{"start":{"line":484,"column":0},"end":{"line":492,"column":1}},"174":{"start":{"line":485,"column":2},"end":{"line":485,"column":18}},"175":{"start":{"line":486,"column":2},"end":{"line":486,"column":47}},"176":{"start":{"line":487,"column":2},"end":{"line":489,"column":3}},"177":{"start":{"line":488,"column":4},"end":{"line":488,"column":51}},"178":{"start":{"line":491,"column":2},"end":{"line":491,"column":14}},"179":{"start":{"line":500,"column":0},"end":{"line":505,"column":1}},"180":{"start":{"line":501,"column":2},"end":{"line":501,"column":18}},"181":{"start":{"line":502,"column":2},"end":{"line":502,"column":38}},"182":{"start":{"line":504,"column":2},"end":{"line":504,"column":14}},"183":{"start":{"line":521,"column":0},"end":{"line":544,"column":1}},"184":{"start":{"line":522,"column":2},"end":{"line":522,"column":18}},"185":{"start":{"line":523,"column":2},"end":{"line":523,"column":48}},"186":{"start":{"line":524,"column":2},"end":{"line":526,"column":3}},"187":{"start":{"line":525,"column":4},"end":{"line":525,"column":61}},"188":{"start":{"line":527,"column":2},"end":{"line":529,"column":3}},"189":{"start":{"line":528,"column":4},"end":{"line":528,"column":51}},"190":{"start":{"line":530,"column":2},"end":{"line":532,"column":3}},"191":{"start":{"line":531,"column":4},"end":{"line":531,"column":55}},"192":{"start":{"line":533,"column":2},"end":{"line":535,"column":3}},"193":{"start":{"line":534,"column":4},"end":{"line":534,"column":57}},"194":{"start":{"line":536,"column":2},"end":{"line":538,"column":3}},"195":{"start":{"line":537,"column":4},"end":{"line":537,"column":68}},"196":{"start":{"line":539,"column":2},"end":{"line":541,"column":3}},"197":{"start":{"line":540,"column":4},"end":{"line":540,"column":63}},"198":{"start":{"line":543,"column":2},"end":{"line":543,"column":14}},"199":{"start":{"line":558,"column":0},"end":{"line":575,"column":1}},"200":{"start":{"line":559,"column":2},"end":{"line":559,"column":18}},"201":{"start":{"line":560,"column":2},"end":{"line":560,"column":51}},"202":{"start":{"line":561,"column":2},"end":{"line":563,"column":3}},"203":{"start":{"line":562,"column":4},"end":{"line":562,"column":61}},"204":{"start":{"line":564,"column":2},"end":{"line":566,"column":3}},"205":{"start":{"line":565,"column":4},"end":{"line":565,"column":51}},"206":{"start":{"line":567,"column":2},"end":{"line":569,"column":3}},"207":{"start":{"line":568,"column":4},"end":{"line":568,"column":55}},"208":{"start":{"line":570,"column":2},"end":{"line":572,"column":3}},"209":{"start":{"line":571,"column":4},"end":{"line":571,"column":57}},"210":{"start":{"line":574,"column":2},"end":{"line":574,"column":14}},"211":{"start":{"line":590,"column":0},"end":{"line":607,"column":1}},"212":{"start":{"line":591,"column":2},"end":{"line":591,"column":18}},"213":{"start":{"line":592,"column":2},"end":{"line":592,"column":52}},"214":{"start":{"line":593,"column":2},"end":{"line":595,"column":3}},"215":{"start":{"line":594,"column":4},"end":{"line":594,"column":61}},"216":{"start":{"line":596,"column":2},"end":{"line":598,"column":3}},"217":{"start":{"line":597,"column":4},"end":{"line":597,"column":57}},"218":{"start":{"line":599,"column":2},"end":{"line":601,"column":3}},"219":{"start":{"line":600,"column":4},"end":{"line":600,"column":71}},"220":{"start":{"line":602,"column":2},"end":{"line":604,"column":3}},"221":{"start":{"line":603,"column":4},"end":{"line":603,"column":63}},"222":{"start":{"line":606,"column":2},"end":{"line":606,"column":14}},"223":{"start":{"line":620,"column":0},"end":{"line":634,"column":1}},"224":{"start":{"line":621,"column":2},"end":{"line":621,"column":18}},"225":{"start":{"line":622,"column":2},"end":{"line":622,"column":50}},"226":{"start":{"line":623,"column":2},"end":{"line":625,"column":3}},"227":{"start":{"line":624,"column":4},"end":{"line":624,"column":61}},"228":{"start":{"line":626,"column":2},"end":{"line":628,"column":3}},"229":{"start":{"line":627,"column":4},"end":{"line":627,"column":59}},"230":{"start":{"line":629,"column":2},"end":{"line":631,"column":3}},"231":{"start":{"line":630,"column":4},"end":{"line":630,"column":69}},"232":{"start":{"line":633,"column":2},"end":{"line":633,"column":14}},"233":{"start":{"line":642,"column":0},"end":{"line":644,"column":1}},"234":{"start":{"line":643,"column":2},"end":{"line":643,"column":35}}},"branchMap":{"1":{"line":63,"type":"if","locations":[{"start":{"line":63,"column":2},"end":{"line":63,"column":2}},{"start":{"line":63,"column":2},"end":{"line":63,"column":2}}]},"2":{"line":66,"type":"if","locations":[{"start":{"line":66,"column":2},"end":{"line":66,"column":2}},{"start":{"line":66,"column":2},"end":{"line":66,"column":2}}]},"3":{"line":69,"type":"if","locations":[{"start":{"line":69,"column":2},"end":{"line":69,"column":2}},{"start":{"line":69,"column":2},"end":{"line":69,"column":2}}]},"4":{"line":72,"type":"if","locations":[{"start":{"line":72,"column":2},"end":{"line":72,"column":2}},{"start":{"line":72,"column":2},"end":{"line":72,"column":2}}]},"5":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":4},"end":{"line":73,"column":4}},{"start":{"line":73,"column":4},"end":{"line":73,"column":4}}]},"6":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":2},"end":{"line":79,"column":2}},{"start":{"line":79,"column":2},"end":{"line":79,"column":2}}]},"7":{"line":82,"type":"if","locations":[{"start":{"line":82,"column":2},"end":{"line":82,"column":2}},{"start":{"line":82,"column":2},"end":{"line":82,"column":2}}]},"8":{"line":85,"type":"if","locations":[{"start":{"line":85,"column":2},"end":{"line":85,"column":2}},{"start":{"line":85,"column":2},"end":{"line":85,"column":2}}]},"9":{"line":86,"type":"if","locations":[{"start":{"line":86,"column":4},"end":{"line":86,"column":4}},{"start":{"line":86,"column":4},"end":{"line":86,"column":4}}]},"10":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":2},"end":{"line":92,"column":2}},{"start":{"line":92,"column":2},"end":{"line":92,"column":2}}]},"11":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":2},"end":{"line":95,"column":2}},{"start":{"line":95,"column":2},"end":{"line":95,"column":2}}]},"12":{"line":98,"type":"if","locations":[{"start":{"line":98,"column":2},"end":{"line":98,"column":2}},{"start":{"line":98,"column":2},"end":{"line":98,"column":2}}]},"13":{"line":101,"type":"if","locations":[{"start":{"line":101,"column":2},"end":{"line":101,"column":2}},{"start":{"line":101,"column":2},"end":{"line":101,"column":2}}]},"14":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":2},"end":{"line":104,"column":2}},{"start":{"line":104,"column":2},"end":{"line":104,"column":2}}]},"15":{"line":122,"type":"if","locations":[{"start":{"line":122,"column":2},"end":{"line":122,"column":2}},{"start":{"line":122,"column":2},"end":{"line":122,"column":2}}]},"16":{"line":145,"type":"if","locations":[{"start":{"line":145,"column":2},"end":{"line":145,"column":2}},{"start":{"line":145,"column":2},"end":{"line":145,"column":2}}]},"17":{"line":148,"type":"if","locations":[{"start":{"line":148,"column":2},"end":{"line":148,"column":2}},{"start":{"line":148,"column":2},"end":{"line":148,"column":2}}]},"18":{"line":151,"type":"if","locations":[{"start":{"line":151,"column":2},"end":{"line":151,"column":2}},{"start":{"line":151,"column":2},"end":{"line":151,"column":2}}]},"19":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":4},"end":{"line":152,"column":4}},{"start":{"line":152,"column":4},"end":{"line":152,"column":4}}]},"20":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":2},"end":{"line":158,"column":2}},{"start":{"line":158,"column":2},"end":{"line":158,"column":2}}]},"21":{"line":161,"type":"if","locations":[{"start":{"line":161,"column":2},"end":{"line":161,"column":2}},{"start":{"line":161,"column":2},"end":{"line":161,"column":2}}]},"22":{"line":182,"type":"if","locations":[{"start":{"line":182,"column":2},"end":{"line":182,"column":2}},{"start":{"line":182,"column":2},"end":{"line":182,"column":2}}]},"23":{"line":185,"type":"if","locations":[{"start":{"line":185,"column":2},"end":{"line":185,"column":2}},{"start":{"line":185,"column":2},"end":{"line":185,"column":2}}]},"24":{"line":205,"type":"if","locations":[{"start":{"line":205,"column":2},"end":{"line":205,"column":2}},{"start":{"line":205,"column":2},"end":{"line":205,"column":2}}]},"25":{"line":208,"type":"if","locations":[{"start":{"line":208,"column":2},"end":{"line":208,"column":2}},{"start":{"line":208,"column":2},"end":{"line":208,"column":2}}]},"26":{"line":228,"type":"if","locations":[{"start":{"line":228,"column":2},"end":{"line":228,"column":2}},{"start":{"line":228,"column":2},"end":{"line":228,"column":2}}]},"27":{"line":231,"type":"if","locations":[{"start":{"line":231,"column":2},"end":{"line":231,"column":2}},{"start":{"line":231,"column":2},"end":{"line":231,"column":2}}]},"28":{"line":232,"type":"if","locations":[{"start":{"line":232,"column":4},"end":{"line":232,"column":4}},{"start":{"line":232,"column":4},"end":{"line":232,"column":4}}]},"29":{"line":253,"type":"if","locations":[{"start":{"line":253,"column":2},"end":{"line":253,"column":2}},{"start":{"line":253,"column":2},"end":{"line":253,"column":2}}]},"30":{"line":271,"type":"if","locations":[{"start":{"line":271,"column":2},"end":{"line":271,"column":2}},{"start":{"line":271,"column":2},"end":{"line":271,"column":2}}]},"31":{"line":293,"type":"if","locations":[{"start":{"line":293,"column":2},"end":{"line":293,"column":2}},{"start":{"line":293,"column":2},"end":{"line":293,"column":2}}]},"32":{"line":296,"type":"if","locations":[{"start":{"line":296,"column":2},"end":{"line":296,"column":2}},{"start":{"line":296,"column":2},"end":{"line":296,"column":2}}]},"33":{"line":299,"type":"if","locations":[{"start":{"line":299,"column":2},"end":{"line":299,"column":2}},{"start":{"line":299,"column":2},"end":{"line":299,"column":2}}]},"34":{"line":302,"type":"if","locations":[{"start":{"line":302,"column":2},"end":{"line":302,"column":2}},{"start":{"line":302,"column":2},"end":{"line":302,"column":2}}]},"35":{"line":325,"type":"if","locations":[{"start":{"line":325,"column":2},"end":{"line":325,"column":2}},{"start":{"line":325,"column":2},"end":{"line":325,"column":2}}]},"36":{"line":328,"type":"if","locations":[{"start":{"line":328,"column":2},"end":{"line":328,"column":2}},{"start":{"line":328,"column":2},"end":{"line":328,"column":2}}]},"37":{"line":331,"type":"if","locations":[{"start":{"line":331,"column":2},"end":{"line":331,"column":2}},{"start":{"line":331,"column":2},"end":{"line":331,"column":2}}]},"38":{"line":334,"type":"if","locations":[{"start":{"line":334,"column":2},"end":{"line":334,"column":2}},{"start":{"line":334,"column":2},"end":{"line":334,"column":2}}]},"39":{"line":337,"type":"if","locations":[{"start":{"line":337,"column":2},"end":{"line":337,"column":2}},{"start":{"line":337,"column":2},"end":{"line":337,"column":2}}]},"40":{"line":357,"type":"if","locations":[{"start":{"line":357,"column":2},"end":{"line":357,"column":2}},{"start":{"line":357,"column":2},"end":{"line":357,"column":2}}]},"41":{"line":360,"type":"if","locations":[{"start":{"line":360,"column":2},"end":{"line":360,"column":2}},{"start":{"line":360,"column":2},"end":{"line":360,"column":2}}]},"42":{"line":383,"type":"if","locations":[{"start":{"line":383,"column":2},"end":{"line":383,"column":2}},{"start":{"line":383,"column":2},"end":{"line":383,"column":2}}]},"43":{"line":386,"type":"if","locations":[{"start":{"line":386,"column":2},"end":{"line":386,"column":2}},{"start":{"line":386,"column":2},"end":{"line":386,"column":2}}]},"44":{"line":389,"type":"if","locations":[{"start":{"line":389,"column":2},"end":{"line":389,"column":2}},{"start":{"line":389,"column":2},"end":{"line":389,"column":2}}]},"45":{"line":392,"type":"if","locations":[{"start":{"line":392,"column":2},"end":{"line":392,"column":2}},{"start":{"line":392,"column":2},"end":{"line":392,"column":2}}]},"46":{"line":395,"type":"if","locations":[{"start":{"line":395,"column":2},"end":{"line":395,"column":2}},{"start":{"line":395,"column":2},"end":{"line":395,"column":2}}]},"47":{"line":415,"type":"if","locations":[{"start":{"line":415,"column":2},"end":{"line":415,"column":2}},{"start":{"line":415,"column":2},"end":{"line":415,"column":2}}]},"48":{"line":418,"type":"if","locations":[{"start":{"line":418,"column":2},"end":{"line":418,"column":2}},{"start":{"line":418,"column":2},"end":{"line":418,"column":2}}]},"49":{"line":439,"type":"if","locations":[{"start":{"line":439,"column":2},"end":{"line":439,"column":2}},{"start":{"line":439,"column":2},"end":{"line":439,"column":2}}]},"50":{"line":442,"type":"if","locations":[{"start":{"line":442,"column":2},"end":{"line":442,"column":2}},{"start":{"line":442,"column":2},"end":{"line":442,"column":2}}]},"51":{"line":487,"type":"if","locations":[{"start":{"line":487,"column":2},"end":{"line":487,"column":2}},{"start":{"line":487,"column":2},"end":{"line":487,"column":2}}]},"52":{"line":524,"type":"if","locations":[{"start":{"line":524,"column":2},"end":{"line":524,"column":2}},{"start":{"line":524,"column":2},"end":{"line":524,"column":2}}]},"53":{"line":527,"type":"if","locations":[{"start":{"line":527,"column":2},"end":{"line":527,"column":2}},{"start":{"line":527,"column":2},"end":{"line":527,"column":2}}]},"54":{"line":530,"type":"if","locations":[{"start":{"line":530,"column":2},"end":{"line":530,"column":2}},{"start":{"line":530,"column":2},"end":{"line":530,"column":2}}]},"55":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":2},"end":{"line":533,"column":2}},{"start":{"line":533,"column":2},"end":{"line":533,"column":2}}]},"56":{"line":536,"type":"if","locations":[{"start":{"line":536,"column":2},"end":{"line":536,"column":2}},{"start":{"line":536,"column":2},"end":{"line":536,"column":2}}]},"57":{"line":539,"type":"if","locations":[{"start":{"line":539,"column":2},"end":{"line":539,"column":2}},{"start":{"line":539,"column":2},"end":{"line":539,"column":2}}]},"58":{"line":561,"type":"if","locations":[{"start":{"line":561,"column":2},"end":{"line":561,"column":2}},{"start":{"line":561,"column":2},"end":{"line":561,"column":2}}]},"59":{"line":564,"type":"if","locations":[{"start":{"line":564,"column":2},"end":{"line":564,"column":2}},{"start":{"line":564,"column":2},"end":{"line":564,"column":2}}]},"60":{"line":567,"type":"if","locations":[{"start":{"line":567,"column":2},"end":{"line":567,"column":2}},{"start":{"line":567,"column":2},"end":{"line":567,"column":2}}]},"61":{"line":570,"type":"if","locations":[{"start":{"line":570,"column":2},"end":{"line":570,"column":2}},{"start":{"line":570,"column":2},"end":{"line":570,"column":2}}]},"62":{"line":593,"type":"if","locations":[{"start":{"line":593,"column":2},"end":{"line":593,"column":2}},{"start":{"line":593,"column":2},"end":{"line":593,"column":2}}]},"63":{"line":596,"type":"if","locations":[{"start":{"line":596,"column":2},"end":{"line":596,"column":2}},{"start":{"line":596,"column":2},"end":{"line":596,"column":2}}]},"64":{"line":599,"type":"if","locations":[{"start":{"line":599,"column":2},"end":{"line":599,"column":2}},{"start":{"line":599,"column":2},"end":{"line":599,"column":2}}]},"65":{"line":602,"type":"if","locations":[{"start":{"line":602,"column":2},"end":{"line":602,"column":2}},{"start":{"line":602,"column":2},"end":{"line":602,"column":2}}]},"66":{"line":623,"type":"if","locations":[{"start":{"line":623,"column":2},"end":{"line":623,"column":2}},{"start":{"line":623,"column":2},"end":{"line":623,"column":2}}]},"67":{"line":626,"type":"if","locations":[{"start":{"line":626,"column":2},"end":{"line":626,"column":2}},{"start":{"line":626,"column":2},"end":{"line":626,"column":2}}]},"68":{"line":629,"type":"if","locations":[{"start":{"line":629,"column":2},"end":{"line":629,"column":2}},{"start":{"line":629,"column":2},"end":{"line":629,"column":2}}]}},"code":["/**"," * Load dependencies"," */","var querystring = require('querystring'),","    format = require('./utils/format');","","/**"," * Expose `Collection`"," */","","module.exports = exports = Collection;","","/**"," * Create a new `Collection`"," * @constructor"," *"," * @return {Collection}"," * @api private"," */","","function Collection(){","  this.parameters = [];","}","","/**"," * Set a new parameter"," * Since all possibilities provided by Solr are not available in the `Collection` object, `set()` is there to fill this gap."," *"," * @param {String} parameter - string, special characters have to be correctly encoded or the request will fail."," *"," * @return {Collection} - allow chaining"," * @api public"," */","Collection.prototype.set = function(parameter){","  var self = this;","  this.parameters.push(parameter);","  return self;","}","","/**"," * Create a new Collection"," *"," * @param {Object} options - Set of options for creating a new collection"," * @param {String} name - The name of the collection to be created"," * @param {String} [routerName] - The router name that will be used. Default is 'compositeId'. 'implicit' is the only other valid option."," * @param {Number} [numShards] - Number of shards to be created as part of the collection. Required when using 'compositeId' router."," * @param {String|Array} [shards] - A comma separated list of shard names, or an array of shard names. Required if using 'implicit' router."," * @param {Number} [replicationFactor] - The number of replicas to be created for each shard."," * @param {Number} [maxShardsPerNode] - Sets a limit on the number of replicas CREATE will spread to each node."," * @param {String|Array} [createNodeSet] - Defines the nodes to spread the shards/ replicas across. Comma separated list of node names, or an array of node names."," * @param {Boolean} [createNodeSetShuffle] - Controls whether or not the shard-replicas created will be assigned to the nodes in createNodeSet in a sequential or shuffled order."," * @param {String} [collectionConfigName] - Defines name of the configurations to use for this collection. Must already be stored in ZooKeeper."," * @param {String} [routerField] - If specified, router will look at the value of the field in an input document to compute the hash and identify a shard instead of looking at the uniqueKey field."," * @param {Boolean} [autoAddReplicas] - When set to true, enables auto addition of replicas on shared file systems."," * @param {String} [async] - Request ID to track this action which will be processed asynchonously.",""," * @return {Collection}"," * @api public"," */","Collection.prototype.create = function(options) {","  var self = this;","  this.parameters.push('action=CREATE');","  if(options.name){","    this.parameters.push('name=' + options.name);","  }","  if(options.routerName){","    this.parameters.push('router.name=' + options.routerName);","  }","  if(options.numShards !== undefined){","    this.parameters.push('numShards=' + options.numShards);","  }","  if(options.shards !== undefined){","    if( typeof(options.shards) === 'string') {","      this.parameters.push('shards=' + options.shards);","    }else{","      this.parameters.push('shards=' + options.shards.join());","    }","  }","  if(options.replicationFactor !== undefined){","    this.parameters.push('replicationFactor=' + options.replicationFactor);","  }","  if(options.maxShardsPerNode !== undefined){","    this.parameters.push('maxShardsPerNode=' + options.maxShardsPerNode);","  }","  if(options.createNodeSet !== undefined){","    if( typeof(options.createNodeSet) === 'string') {","      this.parameters.push('createNodeSet=' + options.createNodeSet);","    }else{","      this.parameters.push('createNodeSet=' + options.createNodeSet.join());","    }","  }","  if(options.createNodeSetShuffle !== undefined){","    this.parameters.push('createNodeSet.shuffle=' + options.createNodeSetShuffle);","  }","  if(options.collectionConfigName){","    this.parameters.push('collection.configName=' + options.collectionConfigName);","  }","  if(options.routerField){","    this.parameters.push('router.field=' + options.routerField);","  }","  if(options.autoAddReplicas !== undefined){","    this.parameters.push('autoAddReplicas=' + options.autoAddReplicas);","  }","  if(options.async){","    this.parameters.push('async=' + options.async);","  }","","  return self;","}","","/**"," * Reload a Collection"," * "," * @param {String} name - Name of the Collection to be reloaded"," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.reload = function(name) {","  var self = this;","  this.parameters.push('action=RELOAD');","  if(name){","    this.parameters.push('name=' + name);","  }","","  return self;","}","","/**"," * Split a shard"," * "," * @param {Object} options - Options for splitting the shard"," * @param {String} collection - Name of the Collection that includes the shard to be split"," * @param {String} shard - Name of the shard to be split"," * @param {String|Array} [ranges] - Comma separated list of hash ranges in hexadecimal. If an array is supplied, it will be joined with commas."," * @param {String} [splitKey] - The key to use for splitting the index"," * @param {String} [async] - Request ID to track this action, processed asynchonously."," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.splitShard = function(options) {","  var self = this;","  this.parameters.push('action=SPLITSHARD');","  if(options.collection){","    this.parameters.push('collection=' + options.collection);","  }","  if(options.shard){","    this.parameters.push('shard=' + options.shard);","  }","  if(options.ranges !== undefined){","    if(typeof(ranges) === 'string'){","      this.parameters.push('ranges=' + options.ranges);","    }else{","      this.parameters.push('ranges=' + options.ranges.join());","    }","  }","  if(options.splitKey){","    this.parameters.push('split.key=' + options.splitKey);","  }","  if(options.async){","    this.parameters.push('async=' + options.async);","  }","","  return self;","}","","/**"," * Create a shard"," * Can only be used for collections that use the 'implicit' router. Use SPLITSHARD for the `compositId` router."," * "," * @param {Object} options - Options for creating the shard"," * @param {String} collection - Name of the Collection where the shard should be created"," * @param {String} shard - Name of the shard to be created"," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.createShard = function(options) {","  var self = this;","  this.parameters.push('action=CREATESHARD');","  if(options.collection){","    this.parameters.push('collection=' + options.collection);","  }","  if(options.shard){","    this.parameters.push('shard=' + options.shard);","  }","","  return self;","}","","/**"," * Delete a shard"," * "," * @param {Object} options - Options for deleting the shard"," * @param {String} collection - Name of the Collection that includes the shard to be deleted"," * @param {String} shard - Name of the shard to be deleted"," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.deleteShard = function(options) {","  var self = this;","  this.parameters.push('action=DELETESHARD');","  if(options.collection){","    this.parameters.push('collection=' + options.collection);","  }","  if(options.shard){","    this.parameters.push('shard=' + options.shard);","  }","","  return self;","}","","/**"," * Create/ Modify alias for a collection"," * "," * @param {Object} options - Options for creation of the collection alias."," * @param {String} name - The alias name to be created."," * @param {String|Array} collections - A comma separated list of collections to be aliased. If an array is provided, it will be joined by commas."," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.createAlias = function(options) {","  var self = this;","  this.parameters.push('action=CREATEALIAS');","  if(options.name){","    this.parameters.push('name=' + options.name);","  }","  if(options.collections !== undefined){","    if(typeof(options.collections) === 'string'){","      this.parameters.push('collections=' + options.collections);","    } else{","      this.parameters.push('collections=' + options.collections.join());","    }","  }","","  return self;","}","","/**"," * Delete a collection alias"," * "," * @param {String} name - Name of the alias to delete"," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.deleteAlias = function(name) {","  var self = this;","  this.parameters.push('action=DELETEALIAS');","  if(name){","    this.parameters.push('name=' + name);","  }","","  return self;","}","","/**"," * Delete a Collection"," *"," * @param {String} name - The name of the collection to be deleted"," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.delete = function(name) {","  var self = this;","  this.parameters.push('action=DELETE');","  if(name){","    this.parameters.push('name=' + name);","  }","","  return self;","}","","/**"," * Delete a replica"," * "," * @param {Object} options - Options for deleting the replica"," * @param {String} collection - Name of the Collection that includes the replica to be deleted"," * @param {String} shard - Name of the shard that includes the replica to be deleted"," * @param {String} replica - The name of the replica to remove."," * @param {Boolean} [onlyIfDown] - If true, deletion will only execute if the replica is down/ not active."," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.deleteReplica = function(options) {","  var self = this;","  this.parameters.push('action=DELETEREPLICA');","  if(options.collection){","    this.parameters.push('collection=' + options.collection);","  }","  if(options.shard){","    this.parameters.push('shard=' + options.shard);","  }","  if(options.replica){","    this.parameters.push('replica=' + options.replica);","  }","  if(options.onlyIfDown !== undefined){","    this.parameters.push('onlyIfDown=' + options.onlyIfDown);","  }","","  return self;","}","","/**"," * Add replica"," * "," * @param {Object} options - Options for adding the replica"," * @param {String} collection - Name of the Collection"," * @param {String} shard - Name of the shard to which the replica will be added"," * @param {String} [route] - If the exact shard name is not known, route can be passed and the system will identify the shard. Ignored if shard is specified."," * @param {String} [node] - Name of the node where the replica should be created."," * @param {String} [async] - Request ID to track this action, which will be processed asynchronously."," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.addReplica = function(options) {","  var self = this;","  this.parameters.push('action=ADDREPLICA');","  if(options.collection){","    this.parameters.push('collection=' + options.collection);","  }","  if(options.shard){","    this.parameters.push('shard=' + options.shard);","  }","  if(options.route){","    this.parameters.push('_route_=' + options.route);","  }","  if(options.node){","    this.parameters.push('node=' + options.node);","  }","  if(options.async){","    this.parameters.push('async=' + options.async);","  }","","  return self;","}","","/**"," * Cluster Properties"," * "," * @param {Object} options - Options for cluster properties"," * @param {String} name - Name of the property. Two supported properties are 'urlScheme' and 'autoAddReplicas.' Others will be rejected by Solr."," * @param {String} val - Value of the property. If the value is empty or null, the property is unset."," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.clusterProp = function(options) {","  var self = this;","  this.parameters.push('action=CLUSTERPROP');","  if(options.name){","    this.parameters.push('name=' + options.name);","  }","  if(options.val !== undefined){","    this.parameters.push('val=' + options.val);","  }","","  return self;","}","","/**"," * Migrate documents to another collection"," * "," * @param {Object} options - Options for document migration"," * @param {String} collection - Name of the source collection from which documents will be split."," * @param {String} targetCollection - Name of the target collection to which documents will be migrated."," * @param {String} splitKey - The routing key prefix."," * @param {Number} [forwardTimeout] - The timeout, in seconds, until which write requests made to the source collection for the given split.key will be forwarded to the target shard. Default is 60 seconds."," * @param {String} [async] - Request ID to track this action which will be processed asynchronously."," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.migrate = function(options) {","  var self = this;","  this.parameters.push('action=MIGRATE');","  if(options.collection){","    this.parameters.push('collection=' + options.collection);","  }","  if(options.targetCollection){","    this.parameters.push('target.collection=' + options.targetCollection);","  }","  if(options.splitKey){","    this.parameters.push('split.key=' + options.splitKey);","  }","  if(options.forwardTimeout !== undefined){","    this.parameters.push('forward.timeout=' + options.forwardTimeout);","  }","  if(options.async){","    this.parameters.push('async=' + options.async);","  }","","  return self;","}","","/**"," * Add Role"," * "," * @param {Object} options - Options for adding the role"," * @param {String} role - Name of role. Only current supported role is 'overseer'"," * @param {String} node - Name of the node."," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.addRole = function(options) {","  var self = this;","  this.parameters.push('action=ADDROLE');","  if(options.role){","    this.parameters.push('role=' + options.role);","  }","  if(options.node){","    this.parameters.push('node=' + options.node);","  }","","  return self;","}","","/**"," * Remove Role"," * Undo roles assigned using ADDROLE operation"," * "," * @param {Object} options - Options for removing the role"," * @param {String} role - Name of role. Only current supported role is 'overseer'"," * @param {String} node - Name of the node."," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.removeRole = function(options) {","  var self = this;","  this.parameters.push('action=REMOVEROLE');","  if(options.role){","    this.parameters.push('role=' + options.role);","  }","  if(options.node){","    this.parameters.push('node=' + options.node);","  }","","  return self;","}","","/**"," * Overseer status and statistics"," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.overseerStatus = function() {","  var self = this;","  this.parameters.push('action=OVERSEERSTATUS');","","  return self;","}","","/**"," * Cluster status"," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.clusterStatus = function() {","  var self = this;","  this.parameters.push('action=CLUSTERSTATUS');","","  return self;","}","","/**"," * Request status"," * request the status of an already submitted Asynchronous Collection API call."," *"," * @param {String} requestid - User-defined request ID from the submitted API call. A value of '-1' will clear the stored states for the already completed/ failed tasks."," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.requestStatus = function(requestid) {","  var self = this;","  this.parameters.push('action=REQUESTSTATUS');","  if(requestid){","    this.parameters.push('requestid=' + requestid);","  }","","  return self;","}","","/**"," * List collections"," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.list = function() {","  var self = this;","  this.parameters.push('action=LIST');","","  return self;","}","","/**"," * Add Replica property"," * "," * @param {Object} options - Options for replica property"," * @param {String} collection - Name of collection this replica belongs to."," * @param {String} shard - Name of the shard the replica belongs to."," * @param {String} replica - The name of the replica"," * @param {String} property - The property to add"," * @param {String} propertyValue - The value to assign to the property."," * @param {Boolean} [shardUnique] - If set to true, then setting this property in one replica will remove the property from all other replicas in that shard."," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.addReplicaProp = function(options) {","  var self = this;","  this.parameters.push('action=ADDREPLICAPROP');","  if(options.collection){","    this.parameters.push('collection=' + options.collection);","  }","  if(options.shard){","    this.parameters.push('shard=' + options.shard);","  }","  if(options.replica){","    this.parameters.push('replica=' + options.replica);","  }","  if(options.property){","    this.parameters.push('property=' + options.property);","  }","  if(options.propertyValue !== undefined){","    this.parameters.push('property.value=' + options.propertyValue);","  }","  if(options.shardUnique !== undefined){","    this.parameters.push('shardUnique=' + options.shardUnique);","  }","","  return self;","}","","/**"," * Delete Replica property"," * "," * @param {Object} options - Options for replica property"," * @param {String} collection - Name of collection this replica belongs to."," * @param {String} shard - Name of the shard the replica belongs to."," * @param {String} replica - The name of the replica"," * @param {String} property - The property to remove"," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.deleteReplicaProp = function(options) {","  var self = this;","  this.parameters.push('action=DELETEREPLICAPROP');","  if(options.collection){","    this.parameters.push('collection=' + options.collection);","  }","  if(options.shard){","    this.parameters.push('shard=' + options.shard);","  }","  if(options.replica){","    this.parameters.push('replica=' + options.replica);","  }","  if(options.property){","    this.parameters.push('property=' + options.property);","  }","","  return self;","}","","/**"," * Balance a property"," * "," * @param {Object} options - Options for replica property"," * @param {String} collection - Name of collection to balance the property in."," * @param {String} property - The property to balance"," * @param {Boolean} [onlyActiveNodes] - Default is true. When true, property is instantiated on active nodes only. If false, inactive nodes will be included."," * @param {Boolean} [shardUnique] - If set to true, then setting this property in one replica will r","emove the property from all other replicas in that shard."," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.balanceShardUnique = function(options) {","  var self = this;","  this.parameters.push('action=BALANCESHARDUNIQUE');","  if(options.collection){","    this.parameters.push('collection=' + options.collection);","  }","  if(options.property){","    this.parameters.push('property=' + options.property);","  }","  if(options.onlyActiveNodes !== undefined){","    this.parameters.push('onlyActiveNodes=' + options.onlyActiveNodes);","  }","  if(options.shardUnique !== undefined){","    this.parameters.push('shardUnique=' + options.shardUnique);","  }","","  return self;","}","","/**"," * Rebalance leaders"," * "," * @param {Object} options - Options for replica property"," * @param {String} collection - Name of collection to rebalance preferredLeaders on."," * @param {Number} [maxAtOnce] - The maximum number of reassignments to have queue up at once."," * @param {Number} [maxWaitSeconds] - Timeout value (seconds) when waiting for leaders to be reassigned. Default is 60."," *"," * @return {Collection}"," * @api public"," */","Collection.prototype.rebalanceLeaders = function(options) {","  var self = this;","  this.parameters.push('action=REBALANCELEADERS');","  if(options.collection){","    this.parameters.push('collection=' + options.collection);","  }","  if(options.maxAtOnce !== undefined){","    this.parameters.push('maxAtOnce=' + options.maxAtOnce);","  }","  if(options.maxWaitSeconds !== undefined){","    this.parameters.push('maxWaitSeconds=' + options.maxWaitSeconds);","  }","","  return self;","}","","/**"," * Build a querystring with the array of `this.parameters`."," *"," * @return {String}"," * @api private"," */","Collection.prototype.build = function(){","  return this.parameters.join('&');","}",""],"l":{"4":1,"11":1,"21":1,"22":0,"34":1,"35":0,"36":0,"37":0,"60":1,"61":0,"62":0,"63":0,"64":0,"66":0,"67":0,"69":0,"70":0,"72":0,"73":0,"74":0,"76":0,"79":0,"80":0,"82":0,"83":0,"85":0,"86":0,"87":0,"89":0,"92":0,"93":0,"95":0,"96":0,"98":0,"99":0,"101":0,"102":0,"104":0,"105":0,"108":0,"119":1,"120":0,"121":0,"122":0,"123":0,"126":0,"142":1,"143":0,"144":0,"145":0,"146":0,"148":0,"149":0,"151":0,"152":0,"153":0,"155":0,"158":0,"159":0,"161":0,"162":0,"165":0,"179":1,"180":0,"181":0,"182":0,"183":0,"185":0,"186":0,"189":0,"202":1,"203":0,"204":0,"205":0,"206":0,"208":0,"209":0,"212":0,"225":1,"226":0,"227":0,"228":0,"229":0,"231":0,"232":0,"233":0,"235":0,"239":0,"250":1,"251":0,"252":0,"253":0,"254":0,"257":0,"268":1,"269":0,"270":0,"271":0,"272":0,"275":0,"290":1,"291":0,"292":0,"293":0,"294":0,"296":0,"297":0,"299":0,"300":0,"302":0,"303":0,"306":0,"322":1,"323":0,"324":0,"325":0,"326":0,"328":0,"329":0,"331":0,"332":0,"334":0,"335":0,"337":0,"338":0,"341":0,"354":1,"355":0,"356":0,"357":0,"358":0,"360":0,"361":0,"364":0,"380":1,"381":0,"382":0,"383":0,"384":0,"386":0,"387":0,"389":0,"390":0,"392":0,"393":0,"395":0,"396":0,"399":0,"412":1,"413":0,"414":0,"415":0,"416":0,"418":0,"419":0,"422":0,"436":1,"437":0,"438":0,"439":0,"440":0,"442":0,"443":0,"446":0,"455":1,"456":0,"457":0,"459":0,"468":1,"469":0,"470":0,"472":0,"484":1,"485":0,"486":0,"487":0,"488":0,"491":0,"500":1,"501":0,"502":0,"504":0,"521":1,"522":0,"523":0,"524":0,"525":0,"527":0,"528":0,"530":0,"531":0,"533":0,"534":0,"536":0,"537":0,"539":0,"540":0,"543":0,"558":1,"559":0,"560":0,"561":0,"562":0,"564":0,"565":0,"567":0,"568":0,"570":0,"571":0,"574":0,"590":1,"591":0,"592":0,"593":0,"594":0,"596":0,"597":0,"599":0,"600":0,"602":0,"603":0,"606":0,"620":1,"621":0,"622":0,"623":0,"624":0,"626":0,"627":0,"629":0,"630":0,"633":0,"642":1,"643":0}},"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/error/solr-error.js":{"path":"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/error/solr-error.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":1,"12":1,"13":0},"b":{"1":[0,0],"2":[0,0]},"f":{"1":0,"2":0},"fnMap":{"1":{"name":"SolrError","line":22,"loc":{"start":{"line":22,"column":0},"end":{"line":22,"column":39}}},"2":{"name":"decode","line":43,"loc":{"start":{"line":43,"column":0},"end":{"line":43,"column":21}}}},"statementMap":{"1":{"start":{"line":5,"column":0},"end":{"line":6,"column":26}},"2":{"start":{"line":12,"column":0},"end":{"line":12,"column":27}},"3":{"start":{"line":22,"column":0},"end":{"line":31,"column":1}},"4":{"start":{"line":23,"column":3},"end":{"line":23,"column":20}},"5":{"start":{"line":24,"column":3},"end":{"line":27,"column":4}},"6":{"start":{"line":25,"column":6},"end":{"line":25,"column":63}},"7":{"start":{"line":26,"column":6},"end":{"line":26,"column":65}},"8":{"start":{"line":28,"column":3},"end":{"line":28,"column":43}},"9":{"start":{"line":29,"column":3},"end":{"line":29,"column":50}},"10":{"start":{"line":30,"column":3},"end":{"line":30,"column":27}},"11":{"start":{"line":33,"column":0},"end":{"line":33,"column":36}},"12":{"start":{"line":43,"column":0},"end":{"line":49,"column":1}},"13":{"start":{"line":44,"column":2},"end":{"line":48,"column":38}}},"branchMap":{"1":{"line":24,"type":"if","locations":[{"start":{"line":24,"column":3},"end":{"line":24,"column":3}},{"start":{"line":24,"column":3},"end":{"line":24,"column":3}}]},"2":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":24},"end":{"line":26,"column":31}},{"start":{"line":26,"column":35},"end":{"line":26,"column":52}}]}},"code":["/**"," * Module dependencies"," */","","var HTTPError = require('httperror'),","   util = require('util');","","/**"," * Expose `SolrError`"," */","","module.exports = SolrError;","","/**"," * Create a new `SolrError`"," * @constructor"," *"," * @return {SolrError}"," * @api private"," */","","function SolrError(req,res,htmlMessage){","   var message = '';","   if(htmlMessage){","      var matches = htmlMessage.match(/<pre>([\\s\\S]+)<\\/pre>/);","      message = decode((matches || ['', htmlMessage])[1].trim());","   }","   HTTPError.call(this, req, res, message);","   Error.captureStackTrace(this,arguments.callee);","   this.name = 'SolrError';","}","","util.inherits(SolrError, HTTPError);","","/**"," * Decode few HTML entities: &<>'\""," *"," * @param {String} str -"," *"," * @return {String}"," * @api private"," */","function decode(str) {","  return str.replace(/&amp;/g,'&')","            .replace(/&lt;/gm, '<')","            .replace(/&gt;/gm, '>')","            .replace(/&apos;/gm, '\\'')","            .replace(/&quot;/gm, '\"');","};",""],"l":{"5":1,"12":1,"22":1,"23":0,"24":0,"25":0,"26":0,"28":0,"29":0,"30":0,"33":1,"43":1,"44":0}},"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/utils/type.js":{"path":"/home/travis/build/npmtest/node-npmtest-solr-client/node_modules/solr-client/lib/utils/type.js","s":{"1":1,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0},"b":{"1":[0,0],"2":[0,0],"3":[0,0]},"f":{"1":0},"fnMap":{"1":{"name":"isNumber","line":7,"loc":{"start":{"line":7,"column":19},"end":{"line":7,"column":52}}}},"statementMap":{"1":{"start":{"line":7,"column":0},"end":{"line":21,"column":2}},"2":{"start":{"line":8,"column":2},"end":{"line":8,"column":50}},"3":{"start":{"line":9,"column":2},"end":{"line":9,"column":30}},"4":{"start":{"line":11,"column":2},"end":{"line":20,"column":3}},"5":{"start":{"line":12,"column":4},"end":{"line":12,"column":16}},"6":{"start":{"line":15,"column":4},"end":{"line":19,"column":5}},"7":{"start":{"line":16,"column":6},"end":{"line":16,"column":55}},"8":{"start":{"line":18,"column":6},"end":{"line":18,"column":37}}},"branchMap":{"1":{"line":8,"type":"cond-expr","locations":[{"start":{"line":8,"column":35},"end":{"line":8,"column":39}},{"start":{"line":8,"column":42},"end":{"line":8,"column":48}}]},"2":{"line":11,"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":2}},{"start":{"line":11,"column":2},"end":{"line":11,"column":2}}]},"3":{"line":15,"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":15,"column":4}},{"start":{"line":15,"column":4},"end":{"line":15,"column":4}}]}},"code":["/**"," *"," * @param value - The value to check against"," * @param strict - Pass true if you want to make sure the number is fully and only composed of digits, false to just check if we can extract a number via parseInt(). Default to true."," * @returns boolean"," */","exports.isNumber = function isNumber(value, strict) {","  strict = (strict === undefined ? true : strict);","  var digitRegex = /^\\-?\\d+$/; // At least 1 digit, possibly a minus sign before","","  if (typeof value === 'number') {","    return true;","  } else {","    // String ?","    if (strict) {","      return (('' + value).match(digitRegex) !== null);","    } else {","      return !isNaN(parseInt(value));","    }","  }","};",""],"l":{"7":1,"8":0,"9":0,"11":0,"12":0,"15":0,"16":0,"18":0}}}